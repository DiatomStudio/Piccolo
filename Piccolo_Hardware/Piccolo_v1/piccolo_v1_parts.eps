%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: piccolo_v1_parts.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Tiago
%%CreationDate: 1/26/2014
%%BoundingBox: 0 0 1648 770
%%HiResBoundingBox: 0 0 1647.6343 769.3350
%%CropBox: 0 0 1647.6343 769.3350
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.351735, 2008/07/22-18:11:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:MetadataDate>2013-12-19T00:15:32Z</xmp:MetadataDate>
         <xmp:CreateDate>2013-12-19T00:15:31Z</xmp:CreateDate>
         <xmp:ModifyDate>2013-12-19T00:15:32Z</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>120</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAeAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9H+iRFp0dvaQSGZA1xJI&#xA;ikqoVatSq8t28cqrlQdhx7zMpSFHbdF/ow1+xa0/5h/+b8lw+5o/Mecv9N+x36M/yLX/AKR/+b8e&#xA;D3fJfzHnL/TfsQ95bPaxLKYbR4w375vQ48E3+KnMlj0FBucBj3BsxZBI1cgenq5nu5fap2iSTLJL&#xA;Pa2trAlArvGGqQSrA/EtKEd/HIx35gBsykRIEZTkff8ALoqBLGgrNYV7/ul/6qZLbyYXPuyfP9ji&#xA;lj2msPf90v8A1Ux28lufdk+f7F8FuRqDW89nb+h6fOKZY1BYgqGHGrUpyxA3ogInP93xRlK73Fo3&#xA;9H2H/LNF/wAAv9Mlwjucfxp/zj81OW30mGnqxwR8vs81Ra08K4kRDKM8suRkfmp/7gv+XX/kng9P&#xA;ky/ff0vtVo7PTZEDxwQuh6MqoQfpAw8IYHLkBomX2pB5tsPN4axPlK10lgGk/SC6mkgBTiPT9Mw7&#xA;g8q1rjwjuR40/wCcfmx3V9L/ADpma2OnR+W7dBLMLpeEzMYaJ6JTmjgPXlyrtTxx4R3L40/5x+bL&#xA;NH03UbXQbAa0bafW1MJvbm1iEURlaVSwjFKhRXiK7064DEM8eWRJBJ5H7imlxDFLewrKiyKI5SAw&#xA;BFeUfjhIssYSMYGjW4/SgY3if1HOnQQ26BWWeYqisrioI+BhUdCMgK7nJkJChxyJN7Dy+KnBcxS3&#xA;EsLaXDAqFVhmmKpHPyH+6jwJO+24HtXJmMQBy39+3zFfK2JEv50vsP3S2RFsInuWhuNMjgAYpHLR&#xA;WV2Ch9vhU0oTQ+xyIq6pEyREGMye8d3T8e8I39H2H/LNF/wC/wBMlwjuaPGn/OPzd+j7D/lmi/4B&#xA;f6Y8I7l8af8AOPzYPp1n+bSugv7Hy3JEJxzMYuUc2/M1/ZdRJwpTqK48I7l8af8AOPzQltB+c4EV&#xA;td6T5dLs1Hvbd5eKovGrFZI6lmqaKFp1qw25PCO5fGn/ADj82b6JHdpFH9dhhgv2tbdr2K2FIROe&#xA;fqcK78eXSvbECimcjKAs3uf0IW7kgt9PtnWCIzSRBy7wmWp4qPi4lSKlt2JyqRAAczHGU5yFmgf5&#xA;1fj3Kzm1/SsdmttCEJIesNSaIXNH2UdV8e/TbJbcVU1gS8Iz4pX7/OuXPvUxHcyXLRx2loIyZPTd&#xA;06iN+BrQnffwwUb5BnxREbMp3t17xawOyukc1pDyleSOIxW5kUmIb8jyXjU1Ar4VwfD7E1YJEpbA&#xA;HeVc/giVs7kxs/1S2UgqVRol5kb8wQHK16cfip407S4T3BqOWN1xS+fy6X79lNGs5FZ41hdUJDMt&#xA;lIwBHUbHqMG34DMiYNHiH+eFfTo7G6jlf0oJUWTgjpFwBAVSahuRryJyUAD3NWczgQLkNu9UvrGy&#xA;WyuCLeMERuQQi1B4n2wyiKOzDDmnxjc8x1as/wDjw/5hW/5lYx6e5OX+P+t/xSmi6ZDp8FxdRoeU&#xA;as8rJzJPDmzMaE9ASScGwFlmTklMxiTz76603eWdu0cH1aKJGlY8SY0of3bMAaqaAkCvfGUR0Riy&#xA;yBPETt5nvHmlupixZGIgtlVPiiWfjyjmrJE7QABvjPHjtTL8JIEwOIenp+nyUg8ULNni5/I/pTVA&#xA;CtupFVN1NUHp8JlYfcQDlP62J6/1B/vVI2st3ZSyWt0Y7iR39KdmkkjAEpA/drJGCOIpsRlmIxu5&#xA;AkeRr7d0ZZGJqgNh0HcrNElvLalpG5SP6cnKRyjVjc0CuzDdsjKgiJMhLbkO4d4Q4aRLew9JuDNA&#xA;qBgASA7wqSAdq0O1cr6D8dzdQMp3v6v0SVzLbg0OqEFSVYcoK1GxB+DsclY72vgl/M/3X61hGnM4&#xA;kkvubhkYN6iL/dkkD4ONRVtwcG3eyHiAUId/Q9fehoLazS4m9S8g+r0C23Bo1lAZCr83ABPXbf55&#xA;IjHQo79eTIzyn+H/AHX9iKjNhECIdQ9MGnIepExJVQtSXDMTRR3yIrvYy4zzhfwPv6LJrqNUZYdS&#xA;MtwkTzJHWE8hEBWoVOlSK0yR5EgrCG4EoUDt/F+tNMk4ihe/3K/8ZYf+Tq5GTbi5/A/cXP8A73w/&#xA;8Ypf+JR49VH0H3j9KXQTN6Nu7FEWIRxK8gqq1hDl+q7moUb/AK8gC5U47kbm7O39aq/T/YoG5u42&#xA;u5pWVop1do1lb1IX9H4AsMdV4cxuasanplkspIAIiKvfv96I4Ig2OInbb+ar3U9IZolkNbOWSMPU&#xA;8h/oplXfxUSDf+OVk/Z+pOOG4NfUAf8AZ1+hMfqUP80v/I6X/mrJ8Li+KfL5D9SXtHdwuY5+TPN8&#xA;Fq0JunRXAY1mIYhV6d8MMUiCbG3n+L+DbLNCxQ9+0fs2RVtZS+mfrTH1K7elLNSlP8puuREe9jky&#xA;i/Ty8xH9S9EEV4iIzlXjdmVnZ91ZAD8RNPtHDyLEnigSe8dK716f73zf8Yov+JSY9UH6B7z+hAv/&#xA;ALww/wDMBL/xGPIdPg5A+s/8MH6Vc/71j/mJ/wCxbJdfj+hr/g/zf9+61/3oj/6Ov+T64jn8/vXJ&#xA;9J/zP9y1pnxyXLsN45pIk9lLlyR8y2/yGMOq6jYRHeAfsr8e9H5NxkptzXT9Tbs7zMp8VZAVI+YN&#xA;cqHIudP+8h7o/emFv/fXP/GUf8m0yY6uLPlH3fpLV/8A7w3P/GJ/+InGXIrh+uPvCHs/+PD/AJhW&#xA;/wCZWCPT3NuX+P8Arf8AFICVFl0hjIC/H6vEi9QFdYq/D035mvtt0yB3j8nJieHLt/SP+6/U3pjx&#xA;Pdw8IWiKiEO7IU9RjFMS4qPiG/2sY0ucERNm+fXl6o7eSsEhZL5pE5hI5GHTkP3s4PEmtDTJA0D+&#xA;O9qPOHvH3RagNzboktzIJYo5pSvFeLVRZuZO9DyPTpgFjn+ObKfDIkRFEgf72kPo16LeCvqtcQvx&#xA;ZWkkVCEbkFKK7FaVUigft0wQNDybNVi4pVXDIdw++t/s+KKu9RmMfOSHhbwcZ7p1PMxogEtD9lSd&#xA;t+DN+rJGTTjwC6BuUth0u9vf8wPvQypqa3SQzKBAiKllvH6pMbRsea8wD9jficAhM9Ng2SyYqsH1&#xA;E78668tvNz+s14bZYbc3JDSvGbVC3E/tE/WAN2Pz/Xg61tfu/ayFCPFcuHl9R/4hEw2E00SyRmzo&#xA;wNOVmwIPShUyggg9RhEb7vk1SzCJo8f+n/46pRQGQoqvZn1P7tvqTqr7V+BjLQ7AnY9MAHu+TKU6&#xA;vae39Mbe/wBK+ayuIeAK2kjSNxjRLM1J4ljuZgBspO5wmJHd8v2ojljL+eK/p/8AHVL6le0Z3t4Y&#xA;yYnjMkdvGjqr/a+L6yw7D7sNS5fo/anxcexs7d8if94miXjyKHjt5HQ9GVoiD9IfJmxzDh8A/nD7&#xA;f1Kc10ksfDg0cqSQF43FCA0opuKqfsnoTgJbIYyDfQiX3Kz/AO98P/GKX/iUePVgPoPvH6UBZQNN&#xA;aKAqSBHjZo5DRWH1ZBQ7N3NemQiLH47nJyzEZd3Pl/WKhPaUEkX7qSQrIohUzOYTIaqQv70Cg/yF&#xA;9ttsa/G7OOS6PqA239Iuvl9581SzZJb67YANHJfKQabMp0+PGO5Pv/QjKDGEe8Q/6eFGGK1trxHS&#xA;NIl9GUyMqhdlZDvTwyVAFx+KU4EEk+ofpXLfmSskULPbKxR5BXnyU0bjHSpCmoPeo6HDxIOGtifV&#xA;+Ov4Hmtv7i2eCGNiGF08YRSCQ6l1LV26cT3wSI+acMJAk/zQfhsVCxtrqP1ZUZABJIqxIiKHVZXA&#xA;DEKCCFoo37VPXBEFszTiaBvkN7O2w8+/dFW8qS3csiGqmKL7w0gIPuD1yQO7TOJEQD3n7ooO4043&#xA;umWgVVZ0iUKHZkAJVSGqgJ2KjbocgYWA5EM/h5Je/wB/3qz6a36WjvVAIFeRLsCKoVICD4DWi9dx&#xA;vh4PVbWM/wC6MP1d98+fesS1ljmeRY5lkLSfvI/QIKu5YUMlWA6beONb/wBjI5AQBYrb+d3eWzcM&#xA;U8E/qRQSsZmAnMhhAoT9r4DtxqTsN8QCCicoyjRI25Vxfp7/ALGrpNRuY5oXWSONuap6Qj3WpClm&#xA;aSpBHUDiffGQJTjOOBBFE7c7/V+tTA1QQ3ELWhkE1R6hkjU04BASBUVotTTbB6t9mX7uweKq8j32&#xA;q2d3LCWF+vpXFxLVEQFxSiRqfh58RWg+LDGVc2GXGJfRvGI/WfL7FW7u4JLa6iQkusUtaqwB4CjU&#xA;YihoTTbDKQosMeKQlEnvCDkuLq3TS5II/UX0SJwFLN6fFCeIBG9QNztkSSKciMIyOQE1vt791Bpl&#xA;WxltWr6n+juSAWTiBApUONiTgJ2r8dGwQuYl09Xv/i6IiFeb2i1K8oYRyXYisU+4wjp+O9qmaEj/&#xA;AEpffFLJbZ4LkPAjTzrC9pNdSVekDzSl2fiRRuSoxJHSuHxZCHAPpu/vH6W4RhKXHLbqAO+o7Dy/&#xA;Ymcpd7FVYcXC3UstafbXkjKtK7cpCRv0GA8vm0xoTv8AqAe7Yj7Alqappl/BJqzf6KoeUQvMyIwn&#xA;jaKCIEqzKS0uyqSakgUrtl+fSyhkMecgL2v+aJfYOfT4LhyngiOhofMyTqLT4HtbuwJb0CViah+I&#xA;qIY13PuOuVcN2GqWYiUZ9ef+yLV/b2bT2Xr20VzJAQ0MsyK7oecackYj4Wqwao8MsjmnAVEkA89+&#xA;fv8Am1xxidk/jYn9CzUL7SrqCezkmfclJBFGzuCjfFQcHrTj4ZVKUSKb8OHLCQmAPiR1+IUnv7yI&#xA;RrbCNkll2MnLcTyS8GBB6fCv0HBxEcmYwwlfFew6f0RG/wBKMuopLexjaJlLWSh/jrQhEKt0/wAk&#xA;nJEUPc4+OQlMg/x/rS67kF9YRLfkorTpX6updvih9RQFIkJNW32yEjY3crFHw5ng/mnn/WryTA6l&#xA;pVzHLCzCWNkYSxsjFWXieSkFd6rXbLY5aNg7hxJaWY5j7naJ9X/RkIt4IreIFwIYFCRgh2DcVG27&#xA;VOSOWWT1SNljnxDHMxH46tXX+9Mn/Rr/AMn2ys8/k2Y/pH+f/uUQ/wDvfD/xil/4lHh6tY+g+8fp&#xA;SeO/ubWKJYImmMnDkkaeo4AigXlTnH8K89+uVgkDYObLFGZPEa58zX8UvIroLazv7lpbu05SSS0Z&#xA;GJqhhUFWZRsFPEUB3B8eyAJHcLPJPFGoy2A+d/j5fa3RBSR+5+txVJAFf9xsXhjDn8f96nVch/UP&#xA;/TWSaXUYluFiY8Q8Eyk+AJjGWEbuHjlUb7pR/ShpbS3igDiM3X1iQtKFaT0mLVYsY09QEduhyJiK&#xA;726OSRNXw8I8r7uZpT1BhLd2PJHiaMxyDkBwJeRVMdag81pXp0wS3IZYRwxnuDdj5A7+5Vt5Ijqb&#xA;x210BGlTNbk8y0jM/IDkarQ77YQd9iwnE+GDKO/Q+W1e9dpYcSzBzycCjN0qRNMC1B0r1wx5sdQb&#xA;A/H8MULeWqXOnWqOzBYrZpgFNAWRUpXrtuchIWB7m7FkMMkiOsq+dohpYP0ukZU+uZiVfifsC36c&#xA;vm3TJX6vx3NYifCJ6V/vlkrTS+vFF6puSX9OVHPp0DbUBeMfD9k06HAUxAFE1w7bVv8AcefNECM0&#xA;FYLknuRNQV/5HZKvf+Pi1mXnH5f8dU4HhnjEkUNyynv61PfoZcA372UwYmiY/wCl/wCOrbuG+aGl&#xA;ks8EwYHnI4kFB1FGlI3+R+WMgeiccoA+vhI91f739Td9brJfLKWYNCbYqqsQp5SsvxL0PtjIb/Jc&#xA;MyIV38X3BQNusYupFd2MyXjEMxIWjqKKOw2yNc/i2cZPCNtjD7leF50OmelEJQ0BWQluPFKR1boa&#xA;08MkL2a5CJ47Ner9eyGUltEd1HwtJBwJ78PSQ9N9mUj+zI/wtx2zV5S/3x+5Wtf76y/4xQf8mpsI&#xA;6fjva8nKXvl98VLnOljqPpRCUNcTrIS3HinDduhrTwwb0fezqJnCzXpj9/JaI7tTetNMskLpeG2j&#xA;CcTGoZQys3I86uC1aDrT3y2ZiYihRqV+e/2bNcPqHvx/c1qdnBfXF3aTRiZAn1hFUtUSxGCSMHjT&#xA;dXiVgO/34IZJQkTHnRHzFH7EwA4Ik/zh9hkqXUkMl0ZIXumjlSNz9UqRyKn7YP2apxyB3O1ssYIj&#xA;REbBI9X6PjbUEELNI05vitB6Zk9bmp+KpX0hQbMPfED3pnMiuHg+HD5d7d6YgkbK1xMyyKREI6MC&#xA;xMnMR8YwzVQ7tWm5xkjDe/0jbnfwq7Nc0c9rcxsskEvOV5EE7ykA+ipJKqFWn7Rpt9OTo9HGGSJ2&#xA;kKFGq7/mhY45QUaCNkv2VxcyOhVSSppyelGAk48aV26bZADu5t0pDcSPo2rf9Huu+W6rc28kdnJL&#xA;I0rSSIouYrdVkDuVCEhXX9VNhhI2Y45gzAFUDsTtXXoVG3FubeHnLcVCqSkau4XmBIUEioXC9NuX&#xA;TEDZnMyEjtH417rq6+xReJI5HWL6+sNaxpDzCgcVFP3m43B6bZGve2CRI38O/Ov0KtoVMMhJmMnr&#xA;W4pc1EvAOnEsvYFuXbCGGTmOVcMuXK6P7Exf/e+H/jFL/wASjyfVxR9B94/SlFvPHEEDy+gZIjHH&#xA;J1PNorcKFH7TVOwHXKxy5/jZzZxJOwujfwBm2tvqMryzWZ+rr6ig/wB76h4cQ9FlIjblvuR/w1ca&#xA;PRTPGABP1beVb8txvt+NnaTEYbiaJtmjvI1I36rp0Y698MeZ9/8AvUaggxBH8w/9NZI3VacZKio+&#xA;qXFR1r9jJT/QWjT9P68f0uVtHk5OluJAWarrbswZuR5HkE3q1d++Pp7vsUjKNia/zv2oS+bTVuLF&#xA;IohFO9wnGsRjJUH4gCVWvbbISqw34RkMZkmxwnrf6VLQraNdRvJZnUT/AFicQAOnxI0jtQqBy+Gp&#xA;+1+oDBjG597PWZCccQBtwxvY86Hw+X3phpjBp52XcGtD4j15t8sjzcTP9I/H8MVJ/wDeGH/mBk/4&#xA;jHkenwbB9Z/rj9Kuprchx9lrpuJ8eMBQ/wDDKRkuvx/Q1n6a/o/761o0njNNJzSQSsWCTIZAlSSQ&#xA;o5gDr2GPAn8zsBRFdxr9C79G/wCRbf8ASP8A8348Pu+THx/63+m/YukspJDyk+ruwFAWgJNPpfEx&#xA;9yBlA5cX+m/Yh49CRIpoqxFZ2dnb0qsPUNSELMQoH7O22AY206skg77V17u/b5u1GSaO+hUGNYpW&#xA;gDcyQx4yk0j7E1YVB7YJndOCIMDzscX3dUOssr/XVcoREl2FVCS6qzinqA9CaGniMF8/i2GIHCRe&#xA;5h93T9KMsGq9qp24WilNjRuXHlv0+Hiv35OPT3NGYbS/r/r+/wDQlMF1Ey3OmiJkKR2t3JPSicW4&#xA;BundfTLH2yXg/uuO/wCKvkAW6Uz4w90vvk1odncw6tczyxyxrPLbhFlFBWK0eNuG/T4a9MlLNxRh&#xA;Gq4NvfzP6UZoRAJEhLis+71RVtBv31Dy3c37wtbPdLJM9uxq0bSRhihqF3UmnQY58XhznC74ZEX3&#xA;+bEm54/dFSs1u1a5E5cxmxZoiamM8gGYqzbliT8XvmNG977nLymJ4eGr49+/+zuRMd7HIupzsGtv&#xA;WijCRzfu5Axiai0J+1kuLmWk4iOCI9VE8txz+5F876PUUS1iRrV7gi9Y7FEFqChXcb+oFX5Zk4ow&#xA;4ZWd9q+z9Dg5Saj7v0lMsg1pZcD/AHPWpIrRCAQPs1WStTx/aoKfF2O2Vn6g5kD+4l7/ANX45dQq&#xA;TrcXjLxjUQwTB0cyFWZomoar6bilR44TuwgRj5ncx7u/4hz2t25uCUH+koEcfWJCqgAiqKUKqfi3&#xA;oN++TlImPDQ/HwYQ4IyBs/L/AI8qWjTRGO0ljChY/wB06vzqsfFTyqsdD8Q6DIjbZcgErkD1+/4l&#xA;D+XhSxYU4jnUKRQiqKTX4VrU7jrsRvkcXJu1x9fw/Sfx70zyxw0ntpL6WFZb6FYLx1tDNCpBCE3D&#xA;UWoLVoPfJZ4xEyIG47buTi+kf5/+5XeYPq5hIuPU9ExMH9Hjz3lipTn8PXKMldfxybdFxX6au+t1&#xA;yl3KVpa2txZwu1vdXKMoZHmeMPQoq/Fxdd6IK13rgiARyLPLklGZFxj7ga5nyPejrVVtYzHBYyIh&#xA;JYisZqT3JMlcmNuQcbIeM3KQPz/UlWqJaR3kbzpeRNcytLwjMBQusKx8jUsa8VAWm/Lpvlc6vq5u&#xA;nMjAgGB4RW/FdcV/fz8uaZXEc1xJM1VUWzcYyqv6hBRXIDI8Z3J6ZZu4cCIgD+d7q5nyKFUztA8v&#xA;79SjBRCVnEjVp8Sr6+4+L8DkaNXv9v6288IkI+nf+rX+4XiGY2pvGqREDJ6E4mBrGaiqtK6g1Wqm&#xA;hp1w71bHiHHw9+1iuv8Amj8bIqVW/SBZIUlkWJDGzsF47uGpszioP8uE82mJHh0SQL/V8PtdYwGC&#xA;d4iQSsUZPEcVFXkNFG9AK0A8MYilzT4gD5n7ood/94Yf+YGT/iMeR6fBtH1n+uP0qyqq3h4gCt1U&#xA;07n6t1yXX4/oayfR/m/79dKb03ElBKIhQR+l6NCKAkn1CTWu2Ju0R4OEcr8+L9DX+mf8vX/Ttjv5&#xA;/Yn0f0f9mgf0HaAUW1uEFagBodhQCgq3T4ch4Y7i5H5uX86P+y/Uvi0i3jKMttcc0FFctCSD6nqB&#xA;qFqcgRQGnTbEQHcUS1Mj/FHf+t3V3fgov/TP+Xr/AKdsnv5/Y0ej+j/s1khu/qt6JhJ6XokxtL6f&#xA;LkQ3IfuzSgAXqMBuiyHDxRqrvpfl3qUTXouNHECI0DQOLtmJDKnpoVKeJ9TiPlluMRo3zrb5jn8G&#xA;Ga/V/W/4pCaTrlsiiKdeCOvL1N2AKBYgpFK/Eq8vDtlEJgOZqdJI7jnf6zf6FcXGn3DfVxd0tlUs&#xA;paiMhIKcAzj4lKse1R47jDYO1tfBOPq4fV8763ty3+B7ua61gtYNKv4LV+cEYdVblz/3SpO+IAES&#xA;AjJOUssDLYn/AIotxmK4WCzSVBc/o9uSVqUWXgqOyAg0JRqeNDk+A8IPQ9fl+tgZCMpHumP981cW&#xA;xP6SedEd2hWVE+0EZUdRRiB/LWtMiRztlDJXAIk8yPuVL6WSC4k9KSUAr606osRIC0A4mQruVjI6&#xA;N9G2MjRY4YiURYHcOf6Pf5fFYt5L6kqtcTMqMyRcEhBdhJwI/a35Oq7hR398HEyOIUNo/OXdf6Ce&#xA;q26sWmiIe1muGd1ZlnaIqQvL4fhccftGlOh3xMbTjzcJ2kB7r/V5KsaasVUKphHqcpBWP7MkjM5B&#xA;pJXgtKdK74fUwJxe/bz6AV3c/ih7e51Sa6ntVml9e2UGZGjjjQGRC0fGSjBwStPhG3enTJnFMREj&#xA;yN93RJlh7v8Adfs+9UuLa/mQR3FuLoFCrcinH4/TbsU5cHQ02HbfKyCeYtlDJCJuJ4d/PzHnzB81&#xA;yxvaxeqEuogkaiUhoCKIoUsVLMK0XemGq72PFxmvSbP9Lr0WyXVwJpIhcT0FREVSDkTzWKtWP7Lk&#xA;0qq9+uAk/imUccaBqPnvLuJ+7zPwVULSJLNIzGUzwRshCgKEkUgLxL9eVd2PX6MLA0CAOXDI/Yfd&#xA;3dyMf/e+H/jFL/xKPJdWgfQfeP0qCXX1eGP4eXrXUkXWlOUr7/hguvm2HHxE+UQfsCKnl9KPkByJ&#xA;KqorQVdgoqd+5yRLRCNmlC1kE1y0wFPUghYA9QGLnADZbckeGNd0pfoVLb++uv8AjKP+TSYjqxyc&#xA;o+79JUrpdNF5FPNAst5bqxhmEJlkjV9m4sqsy86fTTLPGlEGIJo8wxjiMt9vmB96pesr6dO6EMrQ&#xA;uVYGoIKmhByuXJliBGQA94QgZbu/eluJYB+5lkZkrG0RfcKCW35CnTxyPM8m8jggN6PPrvdfjqu0&#xA;pmZ3515LGqkMxcjjLKvEsd240pXv1wxB6sdRVCu8/dH5e5DXdvFNp1r6sTShLYtGFV3pIAhTZAe4&#xA;yBFge5uxzMckqNery5b3zVVnuDqaRm2f02nd2mAbgvGIotSVH2qVr07ZKzfJgYR8MmxfCNvjf2Ii&#xA;Wab6xIjO8US0CelEzs2wJJfi603pSlduuEk21RgOEHYnzNfZs16v/Lxdf8iP+vWN+Z/HwTw+Uf8A&#xA;Tf8AHkD+idMpTlc0rUUiYdgvaL/JyHBHzcj8zk/o/P8A48vi07T4ijI1yGQUVvRNa+p6gavpdR9n&#xA;/VxEB5olnmefD8/Kv53x96L9T/l4uv8AkR/16yd+Z/HwaOHyj/pv+PLJJZmtb1GLPGsJKO8bRsSQ&#xA;1QahQaUHQDATsWQiBKJ63333IM3NzHNYiCSMsLeMmBubNwNfUIEaMRXitCT2O2Rs7V3N/hxInxA/&#xA;Ud9ufTmR5o4ahc71t/ltP/1RyfE43gR7/wDc/wDFO/SFz2t/wn/6o48R/H9i+BHv/wBz/wAUh766&#xA;1GeD0oY1i5njMzJcP8DAhuI9Jd99sjIk8v0tuHHjibJvu3jz/wBMgrZJ4NUmu1tJPWSxS0jnCSET&#xA;GIlowUIHGjSN9+52GT8aXCIfwxsj3mr+4M5YoHfi3lLcWNhv+v8AYqSarwtZm1ACG6uIvRES7/Hz&#xA;mQdC223XKjPbfn/azjprkODeMTd/CJX6zJHHqIBtTNLLAyC4UD9yoincsx8GKhPmcyBjEoyJP0j5&#xA;2a2/HRxcMyBEDkZb/ClK1kt/r16v1H4llljZmA4zs8sRQ1PZWeh8OuRnjAAlz4r++m0TkRV0I8P+&#xA;5JKZ/Uzt/oFr7/F/16yPD5Bp8X+nL8f5yHudOlZ0YLbWyc41KhUfkCTzoWjHxUpxyJj7m3HnAB+q&#xA;XPv+HXl3pXa+tNIkfqW4dlcsPRQcSqEgtVKAcgK75WN3NyVEE1Lp/Ee/3pvbafIkY5wW1yWCkSkK&#xA;nVRWgWM7cqkb5aI+5wMmcE7GUft/S3NbrFA8sun2xRFLSKpqeIFWoDEK7dMJFdAiEySAJys/j+cl&#xA;sUyPrc0X1RkaGh+uEfDJ6l6Kopp1T0xy37j2ycsQEBK/qJ29xH62wTJBHQAf7gq+jSpNpTTJaGxW&#xA;W6if6swoy1aPcggdeuSz4hjkYA2Af1NXGZkSPMwP++Td/wDe+H/jFL/xKPK+rUPoPvH6UBcAmG1p&#xA;/wAt5/5OvkD097kQ5y/4X+gI6/IFsXP2UeN2PgqOrMfuGTlycfD9Vd4P3KWnqyMqMKMttAGHgRz8&#xA;MEf0M85sWP50v0L45oopLppXWNTMoDMQBUxJQb4QatjKJkI0L2/SW5I7uOV3t1jcS0LCRipVgAtR&#xA;RWqKDpt+OO/RQYkASvbuWzw+jpM0VeXCFwWpSp4mpp2+Q6YkVFMJcWUH+kEr0SO/t9UvIWipbyTS&#xA;zPKUFSHlkKAOZA3HwAjIrX55VjBEi5mrlCWOJv1AAVfcBe3Dz/zu5MNO/wB6Lj6f+T82WR5/jzcX&#xA;P9I/H8MUR9RgGwMigdFWWQAewAagw8Ia/Gl5fIfqd9Sh/ml/5HS/81Y8KPFPl8h+p31KH+aX/kdL&#xA;/wA1Y8K+KfL5D9TvqUP80v8AyOl/5qx4V8U+XyH6nGzhAryl/wCRsv8AzVjwr4p8vkP1PP8AUfzS&#xA;sNO1Oa0ufLfmJbe3+Ke/EMpt0jEKTs7OJNuKvQ/LHhXxT5fIfqb0z81NK1awN5pmgeYZYuMbxPNb&#xA;XMMciSSpHyjkLMHFJOYK1BHfY0eFfFPl8h+pOvKPmmw81G6WHStX0+CGGGTlqkVxaer65lUoiSNU&#xA;8PR+Lt8Qx4QkZpDu+Q/UmEElsLq2hDxi/mtIBDXj6ixjmZXWtWpT6K0rgEDV13C/x7nJmee+3FI1&#xA;8q+0r9Rure1R44/WM9TFC7yymP1inNQ1JOVNx0+Q3wgxBHFdMccJzFjh5XyH6lKDUIZYTHxmN8IE&#xA;k4CWTgzScQvGsnQsw69uuRlKNkC2wYZiieHhuuQ6c/4UTNZ6kjxLEwlV3pK/OZOC/wA1DMeX0ZZH&#xA;GDdmvnv9rR48f5v+5/4l0iT27S85GZkiM8Dq0gUmM/Ejq8kleq9u/jlZ2bIkSA2G5o7Dry6DzXQX&#xA;EscxHKkCSN6g2/3ZNKtfHZlX8cQUTgCPOvujH9q3U0uRcSurOIZLcx+kkRk5vR6AstStOQ+eM105&#xA;jQurEu+q5fNDETxXLevIxUzt6URj48Q1wj0Rh/eclUttvkTzbhRjt3bm/wCiRv3VyTV9QtkUu4kV&#xA;VFWYxSgADufhyziDhDBImhXzH62r5Qy259Ez0mjIoxXhv9v4etPDGScJq969J/sdNZ26C8uEiLzX&#xA;MYWZQzDnwUhR1opoaVAr92WTmTERPIX9rDHtIG63XRyxW9jE8imFFRF9P4nKk0UL05MammVg0GUo&#xA;mUyBvz/tUry6SS0nRElZ3jdVX0pBUlSB1XBI7M8WMiYJI594/WgWiuxeFyZGgjZiYhEaKWukcMrA&#xA;VfkoJ2rSmR/H2uRxR4a2s+f9Aj4V9tq0CXC2srTyNK0l1GySMnpErzjA+DqKUpv164Ry+LXMx4hW&#xA;3pPW+h6/b9iOf/e+H/jFL/xKPJdWgfQfeP0oC4NIbX/mPP8AydfIHp73Ihzl/wAL/QEdfitsV6c3&#xA;jWo6jk6io9xWoycuTj4fq+B+5S09uTKxAHK2gNFFAK8+gwR/Qzzih/nS/Qhpfi1aOJt43mcsh3BK&#xA;wRkVHtkT9X47m6O2InrQ/wB0UTNczG4eISJbJEOQdwTzAUEkV4rxWvxUJP8Aq5IndpjjHCDXFf2f&#xA;t7v0oOyuZrnR76WUnkfVoDX4QUB4ivYVyMTcS35cYhliB5fei4YXluDeyTFRGzxiNPhQqjOo9SpP&#xA;LrXtkgN7aZyAjwAc6+2uS3S04O6709NSrN9pgZZSGb3YbnGKdQdh7/0RTDJuK7FVOW5tomCyypGx&#xA;FQGYAkfTgJAZxxylyBKz6/Y/8tMX/Br/AFwcQ70+DP8Amn5O+v2P/LTF/wAGv9ceId6+DP8Amn5N&#xA;re2bMFWeNmY0VQ6kk+2+HiCnFMb0fkrYWt2KpHAlubm3dVT6/HaQNbk8Q7J8fNATvRh/XtkBI1V9&#xA;xpzpx5kj08UgT8lt+buS7WWBXX94p9RrbkFjCiu5RnLhqkU9txkZWTs2YeGMCJVy/ndfnVfikPDB&#xA;f8LhHjrFLAsRRrbiWc05n92m4py41I98jR37m0zh6Te4lf1fLmfdfNN/0v0/0K63/wCKv7cs4/Iu&#xA;D+W/pR+aHeSS5uJSltInrwegTLGVatTQhvshQGYtU+FK5G7PJtERCIuQNSvY/jflX2qLwfWrqS0e&#xA;NJYXDSSRuWWvp3EnEBl6btXocFWa/HNsE+CIkCQeXziEaItYj2hMPDssrNJx+RCoafOuTqTj8WI8&#xA;7+FD9JUgk6tILphJOJIGWQdAjzCiAbDYr1A32rg36s7ia4do1L58PP8AHJNcscJDR2UkcaxpdShE&#xA;AVRSLoBQfsZER826WUE2Yj7f1rvq03/LVL90X/NGNeaPEH80fb+tr6ozFfUnkkVWDcG4AEqaivFV&#xA;Ox3640vidwA+f60Rkmp2KqF7/cr/AMZYf+Tq5GTbi5/A/cXP/vfD/wAYpf8AiUePVR9B94/Shvqz&#xA;zww8SB6V28rV8Flfpgq/m2+IIk31gB9gRdzE0kXFacgyOK7AlGDU79aZIhoxyAO/4tRs4jFMYiam&#xA;O3gUnx4lxgiKbMsuIX3yl+hqK2hkvZZ3BMkEp9MgkAc4UBqAaHbxwAb2mWQiAA5Ef74op443ADqG&#xA;AIIBANCOh3ydNAkRyQtxbQwWF76QI9VZZXqS1WZTU7k0+QyBFAt8MhlON9KDUOlpG7H6xM8buzvC&#xA;7BkJd2kp9moAL0oD0ArXeqILLUEjlGwOfXkB+j9Ssn+983/GKL/iUmHqwP0D3n9Cvkmp2KoC4jhW&#xA;9lvHTnLawBotyOvqcvbcDIEC77nJhImAgDtKX6kQEv6Cs0Ve/wC6b/qph3a7h3H5/sdwvv8Af0X/&#xA;ACKb/qpjui4dx+f7ELcRLNwknVWuLS4jWORaqPjaMn4ans1N65Ei+fQt8JcO0fplE/ZaY5Y4jsVQ&#xA;NpZ20ttazMpEogRPURmRuIFaEqRtXIRiCA5OTLKMpDpxFX+pQ/zS/wDI6X/mrDwtfiny+Q/U76lD&#xA;/NL/AMjpf+aseFfFPl8h+p31KH+aX/kdL/zVjwr4p8vkP1Kc9gGgkWKSVJSpEb+tLs1Nj9o9/bEx&#xA;ZQzURYFe4IGHSNQiaFzKJWVWWasjoWDSO/21Wv7Q8OmQEC5E9TCQIqu7YdwHJfNp+qNd28kUgjto&#xA;+f1i39eZjLyACUelU4nfpvl0aESCN+h4jt+u2nxI9/8AsI/rVYbO9DMsnAq8iP6hkd2VUbkqAMor&#xA;Snj3ysRKZZYdO7uA3PXmmOTcV2KuxV2KuxV2KqF7/cr/AMZYf+Tq5GTbi5/A/cXP/vfD/wAYpf8A&#xA;iUePVR9B94/Sh4LC9gmneO7DRzOXEUkZYICSaLR17tviIkXu2TzQkADHl58/sXx2+qLNM7XiOkhX&#xA;04jDQR0FDQhwxqd/iOTJsAV+37Wq4dx+f7HWVlcQ3NxPNc+uZ+FE48QnGuy7ttv0yAjRJZ5csZRj&#xA;ECuH7V/1e8WWV4powkrh+LRsxFEVaVDr/L4YQGPHEgAg7efmfJdwv/8Af0X/ACKb/qpg3W4dx+f7&#xA;FOa3vpYpImniCyKVNImqKgg/7sxIJCYThGQNHbz/AGIvJNKgn+983/GKL/iUmR6tp+ge8/oV8k1O&#xA;xVLNQuYI5rmB3Almtf3Sd24CQt9wyuRFkeTmYcZIiRyEt/8AYpnljhuxVLLi5gjmeB3CyzXUXpJ3&#xA;bgIS1PkMrJF15/qcyGORAIGwib/2SZ5Y4bsVUWsrN2LNBGzHcsUUkn7sHCGwZZjkT82v0fYf8s0X&#xA;/AL/AEwcI7k+NP8AnH5u/R9h/wAs0X/AL/THhHcvjT/nH5u/R9h/yzRf8Av9MeEdy+NP+cfm79H2&#xA;H/LNF/wC/wBMeEdy+NP+cfm79H2H/LNF/wAAv9MeEdy+NP8AnH5u/R9h/wAs0X/AL/THhHcvjT/n&#xA;H5u/R9h/yzRf8Av9MeEdy+NP+cfm79H2H/LNF/wC/wBMeEdy+NP+cfm79H2H/LNF/wAAv9MeEdy+&#xA;NP8AnH5u/R9h/wAs0X/AL/THhHcvjT/nH5u/R9h/yzRf8Av9MeEdy+NP+cfm79H2H/LNF/wC/wBM&#xA;eEdy+NP+cfm79H2H/LNF/wAAv9MeEdy+NP8AnH5ro7S0jYPHDGjjoyqAfvAwiIYyyyIokr5IopV4&#xA;yorr14sARX6cSERkRyNIW4i0e2TncJbwp/NIEUfeaZEiI503QllmaiZH3W3Db6TOnqQxQSp05oqM&#xA;Kj3GECJROeWJomQPxXmx09QWa3iAG5JRaAfdjwhiM2TvPzUYP0FO5SD6rK46qnpseleg+eAcJ5U2&#xA;T8aIuXEPmr/o+w/5Zov+AX+mHhHc1+NP+cfmoSjQ4ZPTlFrHIaURvTVt+mxwHhHc2ROaQscRHxVh&#xA;YaeQCLeIg9DwX+mHhDX40+8/NWjiiiXjEiovXioAFfowgMJSJ5m12Fi7FUKY1nuLqMk8GiSJyOxP&#xA;MkfPi4ORqyW4SMYxPmT936l4S/oKzRE+PpN/1UxoouHcfn+x3C+/39F/yKb/AKqY7ouHcfn+xSlh&#xA;eOEl2DvJPEzFRxH20UUBLdl8cBGzZGQJ25CJ+4ozJuO7FXjv5z6p5vsPMWntpvnbTvKujyQIs8d5&#xA;eW9vK8okcyOkc1ndE1j4gH1Oo+z1JVYPN5j85rLcJL+bmnQ29rdRxXBe+sknQJI4mUj6hxL0hBjQ&#xA;ca1apYDdVWtfPWv/AFaKef8AMewMcvCyf0tVtWWNpYVWGWVX0z1Y5nEUzsC5CyU2414qqMXmPzxd&#xA;lr21/Ma0iHO3NtbLrNlM7LJwgaR4v0Y3xSO0bLH0HqD7J+Eqp15a/NDWdN1SN9S/MDy3q+mvPbpc&#xA;i41KEvHbVcXMiCG1tqSf3fAMSpJO4FAFXvVleWt7ZwXtpKs9pcxpNbzoaq8cihkdT3DKajFVbFXY&#xA;q7FXYq7FXYq7FXYq7FVK7uEtrWa5cVSFGkYeyAk9flgJoWzxwM5CI6mkHbW8NlALy9o96wUT3AUs&#xA;xZ2oEQAE8eTcVUZAChZ5uRkmckuCH0dB7up+8lZfJbxw/pi0IVo1E0rpQCaADkwbsfh3U+P04yr6&#xA;gywmRPhS67Dyl0+3mvMCX+oTCcepa2ZWNYGAKmUqJC7DvRXUL9ONWd+QYiZx4xw7Slvflyr5g38F&#xA;Rk0zUY3t2QSrA3GhUrxZSVqjUFKFSKqe2HaWzAHJiIldX+N/2oQ3Vw1stgZiLlrk2bTj7fEIZi23&#xA;RzCOv82+Rs1XnX4+Df4cRLjr08PFXx4flxfYjANMsBHbBFhExooCmjGoX4modyzAVY7k5LaOzR+8&#xA;y3LnX4/R0UooI7DUEjgHC1vOX7gUCJKg5clHbko3A22r3OADhO3Is5TOTGTL6o9e8efuTHLHEdir&#xA;sVULb++uv+Mo/wCTSZEdWyfKPu/SVfJNbsVUL3+5X/jLD/ydXIybMXP4H7ir5JrdirF/NmljUryC&#xA;BPNVxoU8cbOtrbjT2Mgaq82S8t7hiOo22xVKZvJ1++pC6/x1dw2w+KK3ji0wEkvIzc5Ht35D4+I4&#xA;haAdSTXFVr+Rb6ezS3Pn/VWqzt6yrpSuweMCgK2gpx3YFf5jWuKodvIzqn1Y/mJqazSMjQEtpYkH&#xA;oqTxA+q0ZaUZhT3xVEDykqyG5Hny8EcwSMDjo/Bp/REIlJ+qfHKTHzFTSvam2KrbPyPryymK3/Mn&#xA;VpInWVBEU0uSQSh6Eo31WgVODKU47ditMVRdv5A80xiL1PPmsS0eSaesViPUeQJ8H+854RKykqi7&#xA;jlTlirNII2jhjjeRpXRQrSvQMxAoWPEAVPsMVX4q7FXYq7FXYq7FXYqsnhjnhkglXlFKpR18VYUI&#xA;+7ARbKEzEgjmEujvUhtvqurCjxrxknkWsMoX9vlTiCQKlT0+W+QEqFScqWIylxYuvQcx5d/xbuZk&#xA;1BPqVsjNbSUW4noVi9KvxIpP2i4+H4egPXEni2C44nEeOX1DkOt9D5Vz3XTPLY30k/pNJZXIUzNG&#xA;OTRyoOPNlG7KyBR8I24++ydjfREQMkBG6nHlfUd3vBv3388NW0xORtVM80nxGG3SrsxG3PoF+bkY&#xA;8Y6L+WyH6vSB1J2+Hf8AC1NtPuhZJMAp1BJvrnEnYuahow3/ABjYxhqY8Jrz5shnjxkfwcPD8O+v&#xA;f6qVf0rpjMhuP3EyH4UnTi6sdqKTsev7JOHjHVh+XyD6dx5cvx73W5lvb5boxvFawKRbiQcGkd6c&#xA;n4H4lCqKLWh3O3TEbm+izrHDhsGR510rpf3/AATDJuK7FXYql41G1t76WCVuLyyEg7cVCwofiPav&#xA;bK+MA05XgSlASHQf748kT9fsf+WmL/g1/rkuId7T4M/5p+Tvr9j/AMtMX/Br/XHiHevgz/mn5IW9&#xA;1K0L29vG/qyTypxMdHA4OrHkR02yMpjYN+LBKjIigAefuKY5Y4jsVef+fj+W8mspa+YvK82t6lPB&#xA;Eoni0ma8DQmaqQvcpGU4iReZRnoPtEYqx65j/Ja/SP8ASHkC6Q1ezi9by9c1REodnjhb04qzkK3I&#xA;LsabCuKoaK7/ACTsoSLb8vtQkgkeagHl27b4rhFSRVSSLkqvGqCgHGlB7YqjtStPyQkmnnuPIsl3&#xA;cRzC2enl65Z2dgxHHlbiqHjs/wBncb4qse8/JC6RkfyRM63t48VyreW7oEzxAN6s6m3BFRMCGbf4&#xA;vnRVO/Jp/LJ/MqLoXlKXSNXWKSU3raNLYonqKvNTcGJI+cit2Y8qe2KvRMVdirsVdirsVdirsVdi&#xA;rsVdirsVdiqQebNa8z6WLFtD0E6760jreItxHbNEgjZkcGX4W5OAuKpGnnT8xTFaySeQp4jJIVu4&#xA;vr9pI0URC0cFW+I1Y1Udl2rUYqhYPPv5lSx3kp8izRJE6rZqbmMtLwnihlFGEbqHDSvG7KBwUM32&#xA;qBVEzecfzLR4Wj8iySRyKzPGL+15x7HgJGJVKk7Nw5cfcHkFUd5f80+dNR1kWmp+U5dFslB53ctz&#xA;BcBzwDAoYSacW+AhgCa1X7LYqy7FXYq7FWOebYvPpntJvKs1isUMVwby2vg/76U+n9WVXQEoo+Pm&#xA;fliqRRt+elx6scyaDZCWBVjnia4kMM/EFmCMpDrzJG5GwHc4q3b/APK7YJtReRdFuozKh06N5Jlp&#xA;EI5mkDFI1ILS+kq1rRak74qidEf85Ev7Rdah0OWwd0+vy20tyJUUw/vPQRowtBNsoZieO5PYKs2x&#xA;V2Kv/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:53F495E81B37E311BC3AAF07DF11E026</stEvt:instanceID>
                  <stEvt:when>2013-10-17T22:16:56+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:10ED50914068E311AD70A5DD51851BD8</stEvt:instanceID>
                  <stEvt:when>2013-12-19T00:00:27Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:11ED50914068E311AD70A5DD51851BD8</stEvt:instanceID>
                  <stEvt:when>2013-12-19T00:15:32Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:10ED50914068E311AD70A5DD51851BD8</stRef:instanceID>
            <stRef:documentID>xmp.did:10ED50914068E311AD70A5DD51851BD8</stRef:documentID>
            <stRef:originalDocumentID>uuid:67bb8597-f18a-4b7e-ad15-ad21b090f8e2</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:OriginalDocumentID>uuid:67bb8597-f18a-4b7e-ad15-ad21b090f8e2</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:InstanceID>xmp.iid:11ED50914068E311AD70A5DD51851BD8</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:11ED50914068E311AD70A5DD51851BD8</xmpMM:DocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:creator>
            <rdf:Seq>
               <rdf:li>LYDIA\Tiago (LYDIA)</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">dxfA45A.tmp</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>SolidWorks PDF Publisher</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000069</stDim:w>
            <stDim:h>299.999948</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>SourceSansPro-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Source Sans Pro</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 1.034;PS Version 1.000;hotconv 1.0.70;makeotf.lib2.5.58329</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>SourceSansPro-Regular.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -769.335 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 769.335 li
1647.63 769.335 li
1647.63 0 li
cp
clp
[1 0 0 1 0 0 ]ct
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 0 rgb
%ADOBeginSubsetFont: SourceSansPro-Regular Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2014 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /SourceSansPro-Regular def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 57 /nine put
dup 58 /colon put
dup 60 /less put
dup 62 /greater put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 77 /M put
dup 80 /P put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
dup 121 /y put
dup 126 /asciitilde put
def
/FontBBox {-192 -323 1160 952} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
48 dict dup begin
/.notdef <1C60D8A8C9B640851B56D8EDFFFEE42A5A1D4DED2AD811A4817DAA
0B991370C42DF24358C0EDDE04AA9D046B4C478A0D1293CECB1ABA16872AAA64
C4E6548E7D9B9FD772356FF044443884BEE3C8C8C8F0D774EFF41E58AEDA> |-
/space <1C60D8A8C9B8A02BC0> |-
/percent <1C60D8A8C9B6AD61408017B37E20FC59143BFB23BD3CDA3F4FA919
504F8FE2DF1936B540FB06728770FB0381CFCD290A8498FB9C7D1763B0B5A22C
CE04B4FDF0C268174FC689F943AD6D488BCAE812540FE0AEF6EFE23400E269B6
8FAE0F9BF916F7EE9A82B67731629DF18048F9F98CAFAAB8B5174132D5B3C701
5AA4672E8F02D9422F36ECEDB717B5097AECB9F472D09EBAD74ABF28AD7B01CD
D346F1161C2561292559564E6AD21293464532B5911C60903E3B3B32754CF850
434A3775B145D500881B5F846C49D9BAFC81CB097E405D92649DF161BDEE2E34
513D3A3AF66B7B5FB3630372A3A282CEF7AFBB1BBE5A0850ADB3C2675484C9AE
C07B7955C9F9FF08D66A88D3473E37CD2325124A6F> |-
/parenleft <1C60D8A8C9B83D5FF290589DB552C6F3022F04279C04A1178E3B
DE4D94EEC561919060098442BFB56A4D8163E8E44433E0A21497B2B3384A8FDC
DCD78EBAEE61E21EF9CF0403F4BAA24F60ACF2> |-
/parenright <1C60D8A8C9B83D5FB4000DC5065D0D3278B78FE799C0ACD34A7
FCE6E343C0E4B73E11EB3923F8B5B2AE14F1BAF3326C224E97D28B931C78D95A
E818330E6BB37BE7BC5A17E144BDD03C6580F> |-
/comma <1C60D8A8C9B873D0786BEFBA004F51635F304D2F16ED50A10854D3C3
A28882DD9FD318CA8AEDEB3D542A94EE11FC6EFE575BE9887D3708C813C28D62
36224159F1AA12802671529556FD73888CD0CC6C2A34DD1CE09B3243030F2C> |-
/hyphen <1C60D8A8C9B835D30FF6EEC52C07A30EC1969A2D8BA2> |-
/period <1C60D8A8C9B873D0683B639A5E51AF9CABEF93F3AC29AD54C700384
796805C40720F89EFA980F7A40991A2471E1AC58C5F62D5D75230D5570851997
F7158092CEE6125A19B> |-
/zero <1C60D8A8C9B7AA9121D6E6A86FF242053FF7AA8007AF8EB304A764C0A
167CB55F163F16C7418325880B5411CAD732CF29A34B9FE97CE47E5D3DAB18D3
0ED7064C57D6C6CA5EB304033E734770A705FB2F96344CFD3028EE0F85CBFD20
7DE453EF9E43401D7E967C109C42306EB029F622CC259D0B38DF15BAE63A5B86
F8D5C018ADB484B0FE06DB7FF1BF973B13F7264F175B3D83DAD4424194AAA364
C0B12977C03B186E37C18AE5F5039414B> |-
/one <1C60D8A8C9B7AA9103D358ACBF4EB6617AB46BC6D532F7F6549DD6FEB7
5F97D21D0353D33991D3E7D6860E9CC4FA4E74DD55> |-
/two <1C60D8A8C9B7AA916AC44F5FC008CD5C7B93C1A9B2EBEE40D0AF12009A
F3BC4E6709D3DC402BB6B47B8CDDD725341B9232825F7C8B1AAA84900EDB92F3
ACC210470C0D73FF53FECD6F1AB57CECA76C70E966CD8F14DB91C5A1AB8E38D3
E9C761D463C25DE6DF7226C8598661797DE6F3D70DED4785D09FA2A8D0D5CC7B
4C436D0BC5170565E84BC0798FECE954CE15ECC0BF9E29F9> |-
/three <1C60D8A8C9B7AA917C8FC3D0467C5765FFE6769D95BDA08013ABDDE2
972044BEE9662B69583BF3E6264C103B15BCFC7D7CAE375D1A511CA0A9EF0A94
2B66544A064D62AFD38C499BCDDB382F482CF446D2CA8EB379A8BAB7B9811818
10D9EB72F51EA1BCA04A9283952185EF2C19F55D34FDA358237AF2ADDA2484FB
D07C6EC062D31FA21AB8BCB46380C948A03D6785DF0348F233E97D7EDD6F1C35
0DFA820A17637FA7A443D6AF42AB18978A0BB4913D2B9652E93A3B0B410ED80B
6AEDB872BB7578BEB8BA7B429726B09F1B8A299AAB19E494B2C754C5A3B86E98
972F7976397EB0F8D84CCE505CADED9B41FA1323C070400AD3BA5F664670822C
1761A17A8AE99374047A0390DDD90E750065A5B3> |-
/five <1C60D8A8C9B7AA917DF306FB9C5B8D2E10674C3EEB26D294DA7ED2245
76F7BD450809A64BCB4AF397CD8A2871FE595B13F315C91D61EFEF301DE5EDDE
9D9B0CADDEE7CF690A319C0BA8B1CE230F5B771191C0EF8719D71D49A68868FE
59230073AE6F9449368C291488EC1B4276D8B802709DB6EDAD9C5D09A7077039
7F4803A7A1873A7D878F5D96A4D482438434452924A516B3E8B35DA17DE9621B
AC21C7FC4F9C7AF82D8E17439281E0F15CA04825165184121592A3621034EADD
FF4F96B1F05ECD2829901F4> |-
/six <1C60D8A8C9B7AA912E310FFAF05182C4393BA54188E6D59DD8A666F005
9438670B1CD6C229544CBD979C8335DA68E00A9880AC8F050A40AD214C6202F5
F757D62313081CE8AE5C1DF1344EC822C90E3E398998AE07A700907B413DE6CD
D362E684498DF2E1CC9BF3419A969991E48DD4B7A3FBD146DDA74FC7CC5BE6CB
8089FA458A53AA153F5E05DB8E7B753481E09B9851A1C962A1F18FD6FC44FF09
3355B854FD5DE4B14F098E3021C248DAFBEA344EDC4138646D91E8750609ED8C
80A4249DFB2A9675BE218675DAE496CB264ABD6EF24B34DE59961C70BBE185A1
773B026641FE04BF94D6CB0751B5F175024D4E445E38389E163234A24CC56352
3616659708> |-
/seven <1C60D8A8C9B7AA912E347FEE1C59633538ECF1B939FC8AD32F81A719
43CFEF140465A78E272708B33B8A90C4D1993459C577375327069E4EBF01DF75
699F4A7C5321EC3EE0068FBF3E89B0567C262A45A8> |-
/nine <1C60D8A8C9B7AA912E5755A38D5AC3FD912C48AE9C1BE3D2B39044EF8
13EAF7147159D01ADCFFBD8BBB7AA7372CF0042C43DD6A02D3BEE5D2410699B7
B0ADDA5724A987A74ECFBDEEA946502413F04DDCF71CFA6CB783D554BBEFD308
227FFA75A600B77B4E45687FD771F8C40D9D97D2F45DEA159D5A0D0660303B62
ABFCFD4409A647F4E24A33AC28210EB1B274D673DC563376192FC3D87311EC70
4C2C24DAA5668CDA89856A88502FC1E646FE3A111D5023B36ED27870353FF6F8
61B73609ABAF91E6A8EA34904614793B42023AB96680CE9B44513486AEB7A498
8781BA0A698F55FD63B7AE4ED6E42E57FD11B0DB54303135FA8E6D1F21B41F97
022F3857235> |-
/colon <1C60D8A8C9B873D0685201F3ABC5000F1C3F862B1E145162C3EBCDD9
7ED71661DDF071635C7FC74EA29399504D599CF543D0AF79B11FBC89DA22256E
0CF1FB802BD71BC89AB163AB4F19F302F387DB3B0486688AF0C4461D464CFC84
3EA4EE0B8C9A46E7AEFF15DCAA2A7E5F10A6982CE42867BB47F0154EE4DB74F4
BFEF12E4CA25> |-
/less <1C60D8A8C9B7AA9174146B2FD7CC05D9FEE9DC7FB6D75A83B2DF7A405
711D003E687D2D163A72E1B51BF9B7F2A4F> |-
/greater <1C60D8A8C9B7AA9121966017C1A9C24278F168BCBDC84B64035302
74AD98F8E512860FCDD631FCABA644FE2E5F6B23> |-
/A <1C60D8A8C9B78181C0F634ABA0EC5EE319997C8008F8AB19112B77F7F5F1
C7955FE96110A1A45A1B9FD569BFD3B3764C527D8A9A562F60F0490F4D03C406
5EFAE8F8CEE22C1FF7E42B4B2C266D3D31> |-
/B <1C60D8A8C9B7F44AD91BBE9E76BBFFF20107CA356A1956690677E145D738
80BA2A22048480439F06682BC202702CBF182DE2B9B792493912BAA10D868997
C6D7FA4920F4757AFCB5DCB3FCFE533DE1CCDE6FBF52166E9D103681889371F9
6192F3159B9F96C93DBF67F59BDCB2119994DDF850F8AB5C87422FB7B621411B
D0AB357DBA01FA90F3DC8AEA99D27F9BD25E4650D04C4CB720E053C8AC5652CC
2DD1969AF14735899CADEC52A5D0E8BDC944FAB0658229> |-
/C <1C60D8A8C9B7E5223C327977EF5A28732D80533FA0D8E1F2204077AA4578
3DE7D28268B1D14B513488038789DE3CF5907B592A2CB55A642D531DB0976A05
5D686F91EBC5703A00A145FE72750E815240B5C89275257A49AB0392441E6578
CD4FC3DEFB975F208014D2B3EF6ABB398FE683EB121DFC6F00C06FB83651C319
F8B4C7600BB42128007A4C8FF86D8E5E87DA8C284D403A2AF2E8C4776E781922
4AE3A910F2ABFFF37DA4C0F9DDFDE30E9B6E9B5E1728DCE893BFAB5D8755> |-
/D <1C60D8A8C9B7D7E8C631530D6499DF3F708DA5FDC6DF4BB375718E777DE0
9443922F9E9D0F1DAA4C16F68EA8B2A863888501FC6AD8FE888A75690EACDB61
9664C9967D668CD3AABAE439A6C675ED0F5687F2052B18779245FE4BAF531857
5BAFDBEB> |-
/F <1C60D8A8C9B752AB5EE0549388929BCCD8D212C38AE7ECCFD0BBB40D6EF9
A6150F05383C> |-
/M <1C60D8A8C9B6079F778FACA0B05AC665FCA0C715361929BADF6B6A7B8EAB
F7A835754E5C824A0BFCBC92C8E30A2B194ED3687271F73B59AA67017FA9CF9F
796F6CC36D3EF0DAB461BDEA5D721DF07EAE4EA8D11AE394CCB5040183EC0698
91904D2AD51480> |-
/P <1C60D8A8C9B7E02ABF1D6B88BA804AB921A43884E2436A2B19AD79F8D37F
F4903468553E235BE7A7FEDE027053F40A55BF563CEA2509F55EF9570D350964
A7A8CAF7071EC14AFB1BD328417A7B4E545243B5D9373095F716AFF63DC69EC6
89F46A77EC19D5ADB72374BAC92EA43CD82FC7E5C71799> |-
/a <1C60D8A8C9B7BB5CB36373E42AC4D6B9F66473162828CD6D65D676E6566D
61C48D904E9564C5DDB6D1307D28BBEBFF0BB9B34D13892380E8C662046B6D4A
E0FF7A4B5D0597A1DA53AD7ECCB8E77AE2933136B9AFE7B86F4EF26FEFD5FDF3
16FF35C2D45AC98EC858B037832523B68B837D5DAA2C37EDB3BAE4AD6B8EB169
97F5D1502171125E40E9663EEFBAE685DEA47D3FC1772521BA8C4D7C4C906FE0
A9E03D2DAD05EFD0F92863306D59F0D10C8F2EBAC0273C81D05B46962258C565
E88474DDD26B8E6A59D90BA9> |-
/b <1C60D8A8C9B790A86B40A3D8D0DEC2EB608EBC38D0D91B27660FC1642CF5
CCEECE6D36357D14EFE79EB59B808C2B156845C8D04AA31A16181A90DFEFD0E4
16ACAD3463A6FAF9DD819CDF8F3AED628E20E387C976F5F23C6AA99C6C4E2892
03B816DC8A01BAF92659AB0BF3E82C0370D7D07F29DF683190B58FAC11CC90D5
6092D88A31A0B224480DF5EAB0189995D296FAA90DBD385C4D3FEF2A4AFD4C7D
A144007468BCB96913C13DEF9C8D219EAB114A4075170BBEA36712CE31A73621
218CBE> |-
/c <1C60D8A8C9B7734FBF749CB333B394D17A75C678EF537C58CA9D840DF99E
C8810D428F121487950BA3A635177CE3B48D70F281683F5FC310B2C7AFA15B8F
341A54EC342B10CD365420B50D82EF89A2B32A14667FA4E9DBCF44AB44F9C30B
53728B10E7884B95DA9746E96244C800810A8274BF7704176B57334A3DA7A6A0
A3208F37B477C4BE2F9B9240B2364F7BEDFC6CFCDD92A7C5BA7DC0B3802B2565
35C596B8DB2CDCA499CF639211CA6D324ED4F5151A8C8B69F608DB4C7E43> |-
/d <1C60D8A8C9B790A8478E89C6EF514A04106E2F824BB9675CB8A39C9D1679
6382D548FB0515615BC5CDABC28603CE519B060BD8C8F42362FDE0D2B98565A3
3C667203B292C0A4814F663C4EF57FC25E5E158B87E549BB4E7E1666A566F72A
9F206CCC5DC77D8E39152FBDF07A7D59F2A5747904C0928226EF8710602B03B7
7C9CC11FCB03FE852160B907A4B2483B04043F1F5293173962914B74E6DBA2C3
27BC69723316400B22AC8B1C509B54283C1336AB98> |-
/e <1C60D8A8C9B7AB675EFA959F662755124813F8A5013146424465F87C3FB9
0F92EB3285D7294862942082ACFEF478B0F0202C6099CCEC5441B39DC84FF1B5
5021621DE9803D44E4586F04C80DCE0EF3CAF1C3E03DC663B37A67EF47B3B4F2
89A69E54C9E5A54F95B34F42576A97A7E8C0CE2F8EF37D3AA10532A78A918B6D
A9DCEEBA5EC899CF79594619EB6CD9FDF1B6F10435DCD36F1CCBD8F1287C0DBE
64B65D587A8FD3519208EDF6A81C581281E6995050E0C4059FEA62D5F9C5E08D
D5AC06A523A514C608AA> |-
/f <1C60D8A8C9B8469EB75A13AD25B66B0757B244DAB6868AC61D2B247B6AC4
45D4323D0ABFDEFF306A0B297413BAB11076B50159A81370DF7C836772AC1ADA
9525218ACCC20D0BA9D52CC430D82B7FE701> |-
/g <1C60D8A8C9B7A3FABD79D9D9168E911F2CF0459834A04B194891B26556D9
D688359397627348FA6D10CFDE2799B71EE0A01C5409200A9037FD2DAB181CB6
79011BE84FF45766AF4C23ED4CA0BB26FB19AB03CC3DF37DF5AC3BF31D7A6907
0312D5EF60CF5ECD9525191C620E0AC17836A69D5A2445BD4F61C678C426205B
A7E746C1EE52AFC07FCFBC8CC59053E8F5682937985BBB7A3DEC56FAB7CD897B
2F23A587A10B4B555EBE7160F852D45879D15A237794FCD67C7281CBF0896189
DCABC9AB4213BE71B3A804FC2F57EF7FE771B319DA5DC8D7A1A867B0F6C07653
C1943EC12A3D50A1AC04BCDFAE1B639B430BEF5178B8EF8689737C6D7711A440
5C5010FBE2B2036A42542AA17131B56EC3FA03670ECAB99B3817AD7D0A0B55FD
F341CDC318FBCFC3FA25308F7ED42E4EE9E70B129220182DDA4355A8F1FC48C4
5A29E86360EDA160254003BE2566DC64E24C28C145566B84A329472825D86EF9
DEC7C25FC9DEE73ACC1E2EDDF342A93C85DC56C45730A6EEE5A8E8CC5BDE585C
662F881A1315148CA7E9E6CD94CC7311B9BF205FF86030D512CAD27DD66CE275
30206F69F9FF497E7182E8EA2E5189C77235A97D8BD9725E5BF2693B022BC247
EF65D4C34DBAB7683FF6100F95F2> |-
/h <1C60D8A8C9B79B8EBC8211DD719AFD01EFE5951942DC3569CE41C40F5F5C
1FD4A19949B2DD3F92A24E3E0873E73E5FDD9AED6983AC2D6BA5C436459132D3
3D7B8F9E551EC1B98D21E762F154BB730FFF96A4977EC3A92DB3B2> |-
/i <1C60D8A8C9B874A685CA34DA3AD55BC9BBFC792B54C815A6BA86F3EF6BC7
EB9BDD61AD696D96C9052D72A430305A6573B6B7C65ED0D3FE7D09108A0E9231
00C6BA6EE5E5BD6F643503E99B28365682A7441D42> |-
/k <1C60D8A8C9B7AC3503D6946EAC9E14319B943163D06A5CBE635A10EF9D46
2731765DB0FCC7D948482A48B6BEF469B8D218640B> |-
/l <1C60D8A8C9B86D0BE0C3DA8FD4AEB9C26490E4588009D7C338D8AE7F6696
D356F9713902708D2C31208248AE4C14AE1152336EC0BB67366170AC46CD5A3B
7D335FD4117D6FCC38253C35F553BE> |-
/m <1C60D8A8C9B6B0D5D2B6A7B0131F65600AC85309C75471795CAAC867D835
B513179CF874D632BEB3E320523201FB9D7C39F69D98E309400928B8AF94A2C2
6ADC9E052F232F6BBF54B6DFC6986FCDDA348C07EC5B0D983265ACA34498DB3F
6FD0C84313590795575A11C3C711002CA8DD38A55DC1BBB106A096B81E023DE7
C6362CE49B760917F9AE4D93> |-
/n <1C60D8A8C9B79815DD6853D6CD128988CE041EA1BC834512AB6AEE1441CB
DFE71E30F9B77CABB6F86164A1BB70FA4E77F066BF2D628C3438006978B90BAB
361FABCE3622B795B206AB2FF64994815ED1186F722221F3C267> |-
/o <1C60D8A8C9B79D2D938B4AE4B1164E75A6918AD3B630F808964DA200ED22
3E1D0CFD883F46920EBA8C2A89D7D23B596119E955BFBFEDE433D31B93C25E09
8E865C3225AFCAAD699ABAFF771015828D3FCA08AA4D7DD973B5DF73FF057C26
61713A22BBB09CAC29D8D8EEE582AFC96C5595BB58FDB936CDF0F02CFEFD3574
7D93E43B475E4FF182B7FF5CF784EE88A0F7EC2F4BF4DFEFB766D3E230351B40
21E0D51931544BE1016764DAE052427AAA402E6388CE4CB58AE890D12133EF84
BFFE16960768C37F04CF487AABCF3F447C7FF9C2CA9A71D1DC10865BDDF4E318
38CF19C7F4D57DFE6D5B6E682D945832684620D989> |-
/p <1C60D8A8C9B790A8414ED4C8C0F519BA1A231E84CC6D27F9D4AADA37CB60
CAE9682A2A5D1B8910351B49542A7B1A6523906C22222E9D60B2223924E762C7
750F5375ACDCC12FA5CD24903615C6F85C3E2D8113B58B7158E1E94CA80AEABE
BAFDC637FFB9D11C3C8299C8B6751A4FA443015A1516ED3F90D67E40FD28A6EE
55E7A1ED52304ABA8E5794AB0C983CDE8BE7EE45CB77B1A9A34AB95BA1A92A9C
5FC294A6B323385B7ED37B4ABDD25AACA2F1A4EB33B0D34CF8CA702AF8FE12F6
4506A383FE51E3228E13CF> |-
/r <1C60D8A8C9B811DA779B7B2A5067E567CE0247A984C69E4C8B604BB285FF
13E9CBAE7497412E719931AA86E70CBCE5A1DEA85A68A1A65DF2C02C12015C37
24A6E2EDEC50AEC82C6BA6235C3D> |-
/s <1C60D8A8C9B718EC8EDCF09F7651796BCA0796EBF3DAD8C0F6664585F02B
E2E70C11EF2ADCB4C214839A3576C3C84431DEC7D5BAFA96BB486C5AF9DD18A3
1F0C3FF65A111AE3A2D14F30BA826A97A411C754900AB58B137D2FED385EF483
6D64500086E79D1366CD0D9C6D48956D8EE79A73A5404C31236A249F3FED4964
DEBBDC0FA9B6C2ED00D7E47E8B91A9A11FAAF8D42ED2DBD0324629BFDFBE88A2
307ED21B3986E0BB093A9AF58D83DC40B3E6C90750EF50551A7A81BE1565EC93
502C9F647809BA191F7C7CAB96555956C90317AED089D819E8035B76BBD8993F
0571B2E9630E9D4EEF02B513075EE6B2311D3FFECC5E5802E90DDB972F1DD4C5
D4A5538A26F540706428AE6EBFAA> |-
/t <1C60D8A8C9B81871D3E7D5D7ED202E05B89216436BFA029507DCAD6B84C9
ACA7FA81F460D7D714A581AD3C5663D1C119640CEEA6B9E7E88838F033B817D8
A2B0EB04AB365B3657962921D821C233BBE41349A1C31D0B0AC61A9A4474FE0A
FF2CE3F798D00128109104740E059DC682846557> |-
/u <1C60D8A8C9B79676D8896FA4DF404DD5594A46AD9CA76FB6D4D4689365B3
EFF55835EFA37E92652DEE21BE1B5A4C3D077306FC25FF247179BD5760A96C91
41D6DB68B9F1CC209AFB520540F0BC944EFC7ED03D2C20977C7C9161> |-
/x <1C60D8A8C9B77D5FFA0D30379E8BF6A31FC4138AFA80A84FA633AE34C10B
F30EFE89215BFDF31E5F828D607BAE0B26EBCA1DB51E03564051666D61BFB212
C39A0CC2A9F58B19C3203FB3E43B655A7CE0BCDA55310E71BB8812BDA3C32DA3
D0E23ADFA5F1BAE8CF7536EE13E33F> |-
/y <1C60D8A8C9B7489B71B9D6B5F56FD20997CEC814AD1CE2CACE866A1D2C40
89ED3BDA6EFC6CAA0CE3D5EA5F04E8FCEEA7DFE9104600BC0D8405C4E18186BB
38E2D90CE28EF58559611F96DC8D906626D27253D1E034EEA2A83C4242658608
0F4AD4FE8981315724B76B0D34AF0D929917F12DA6DABE19982CED5421DF4DD1
C6794AA6E808A244F2ECC2462B5CB7D5> |-
/asciitilde <1C60D8A8C9B7AA91046464520634D0F37F8AFD58230370FB0D5
CCF1073821357ACB70D0DF27F009A09E4FCC5B27ABBF38160A16A6DDB4D318F9
93FA27F802C876677FE1F74453E6DD33B1334F33FC10182ED517D3C8BF1A7C2D
A2B043620AECBA2E5B35E0DC2418AAE44A4ADA0062A8D8A5C218F3422A1FFAFF
E9BFEC995BE0C58> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/WBPCOJ+SourceSansPro-Regular /SourceSansPro-Regular findfont ct_VMDictPut
/WBPCOJ+SourceSansPro-Regular*1 
[32{/.notdef}rp /space 4{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp 
/comma /hyphen /period /.notdef /zero /one /two /three 
/.notdef /five /six /seven /.notdef /nine /colon /.notdef 
/less /.notdef /greater 2{/.notdef}rp /A /B /C /D 
/.notdef /F 6{/.notdef}rp /M 2{/.notdef}rp /P 16{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
/.notdef /k /l /m /n /o /p /.notdef 
/r /s /t /u 2{/.notdef}rp /x /y 4{/.notdef}rp 
/asciitilde 129{/.notdef}rp]
WBPCOJ+SourceSansPro-Regular nf
WBPCOJ+SourceSansPro-Regular*1 [21 0 0 -21 0 0 ]msf
955.797 758.587 mo
(3mm)sh
1001.05 758.587 mo
( Acr)sh
1033.85 758.587 mo
(ylic \(or thinner\))
[9.80664 5.35498 5.16553 9.57568 4.24219 6.36279 11.3818 7.28662 4.24219 7.09766 11.4238 5.16602 
11.4868 11.4868 10.416 7.28662 0 ]xsh
WBPCOJ+SourceSansPro-Regular*1 [14 0 0 -14 0 0 ]msf
19.5771 728.815 mo
(All p)sh
44.6509 728.815 mo
(arts e)sh
76.9482 728.815 mo
(xcept gears are tabbed into the sheet)
[6.00635 6.08984 6.94385 7.77002 4.73193 2.82813 6.86035 6.74805 7.16797 4.71777 5.86572 2.82813 
7.16797 4.71826 6.94385 2.82813 4.47998 7.16797 7.77002 7.77002 6.94385 7.77002 2.82813 3.44385 
7.65771 4.5918 7.58789 2.82813 4.73193 7.61572 6.94385 2.82813 5.86572 7.61572 6.94385 6.74805 
0 ]xsh
19.5771 764.813 mo
(etch 50% material thickness to help tabs break)
[6.74805 4.5918 6.38379 7.61572 2.82813 6.95801 6.95801 11.5356 2.82813 11.606 7.16797 4.59229 
6.94385 4.85791 3.44385 7.16797 3.56982 2.82813 4.73193 7.61572 3.44385 6.38379 6.93018 7.6582 
6.94385 5.86572 5.86572 2.82813 4.5918 7.58789 2.82813 7.61572 6.94385 3.56982 7.77002 2.82813 
4.47998 7.16797 7.77002 5.86572 2.82813 7.77002 4.71826 6.74805 7.16797 0 ]xsh
19.5771 636.452 mo
(reccommended material thicknesses:)
[4.71777 6.94385 6.08984 6.08984 7.58789 11.606 11.606 6.94385 7.65771 7.77002 6.94385 7.77002 
2.82813 11.606 7.16797 4.59229 6.94385 4.85791 3.44385 7.16797 3.56982 2.82813 4.73193 7.61572 
3.44385 6.38379 6.92969 7.6582 6.94385 5.86572 5.86572 6.94385 5.86572 0 ]xsh
19.5771 653.252 mo
(MDF)sh
45.0991 653.252 mo
( >2.75 <3.10mm, Acr)sh
161.957 653.252 mo
(ylic >2.90 <3.20)sh
19.5771 670.052 mo
(- n)sh
34.417 670.052 mo
(ote that uniform thickness is important)
[7.58789 4.5918 6.94385 2.82813 4.73193 7.61572 7.16797 4.73193 2.82813 7.68604 7.6582 3.44385 
3.9624 7.58789 4.85791 11.606 2.82813 4.73193 7.61572 3.44385 6.38379 6.92969 7.6582 6.94385 
5.86572 5.86572 2.82813 3.44385 5.86572 2.82813 3.44385 11.606 7.77002 7.58789 4.85791 4.47998 
7.16797 7.6582 0 ]xsh
19.5771 686.853 mo
(- en)sh
41.3613 686.853 mo
(sur)sh
59.6309 686.853 mo
(e g)sh
76.2632 686.853 mo
(ears are no thicker than surrounding acrylic parts)
[6.74805 7.16797 4.71826 5.86523 2.82813 7.16797 4.71826 6.94385 2.82813 7.6582 7.58789 2.82813 
4.73193 7.61572 3.44385 6.38379 6.67822 6.94385 4.85791 2.82813 4.73193 7.61572 7.16797 7.6582 
2.82813 5.86572 7.68604 4.85791 4.71826 7.58789 7.68604 7.65771 7.77002 3.44385 7.6582 7.05615 
2.82813 7.16797 6.38379 5.12354 6.53809 3.56982 3.44385 6.38379 2.82813 7.57422 7.16797 4.85791 
4.73193 0 ]xsh
WBPCOJ+SourceSansPro-Regular*1 [21 0 0 -21 0 0 ]msf
1082.59 32.5303 mo
(3mm Acrylic)
[10.437 17.4087 17.4087 4.2417 11.2979 9.57568 7.68555 9.80713 5.35498 5.16553 0 ]xsh
1493.85 407.253 mo
(~160 gsm Card)
[10.437 10.437 10.437 10.437 4.2417 10.584 8.79883 17.4087 4.2417 11.8857 10.752 7.07666 
0 ]xsh
1364.33 753.264 mo
(Piccolo PCB outline)
[11.9912 5.16553 9.13477 9.13525 11.3818 5.35449 11.3818 4.24219 11.9907 11.8862 12.2427 4.2417 
11.3818 11.5293 7.09766 5.35498 5.16553 11.4868 0 ]xsh
644.649 32.5303 mo
(3mm MDF)sh
.002835 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
163.955 431.87 mo
216.924 431.87 li
1 0 0 rgb
@
161.97 431.87 mo
153.487 431.87 li
153.487 447.899 li
144.977 447.899 li
144.977 464.089 li
153.487 464.089 li
153.487 483.97 li
144.977 483.97 li
144.977 489.979 li
145.087 491.089 li
145.417 492.149 li
145.937 493.13 li
146.637 493.989 li
147.498 494.69 li
148.477 495.22 li
149.547 495.54 li
150.647 495.649 li
230.017 495.649 li
231.127 495.54 li
232.187 495.22 li
233.167 494.69 li
234.027 493.989 li
234.737 493.13 li
235.257 492.149 li
235.577 491.089 li
235.687 489.979 li
235.687 483.97 li
227.187 483.97 li
227.187 464.089 li
235.687 464.089 li
235.687 447.899 li
227.187 447.899 li
227.187 431.87 li
218.909 431.87 li
@
278.154 60.2104 mo
331.124 60.2104 li
@
276.169 60.2104 mo
268.106 60.2104 li
268.106 98.8999 li
259.176 98.8989 li
259.176 125.909 li
268.106 125.909 li
268.106 118.974 li
264.566 118.974 li
264.566 114.724 li
268.106 114.724 li
268.106 111.229 li
276.617 111.229 li
276.617 114.724 li
280.157 114.724 li
280.157 118.974 li
276.617 118.974 li
276.617 132.489 li
293.926 132.489 li
293.926 135.28 li
294.037 136.379 li
294.367 137.45 li
294.886 138.429 li
295.586 139.28 li
296.447 139.989 li
297.426 140.509 li
298.497 140.839 li
299.596 140.94 li
309.546 140.94 li
310.657 140.839 li
311.716 140.509 li
312.697 139.989 li
313.556 139.28 li
314.256 138.429 li
314.787 137.45 li
315.106 136.379 li
315.216 135.28 li
315.216 132.489 li
341.386 132.489 li
341.386 125.909 li
349.886 125.909 li
349.886 98.8999 li
341.386 98.8999 li
341.386 60.2104 li
333.108 60.2104 li
@
655.718 249.023 mo
635.23 249.023 li
635.23 260.354 li
627.291 260.354 li
627.291 271.694 li
635.23 271.694 li
635.23 288.704 li
627.291 288.704 li
627.291 300.043 li
635.23 300.043 li
635.23 322.014 li
641.711 322.014 li
641.711 318.463 li
645.961 318.463 li
645.961 322.014 li
683.421 322.014 li
683.421 330.514 li
697.591 330.514 li
697.591 322.014 li
720.271 322.014 li
720.271 330.514 li
734.441 330.514 li
734.441 322.014 li
745.781 322.014 li
745.781 263.194 li
745.511 260.424 li
744.701 257.773 li
743.391 255.312 li
741.631 253.173 li
739.481 251.402 li
737.031 250.093 li
734.371 249.292 li
731.611 249.023 li
725.292 249.023 li
@
723.308 249.023 mo
657.702 249.023 li
@
411.443 249.023 mo
345.837 249.023 li
@
343.853 249.023 mo
337.535 249.023 li
334.775 249.293 li
332.115 250.094 li
329.665 251.404 li
327.516 253.174 li
325.755 255.314 li
324.445 257.764 li
323.636 260.424 li
323.365 263.193 li
323.365 322.014 li
334.705 322.014 li
334.705 330.514 li
348.875 330.514 li
348.875 322.014 li
371.556 322.014 li
371.556 330.514 li
385.726 330.514 li
385.726 322.014 li
423.186 322.014 li
423.186 318.463 li
427.436 318.463 li
427.436 322.014 li
433.915 322.014 li
433.915 300.043 li
441.855 300.043 li
441.855 288.703 li
433.915 288.703 li
433.915 271.693 li
441.855 271.693 li
441.855 260.354 li
433.915 260.354 li
433.915 249.023 li
413.427 249.023 li
@
924.456 84.0557 mo
924.456 72.5718 li
904.323 72.5718 li
904.323 81.0815 li
881.936 81.0815 li
881.936 72.5718 li
861.803 72.5718 li
861.803 98.3745 li
881.936 98.3745 li
881.936 89.8647 li
904.323 89.8647 li
904.323 98.3745 li
924.456 98.3745 li
924.456 86.8906 li
@
924.456 118.762 mo
924.456 107.278 li
904.323 107.278 li
904.323 115.788 li
881.936 115.788 li
881.936 107.278 li
861.803 107.278 li
861.803 133.081 li
881.936 133.081 li
881.936 124.571 li
904.323 124.571 li
904.323 133.081 li
924.456 133.081 li
924.456 121.597 li
@
614.721 157.438 mo
606.221 157.438 li
606.221 173.639 li
614.721 173.639 li
614.721 157.438 li
cp
@
694.07 214.549 mo
694.07 223.338 li
699.461 223.338 li
699.461 220.219 li
722.7 220.219 li
722.7 223.338 li
728.09 223.338 li
728.09 214.549 li
694.07 214.549 li
cp
@
620.225 141.409 mo
606.221 141.409 li
604.83 141.549 li
603.5 141.948 li
602.28 142.608 li
601.211 143.489 li
600.32 144.569 li
599.67 145.788 li
599.271 147.118 li
599.131 148.499 li
599.131 196.688 li
599.24 197.799 li
599.561 198.858 li
600.08 199.838 li
600.791 200.698 li
601.65 201.399 li
602.631 201.928 li
603.69 202.249 li
604.801 202.358 li
606.221 202.358 li
606.221 193.518 li
614.721 193.518 li
614.721 197.538 li
650.15 197.538 li
650.15 206.329 li
644.771 206.329 li
644.771 203.208 li
621.521 203.208 li
621.521 206.329 li
614.721 206.329 li
614.721 213.698 li
628.92 213.698 li
628.92 218.538 li
628.971 219.088 li
629.131 219.618 li
629.391 220.108 li
629.75 220.538 li
630.18 220.899 li
630.67 221.159 li
631.2 221.319 li
631.75 221.368 li
655.771 221.368 li
656.33 221.319 li
656.86 221.159 li
657.35 220.899 li
657.78 220.538 li
658.131 220.108 li
658.391 219.618 li
658.551 219.088 li
658.61 218.538 li
658.61 213.698 li
687.9 213.698 li
687.9 236.418 li
687.95 236.969 li
688.11 237.508 li
688.37 237.999 li
688.73 238.428 li
689.16 238.778 li
689.65 239.038 li
690.18 239.198 li
690.73 239.258 li
736.34 239.258 li
736.891 239.198 li
737.42 239.038 li
737.91 238.778 li
738.34 238.428 li
738.69 237.999 li
738.95 237.508 li
739.12 236.969 li
739.17 236.418 li
739.17 213.698 li
745.78 213.698 li
745.78 155.588 li
745.51 152.819 li
744.7 150.159 li
743.391 147.708 li
741.631 145.569 li
739.48 143.799 li
737.03 142.489 li
734.37 141.688 li
731.61 141.409 li
724.662 141.409 li
@
665.882 200.183 mo
669.431 200.183 li
669.43 207.118 li
677.93 207.118 li
677.931 200.183 li
681.472 200.183 li
681.472 195.933 li
677.931 195.933 li
677.93 180.098 li
669.43 180.098 li
669.431 195.933 li
665.882 195.933 li
665.882 200.183 li
cp
@
622.209 141.409 mo
722.678 141.409 li
@
399.724 180.099 mo
391.214 180.099 li
391.214 207.119 li
399.724 207.119 li
399.724 180.099 li
cp
@
344.471 141.409 mo
337.544 141.409 li
334.775 141.689 li
332.115 142.489 li
329.666 143.799 li
327.525 145.559 li
325.755 147.709 li
324.445 150.159 li
323.644 152.819 li
323.365 155.589 li
323.365 213.699 li
329.974 213.699 li
329.974 236.419 li
330.035 236.969 li
330.195 237.509 li
330.455 238 li
330.804 238.429 li
331.234 238.779 li
331.724 239.04 li
332.265 239.199 li
332.814 239.259 li
378.416 239.259 li
378.974 239.199 li
379.505 239.04 li
379.996 238.779 li
380.425 238.429 li
380.775 238 li
381.035 237.509 li
381.195 236.969 li
381.255 236.419 li
381.255 213.699 li
410.544 213.699 li
410.544 218.54 li
410.595 219.089 li
410.754 219.619 li
411.015 220.109 li
411.375 220.54 li
411.804 220.899 li
412.294 221.159 li
412.825 221.319 li
413.375 221.369 li
437.394 221.369 li
437.955 221.319 li
438.484 221.159 li
438.974 220.899 li
439.404 220.54 li
439.754 220.109 li
440.015 219.619 li
440.174 219.089 li
440.234 218.54 li
440.234 213.699 li
454.424 213.699 li
454.424 206.329 li
447.625 206.329 li
447.625 203.209 li
424.384 203.209 li
424.384 206.329 li
418.995 206.329 li
418.995 197.54 li
454.424 197.54 li
454.424 193.519 li
462.935 193.519 li
462.935 202.359 li
464.355 202.359 li
465.455 202.25 li
466.515 201.929 li
467.504 201.399 li
468.355 200.699 li
469.064 199.839 li
469.584 198.859 li
469.915 197.799 li
470.015 196.689 li
470.015 148.5 li
469.884 147.119 li
469.484 145.79 li
468.826 144.559 li
467.945 143.489 li
466.875 142.609 li
465.644 141.949 li
464.314 141.549 li
462.935 141.409 li
448.908 141.409 li
@
375.076 214.549 mo
341.064 214.549 li
341.064 223.339 li
346.445 223.339 li
346.445 220.219 li
369.695 220.219 li
369.695 223.339 li
375.076 223.339 li
375.076 214.549 li
cp
@
454.425 173.629 mo
462.935 173.629 li
462.935 157.439 li
454.425 157.439 li
454.425 173.629 li
cp
@
446.924 141.409 mo
439.214 141.409 li
438.945 141.439 li
438.675 141.519 li
438.425 141.649 li
438.214 141.829 li
438.035 142.04 li
437.904 142.29 li
437.826 142.549 li
437.794 142.829 li
437.794 146.069 li
437.845 146.549 li
437.964 147.019 li
438.166 147.459 li
438.435 147.859 li
438.775 148.209 li
439.166 148.489 li
439.605 148.709 li
440.064 148.849 li
440.294 148.909 li
440.515 149.019 li
440.714 149.159 li
440.884 149.339 li
441.015 149.54 li
441.115 149.759 li
441.185 149.989 li
441.205 150.229 li
441.205 150.939 li
441.175 151.219 li
441.095 151.489 li
440.964 151.729 li
440.785 151.949 li
440.576 152.119 li
440.326 152.25 li
440.054 152.329 li
439.785 152.359 li
431.275 152.359 li
431.005 152.329 li
430.734 152.25 li
430.496 152.119 li
430.275 151.949 li
430.105 151.729 li
429.964 151.489 li
429.884 151.219 li
429.865 150.939 li
429.865 150.159 li
429.884 149.919 li
429.945 149.689 li
430.044 149.469 li
430.185 149.269 li
430.355 149.089 li
430.544 148.949 li
430.765 148.839 li
430.996 148.779 li
431.464 148.639 li
431.894 148.419 li
432.285 148.139 li
432.625 147.79 li
432.894 147.389 li
433.095 146.949 li
433.224 146.479 li
433.265 146 li
433.265 142.829 li
433.234 142.549 li
433.154 142.29 li
433.025 142.04 li
432.845 141.829 li
432.634 141.649 li
432.384 141.519 li
432.125 141.439 li
431.845 141.409 li
360.755 141.409 li
360.474 141.439 li
360.214 141.519 li
359.964 141.649 li
359.755 141.829 li
359.576 142.04 li
359.445 142.29 li
359.365 142.549 li
359.335 142.829 li
359.335 163.25 li
359.375 163.729 li
359.496 164.199 li
359.705 164.639 li
359.974 165.04 li
360.314 165.389 li
360.705 165.679 li
361.134 165.889 li
361.605 166.029 li
361.835 166.099 li
362.054 166.199 li
362.246 166.339 li
362.416 166.519 li
362.554 166.719 li
362.654 166.939 li
362.714 167.169 li
362.734 167.419 li
362.734 168.119 li
362.705 168.399 li
362.625 168.669 li
362.496 168.909 li
362.326 169.129 li
362.105 169.299 li
361.865 169.429 li
361.595 169.509 li
361.314 169.54 li
352.814 169.54 li
352.535 169.509 li
352.275 169.429 li
352.025 169.299 li
351.814 169.129 li
351.634 168.909 li
351.505 168.669 li
351.425 168.399 li
351.394 168.119 li
351.394 167.359 li
351.416 167.119 li
351.484 166.879 li
351.585 166.659 li
351.714 166.459 li
351.884 166.29 li
352.085 166.149 li
352.294 166.04 li
352.535 165.969 li
352.996 165.829 li
353.435 165.619 li
353.826 165.329 li
354.166 164.989 li
354.435 164.589 li
354.634 164.139 li
354.755 163.679 li
354.794 163.189 li
354.794 142.829 li
354.775 142.549 li
354.695 142.29 li
354.564 142.04 li
354.384 141.829 li
354.166 141.649 li
353.925 141.519 li
353.654 141.439 li
353.384 141.409 li
346.455 141.409 li
@
368.362 430.88 mo
368.361 365.274 li
@
368.361 363.29 mo
368.361 355.272 li
368.581 352.802 li
369.231 350.401 li
370.281 348.151 li
371.711 346.122 li
373.472 344.372 li
375.512 342.962 li
377.771 341.923 li
380.171 341.302 li
381.969 341.222 li
383.179 341.423 li
384.329 341.872 li
385.349 342.562 li
386.188 343.452 li
386.829 344.503 li
387.219 345.661 li
387.358 346.892 li
387.359 454.481 li
382.542 454.481 li
379.772 454.212 li
377.112 453.411 li
374.662 452.103 li
372.512 450.333 li
370.751 448.192 li
369.442 445.731 li
368.631 443.083 li
368.362 440.312 li
368.362 432.864 li
@
373.463 431.812 mo
373.783 433.379 li
374.672 434.712 li
376.006 435.61 li
377.572 435.92 li
379.147 435.61 li
380.481 434.712 li
381.371 433.379 li
381.69 431.812 li
381.371 430.237 li
380.481 428.902 li
379.147 428.013 li
377.572 427.703 li
376.006 428.013 li
374.672 428.902 li
373.783 430.237 li
373.463 431.812 li
cp
@
373.463 363.782 mo
373.782 365.347 li
374.672 366.682 li
376.006 367.571 li
377.571 367.89 li
379.146 367.571 li
380.48 366.682 li
381.37 365.347 li
381.689 363.782 li
381.37 362.206 li
380.48 360.873 li
379.146 359.983 li
377.571 359.665 li
376.006 359.983 li
374.672 360.873 li
373.782 362.206 li
373.463 363.782 li
cp
@
695.681 363.781 mo
695.373 362.206 li
694.473 360.871 li
693.139 359.982 li
691.573 359.663 li
689.998 359.982 li
688.664 360.871 li
687.773 362.206 li
687.464 363.781 li
687.773 365.348 li
688.664 366.681 li
689.998 367.57 li
691.573 367.889 li
693.139 367.57 li
694.473 366.681 li
695.373 365.348 li
695.681 363.781 li
cp
@
700.783 365.274 mo
700.783 430.88 li
@
700.783 363.29 mo
700.783 355.271 li
700.563 352.802 li
699.923 350.402 li
698.863 348.152 li
697.433 346.121 li
695.673 344.371 li
693.632 342.962 li
691.373 341.921 li
688.972 341.302 li
687.175 341.222 li
685.965 341.421 li
684.815 341.871 li
683.795 342.562 li
682.956 343.451 li
682.315 344.501 li
681.925 345.662 li
681.786 346.892 li
681.786 454.481 li
686.613 454.481 li
689.373 454.212 li
692.033 453.411 li
694.483 452.101 li
696.632 450.331 li
698.392 448.19 li
699.703 445.731 li
700.513 443.081 li
700.783 440.312 li
700.783 432.864 li
@
687.464 431.812 mo
687.773 433.377 li
688.664 434.712 li
689.998 435.61 li
691.573 435.921 li
693.139 435.61 li
694.473 434.712 li
695.373 433.377 li
695.681 431.812 li
695.373 430.235 li
694.473 428.902 li
693.139 428.013 li
691.573 427.704 li
689.998 428.013 li
688.664 428.902 li
687.773 430.235 li
687.464 431.812 li
cp
@
928.163 419.395 mo
928.163 410.895 li
919.663 410.895 li
919.663 419.395 li
928.163 419.395 li
cp
@
938.233 529.943 mo
938.543 531.509 li
939.432 532.843 li
940.766 533.742 li
942.342 534.052 li
943.909 533.742 li
945.241 532.843 li
946.141 531.509 li
946.45 529.943 li
946.141 528.366 li
945.241 527.034 li
943.909 526.145 li
942.342 525.825 li
940.766 526.145 li
939.432 527.034 li
938.543 528.366 li
938.233 529.943 li
cp
@
956.575 298.215 mo
956.883 299.792 li
957.774 301.115 li
959.106 302.014 li
960.682 302.323 li
962.258 302.014 li
963.592 301.115 li
964.483 299.792 li
964.792 298.215 li
964.483 296.638 li
963.592 295.306 li
962.258 294.416 li
960.682 294.106 li
959.106 294.416 li
957.774 295.306 li
956.883 296.638 li
956.575 298.215 li
cp
@
847.241 529.943 mo
846.92 528.366 li
846.032 527.034 li
844.698 526.145 li
843.122 525.825 li
841.555 526.145 li
840.223 527.034 li
839.333 528.366 li
839.014 529.943 li
839.333 531.509 li
840.223 532.843 li
841.555 533.742 li
843.122 534.052 li
844.698 533.742 li
846.032 532.843 li
846.92 531.509 li
847.241 529.943 li
cp
@
828.891 298.215 mo
828.583 296.638 li
827.692 295.306 li
826.358 294.416 li
824.784 294.106 li
823.208 294.416 li
821.874 295.306 li
820.983 296.638 li
820.674 298.215 li
820.983 299.792 li
821.874 301.115 li
823.208 302.014 li
824.784 302.323 li
826.358 302.014 li
827.692 301.115 li
828.583 299.792 li
828.891 298.215 li
cp
@
857.303 410.895 mo
857.303 419.395 li
865.803 419.395 li
865.803 410.895 li
857.303 410.895 li
cp
@
26.5967 509.407 mo
25.6982 510.741 li
25.3887 512.317 li
25.6982 513.884 li
26.5967 515.218 li
27.9326 516.116 li
29.4971 516.425 li
31.0732 516.116 li
32.4072 515.218 li
33.2959 513.884 li
33.6152 512.317 li
33.2959 510.741 li
32.4072 509.407 li
31.0732 508.519 li
29.4971 508.208 li
27.9326 508.519 li
26.5967 509.407 li
cp
@
191.324 504.888 mo
235.017 504.888 li
238.327 504.558 li
241.517 503.587 li
244.458 502.017 li
247.038 499.907 li
249.157 497.327 li
250.728 494.388 li
251.696 491.196 li
252.017 487.878 li
252.017 437.196 li
251.696 433.878 li
250.728 430.687 li
249.157 427.747 li
247.038 425.167 li
244.458 423.058 li
241.517 421.487 li
238.327 420.517 li
235.017 420.187 li
59.4268 420.187 li
58.667 420.228 li
57.917 420.327 li
57.1768 420.487 li
56.4463 420.728 li
55.7471 421.026 li
55.0771 421.378 li
54.4463 421.798 li
53.8467 422.267 li
48.4463 427.696 li
43.8877 433.856 li
40.2666 440.606 li
37.667 447.817 li
36.1377 455.327 li
35.7178 462.978 li
36.417 470.606 li
38.2178 478.058 li
41.0771 485.167 li
44.9365 491.788 li
49.7178 497.776 li
55.3174 503.007 li
55.8975 503.427 li
56.5166 503.808 li
57.1572 504.138 li
57.8271 504.397 li
58.5166 504.606 li
59.2178 504.767 li
59.9365 504.856 li
60.6572 504.888 li
99.9058 504.888 li
@
101.89 504.888 mo
189.34 504.888 li
@
19.5771 429.038 mo
19.5771 496.376 li
@
265.345 394.757 mo
265.026 393.183 li
264.137 391.849 li
262.802 390.958 li
261.237 390.649 li
259.66 390.958 li
258.327 391.849 li
257.438 393.183 li
257.119 394.757 li
257.438 396.333 li
258.327 397.667 li
259.66 398.556 li
261.237 398.866 li
262.802 398.556 li
264.137 397.667 li
265.026 396.333 li
265.345 394.757 li
cp
@
257.119 530.657 mo
257.438 532.233 li
258.327 533.567 li
259.661 534.456 li
261.237 534.765 li
262.802 534.456 li
264.138 533.567 li
265.026 532.233 li
265.345 530.657 li
265.026 529.081 li
264.138 527.747 li
262.802 526.858 li
261.237 526.548 li
259.661 526.858 li
258.327 527.747 li
257.438 529.081 li
257.119 530.657 li
cp
@
25.3887 413.097 mo
25.6982 414.673 li
26.5967 416.007 li
27.9316 416.896 li
29.4971 417.216 li
31.0732 416.896 li
32.4063 416.007 li
33.2959 414.673 li
33.6152 413.097 li
33.2959 411.532 li
32.4063 410.198 li
31.0732 409.308 li
29.4971 408.989 li
27.9316 409.308 li
26.5967 410.198 li
25.6982 411.532 li
25.3887 413.097 li
cp
@
19.5771 498.36 mo
19.5771 512.317 li
19.7666 514.247 li
20.3369 516.106 li
21.2471 517.827 li
22.4873 519.327 li
23.9873 520.567 li
25.708 521.478 li
27.5674 522.048 li
29.4971 522.237 li
247.767 522.237 li
248.878 522.347 li
249.937 522.667 li
250.917 523.187 li
251.776 523.897 li
252.478 524.757 li
253.007 525.737 li
253.327 526.798 li
253.437 527.907 li
253.437 537.827 li
253.548 538.937 li
253.866 539.997 li
254.397 540.978 li
255.097 541.837 li
255.958 542.538 li
256.937 543.067 li
257.997 543.388 li
259.106 543.497 li
263.356 543.497 li
264.468 543.388 li
265.526 543.067 li
266.507 542.538 li
267.366 541.837 li
268.077 540.978 li
268.597 539.997 li
268.917 538.937 li
269.026 537.827 li
269.026 387.587 li
268.917 386.487 li
268.597 385.417 li
268.077 384.437 li
267.366 383.578 li
266.507 382.877 li
265.526 382.357 li
264.468 382.027 li
263.356 381.917 li
259.106 381.917 li
257.997 382.027 li
256.937 382.357 li
255.958 382.877 li
255.097 383.578 li
254.397 384.437 li
253.866 385.417 li
253.548 386.487 li
253.437 387.587 li
253.437 397.507 li
253.327 398.616 li
253.007 399.677 li
252.478 400.657 li
251.776 401.517 li
250.917 402.228 li
249.937 402.747 li
248.878 403.067 li
247.767 403.177 li
29.4971 403.177 li
27.5674 403.366 li
25.708 403.937 li
23.9873 404.856 li
22.4873 406.087 li
21.2471 407.587 li
20.3369 409.308 li
19.7666 411.167 li
19.5771 413.097 li
19.5771 427.054 li
@
447.795 342.205 mo
415.512 342.205 li
412.752 342.485 li
410.092 343.285 li
407.642 344.595 li
405.492 346.355 li
403.732 348.505 li
402.422 350.955 li
401.612 353.615 li
401.342 356.384 li
401.342 364.282 li
667.802 364.282 li
667.802 356.384 li
667.522 353.615 li
666.722 350.955 li
665.412 348.505 li
663.652 346.355 li
661.502 344.595 li
659.052 343.285 li
656.392 342.485 li
653.622 342.205 li
621.847 342.205 li
@
619.863 342.205 mo
581.342 342.205 li
581.342 332.285 li
581.232 331.185 li
580.912 330.115 li
580.382 329.134 li
579.682 328.275 li
578.822 327.575 li
577.842 327.044 li
576.782 326.724 li
575.672 326.615 li
493.472 326.615 li
492.362 326.724 li
491.302 327.044 li
490.322 327.575 li
489.462 328.275 li
488.752 329.134 li
488.232 330.115 li
487.912 331.185 li
487.802 332.285 li
487.802 342.205 li
449.78 342.205 li
@
517.562 342.205 mo
551.582 342.205 li
551.582 333.705 li
517.562 333.705 li
517.562 342.205 li
cp
@
499.284 337.955 mo
499.593 339.531 li
500.482 340.864 li
501.816 341.753 li
503.392 342.063 li
504.958 341.753 li
506.292 340.864 li
507.191 339.531 li
507.5 337.955 li
507.191 336.379 li
506.292 335.045 li
504.958 334.156 li
503.392 333.846 li
501.816 334.156 li
500.482 335.045 li
499.593 336.379 li
499.284 337.955 li
cp
@
561.644 337.955 mo
561.953 339.531 li
562.842 340.864 li
564.176 341.753 li
565.752 342.063 li
567.328 341.753 li
568.662 340.864 li
569.551 339.531 li
569.861 337.955 li
569.551 336.379 li
568.662 335.045 li
567.328 334.156 li
565.752 333.846 li
564.176 334.156 li
562.842 335.045 li
561.953 336.379 li
561.644 337.955 li
cp
@
331.615 430.88 mo
331.615 365.274 li
@
331.615 432.864 mo
331.615 440.377 li
331.884 443.137 li
332.695 445.797 li
334.004 448.246 li
335.764 450.396 li
337.915 452.156 li
340.365 453.467 li
343.024 454.275 li
345.785 454.547 li
352.945 454.547 li
354.054 454.436 li
355.115 454.115 li
356.094 453.586 li
356.955 452.887 li
357.665 452.025 li
358.184 451.047 li
358.504 449.986 li
358.615 448.877 li
358.615 346.827 li
358.504 345.727 li
358.184 344.657 li
357.665 343.676 li
356.955 342.817 li
356.094 342.116 li
355.115 341.596 li
354.054 341.266 li
352.945 341.157 li
345.785 341.157 li
343.024 341.436 li
340.365 342.237 li
337.915 343.547 li
335.764 345.317 li
334.004 347.458 li
332.695 349.907 li
331.884 352.567 li
331.615 355.336 li
331.615 363.29 li
@
336.716 431.865 mo
337.025 433.442 li
337.915 434.777 li
339.249 435.666 li
340.825 435.986 li
342.4 435.666 li
343.734 434.777 li
344.624 433.442 li
344.933 431.865 li
344.624 430.301 li
343.734 428.966 li
342.4 428.067 li
340.825 427.758 li
339.249 428.067 li
337.915 428.966 li
337.025 430.301 li
336.716 431.865 li
cp
@
344.933 363.836 mo
344.624 362.262 li
343.734 360.937 li
342.4 360.038 li
340.825 359.728 li
339.249 360.038 li
337.915 360.937 li
337.025 362.262 li
336.716 363.836 li
337.025 365.413 li
337.915 366.746 li
339.249 367.635 li
340.825 367.945 li
342.4 367.635 li
343.734 366.746 li
344.624 365.413 li
344.933 363.836 li
cp
@
724.212 431.933 mo
724.521 433.498 li
725.411 434.833 li
726.744 435.722 li
728.32 436.042 li
729.896 435.722 li
731.229 434.833 li
732.119 433.498 li
732.429 431.933 li
732.119 430.356 li
731.229 429.021 li
729.896 428.132 li
728.32 427.813 li
726.744 428.132 li
725.411 429.021 li
724.521 430.356 li
724.212 431.933 li
cp
@
737.53 365.274 mo
737.53 430.88 li
@
737.53 363.29 mo
737.53 355.392 li
737.26 352.632 li
736.45 349.972 li
735.141 347.523 li
733.38 345.373 li
731.23 343.613 li
728.78 342.302 li
726.12 341.492 li
723.36 341.222 li
716.2 341.222 li
715.09 341.332 li
714.03 341.652 li
713.05 342.171 li
712.19 342.882 li
711.49 343.742 li
710.96 344.722 li
710.641 345.783 li
710.53 346.892 li
710.53 448.933 li
710.641 450.042 li
710.96 451.103 li
711.49 452.081 li
712.19 452.942 li
713.05 453.651 li
714.03 454.171 li
715.09 454.491 li
716.2 454.603 li
723.36 454.603 li
726.12 454.331 li
728.78 453.522 li
731.23 452.212 li
733.38 450.452 li
735.141 448.302 li
736.45 445.853 li
737.26 443.202 li
737.53 440.433 li
737.53 432.864 li
@
732.429 363.892 mo
732.119 362.327 li
731.229 360.992 li
729.896 360.103 li
728.32 359.784 li
726.744 360.103 li
725.411 360.992 li
724.521 362.327 li
724.212 363.892 li
724.521 365.469 li
725.411 366.802 li
726.744 367.691 li
728.32 368.01 li
729.896 367.691 li
731.229 366.802 li
732.119 365.469 li
732.429 363.892 li
cp
@
300.18 162.208 mo
299.869 160.631 li
298.98 159.299 li
297.646 158.409 li
296.07 158.1 li
294.495 158.409 li
293.162 159.299 li
292.271 160.631 li
291.963 162.208 li
292.271 163.783 li
293.162 165.117 li
294.495 166.007 li
296.07 166.316 li
297.646 166.007 li
298.98 165.117 li
299.869 163.783 li
300.18 162.208 li
cp
@
291.963 309.048 mo
292.271 310.613 li
293.162 311.948 li
294.495 312.837 li
296.07 313.156 li
297.646 312.837 li
298.98 311.948 li
299.869 310.613 li
300.18 309.048 li
299.869 307.471 li
298.98 306.138 li
297.646 305.247 li
296.07 304.93 li
294.495 305.247 li
293.162 306.138 li
292.271 307.471 li
291.963 309.048 li
cp
@
305.141 334.718 mo
305.141 268.417 li
305.16 267.958 li
305.211 267.507 li
305.301 267.058 li
305.432 266.616 li
305.592 266.196 li
305.791 265.776 li
306.012 265.388 li
306.271 265.007 li
312.512 256.696 li
312.771 256.317 li
313 255.927 li
313.191 255.517 li
313.352 255.087 li
313.48 254.647 li
313.57 254.208 li
313.621 253.747 li
313.641 253.298 li
313.641 246.677 li
305.711 246.677 li
305.711 170.147 li
313.641 170.147 li
313.641 163.123 li
@
291.963 402.017 mo
292.271 403.593 li
293.162 404.926 li
294.495 405.815 li
296.07 406.125 li
297.646 405.815 li
298.98 404.926 li
299.869 403.593 li
300.18 402.017 li
299.869 400.442 li
298.98 399.116 li
297.646 398.218 li
296.07 397.908 li
294.495 398.218 li
293.162 399.116 li
292.271 400.442 li
291.963 402.017 li
cp
@
313.641 161.138 mo
313.641 158.808 li
313.531 157.698 li
313.211 156.638 li
312.691 155.657 li
311.98 154.798 li
311.121 154.087 li
310.141 153.567 li
309.08 153.247 li
307.971 153.138 li
288.131 153.138 li
288.131 244.968 li
288.102 245.647 li
288.021 246.327 li
287.891 246.997 li
287.701 247.647 li
287.451 248.288 li
287.16 248.907 li
286.82 249.497 li
286.432 250.067 li
282.631 255.138 li
282.24 255.696 li
281.9 256.288 li
281.611 256.907 li
281.361 257.548 li
281.17 258.208 li
281.041 258.878 li
280.961 259.558 li
280.932 260.237 li
280.932 411.106 li
299.471 411.106 li
300.58 411.007 li
301.641 410.677 li
302.621 410.157 li
303.48 409.446 li
304.182 408.587 li
304.711 407.606 li
305.031 406.548 li
305.141 405.437 li
305.141 336.703 li
@
187.959 383.52 mo
188.268 385.096 li
189.157 386.429 li
190.492 387.318 li
192.067 387.628 li
193.643 387.318 li
194.977 386.429 li
195.866 385.096 li
196.176 383.52 li
195.866 381.945 li
194.977 380.61 li
193.643 379.721 li
192.067 379.411 li
190.492 379.721 li
189.157 380.61 li
188.268 381.945 li
187.959 383.52 li
cp
@
196.176 236.689 mo
195.866 235.115 li
194.977 233.78 li
193.643 232.891 li
192.067 232.571 li
190.492 232.891 li
189.157 233.78 li
188.268 235.115 li
187.959 236.689 li
188.268 238.256 li
189.157 239.589 li
190.492 240.479 li
192.067 240.798 li
193.643 240.479 li
194.977 239.589 li
195.866 238.256 li
196.176 236.689 li
cp
@
33.0386 383.52 mo
33.3477 385.096 li
34.2471 386.429 li
35.5713 387.318 li
37.147 387.628 li
38.7227 387.318 li
40.0566 386.429 li
40.9463 385.096 li
41.2554 383.52 li
40.9463 381.945 li
40.0566 380.61 li
38.7227 379.721 li
37.147 379.411 li
35.5713 379.721 li
34.2471 380.61 li
33.3477 381.945 li
33.0386 383.52 li
cp
@
41.2554 236.689 mo
40.9463 235.115 li
40.0566 233.78 li
38.7227 232.891 li
37.147 232.571 li
35.5713 232.891 li
34.2471 233.78 li
33.3477 235.115 li
33.0386 236.689 li
33.3477 238.256 li
34.2471 239.589 li
35.5713 240.479 li
37.147 240.798 li
38.7227 240.479 li
40.0566 239.589 li
40.9463 238.256 li
41.2554 236.689 li
cp
@
385.902 543.499 mo
394.303 543.499 li
395.413 543.39 li
396.473 543.069 li
397.452 542.54 li
398.313 541.841 li
399.012 540.979 li
399.543 539.999 li
399.862 538.931 li
399.973 537.829 li
399.973 460.999 li
399.823 460.101 li
399.403 459.3 li
398.752 458.669 li
397.932 458.28 li
397.032 458.159 li
396.143 458.339 li
395.352 458.8 li
394.743 459.47 li
390.122 465.72 li
384.672 471.259 li
378.502 475.979 li
371.733 479.79 li
364.493 482.61 li
356.932 484.399 li
349.192 485.11 li
341.432 484.729 li
333.803 483.271 li
326.442 480.759 li
319.522 477.239 li
313.153 472.79 li
307.463 467.489 li
302.583 461.45 li
298.583 454.79 li
295.563 447.63 li
293.573 440.12 li
292.653 432.399 li
292.573 431.87 li
292.393 431.36 li
292.122 430.899 li
291.772 430.489 li
291.352 430.159 li
290.872 429.909 li
290.352 429.759 li
289.823 429.71 li
283.772 429.71 li
283.213 429.759 li
282.682 429.919 li
282.192 430.19 li
281.762 430.54 li
281.413 430.97 li
281.153 431.46 li
280.993 431.989 li
280.932 432.54 li
280.932 537.829 li
281.043 538.931 li
281.362 539.999 li
281.893 540.979 li
282.592 541.841 li
283.452 542.54 li
284.432 543.069 li
285.493 543.39 li
286.602 543.499 li
295.003 543.499 li
@
304.756 470.659 mo
304.418 468.929 li
303.433 467.46 li
301.972 466.483 li
300.243 466.136 li
298.511 466.483 li
297.042 467.46 li
296.057 468.929 li
295.719 470.659 li
296.057 472.39 li
297.042 473.858 li
298.511 474.835 li
300.243 475.183 li
301.972 474.835 li
303.433 473.858 li
304.418 472.39 li
304.756 470.659 li
cp
@
369.262 524.649 mo
369.262 535.729 li
377.762 535.729 li
377.762 524.64 li
378.233 524.56 li
378.682 524.399 li
379.092 524.149 li
379.442 523.829 li
379.743 523.45 li
379.952 523.03 li
380.083 522.569 li
380.133 522.101 li
380.133 493.179 li
380.083 492.71 li
379.952 492.249 li
379.743 491.819 li
379.442 491.45 li
379.092 491.13 li
378.682 490.88 li
378.233 490.72 li
377.762 490.64 li
377.762 484.46 li
369.262 484.46 li
369.262 490.63 li
295.563 490.63 li
295.563 484.46 li
287.053 484.46 li
287.053 535.729 li
295.563 535.729 li
295.563 524.649 li
369.262 524.649 li
cp
@
383.917 543.499 mo
296.988 543.499 li
@
74.7754 23.4341 mo
161.705 23.4341 li
@
72.791 23.4341 mo
35.9653 23.4341 li
34.3052 23.5923 li
32.7056 24.0825 li
31.2354 24.8638 li
29.9453 25.9224 li
28.8955 27.2134 li
28.1055 28.6841 li
27.6255 30.2739 li
27.4556 31.9341 li
27.4556 184.713 li
27.5654 185.823 li
27.8853 186.883 li
28.4155 187.864 li
29.1152 188.723 li
29.9756 189.434 li
30.9556 189.954 li
32.0254 190.274 li
33.1255 190.383 li
49.1655 190.383 li
50.2754 190.274 li
51.3354 189.954 li
52.3154 189.434 li
53.1753 188.723 li
53.8853 187.864 li
54.4053 186.883 li
54.7256 185.823 li
54.8354 184.713 li
54.8354 63.0142 li
54.9453 61.9028 li
55.2656 60.8423 li
55.7954 59.8638 li
56.4956 59.0024 li
57.3555 58.2935 li
58.3354 57.7739 li
59.4053 57.4536 li
60.5054 57.3423 li
168.206 57.3423 li
169.315 57.4536 li
170.375 57.7739 li
171.355 58.2935 li
172.215 59.0024 li
172.916 59.8638 li
173.445 60.8423 li
173.766 61.9028 li
173.875 63.0142 li
173.905 184.713 li
174.016 185.813 li
174.335 186.883 li
174.865 187.864 li
175.565 188.723 li
176.425 189.422 li
177.405 189.944 li
178.465 190.274 li
179.575 190.383 li
194.845 190.383 li
195.956 190.274 li
197.016 189.944 li
197.996 189.422 li
198.855 188.723 li
199.565 187.864 li
200.085 186.883 li
200.405 185.813 li
200.516 184.713 li
200.516 138.704 li
200.535 138.252 li
200.595 137.803 li
200.686 137.354 li
200.805 136.913 li
200.965 136.493 li
201.166 136.073 li
201.396 135.684 li
201.655 135.303 li
207.885 126.993 li
208.146 126.614 li
208.375 126.223 li
208.565 125.813 li
208.735 125.383 li
208.855 124.944 li
208.945 124.493 li
209.005 124.043 li
209.025 123.592 li
209.025 116.973 li
201.085 116.973 li
201.085 40.4438 li
209.025 40.4438 li
209.025 29.104 li
208.916 27.9927 li
208.585 26.9341 li
208.065 25.9536 li
207.365 25.0923 li
206.505 24.3833 li
205.525 23.8638 li
204.456 23.5435 li
203.355 23.4341 li
163.689 23.4341 li
@
40.6431 32.5024 mo
40.3247 30.9277 li
39.4351 29.5933 li
38.1011 28.7036 li
36.5254 28.394 li
34.9595 28.7036 li
33.6255 29.5933 li
32.7363 30.9277 li
32.4175 32.5024 li
32.7363 34.0791 li
33.6255 35.4136 li
34.9595 36.3032 li
36.5254 36.6108 li
38.1011 36.3032 li
39.4351 35.4136 li
40.3247 34.0791 li
40.6431 32.5024 li
cp
@
195.554 32.5024 mo
195.245 30.9277 li
194.355 29.5933 li
193.021 28.7036 li
191.445 28.394 li
189.87 28.7036 li
188.545 29.5933 li
187.646 30.9277 li
187.337 32.5024 li
187.646 34.0791 li
188.545 35.4136 li
189.87 36.3032 li
191.445 36.6108 li
193.021 36.3032 li
194.355 35.4136 li
195.245 34.0791 li
195.554 32.5024 li
cp
@
32.4175 179.333 mo
32.7363 180.909 li
33.6255 182.242 li
34.9595 183.133 li
36.5254 183.451 li
38.1011 183.133 li
39.4351 182.242 li
40.3247 180.909 li
40.6431 179.333 li
40.3247 177.768 li
39.4351 176.433 li
38.1011 175.543 li
36.5254 175.224 li
34.9595 175.543 li
33.6255 176.433 li
32.7363 177.768 li
32.4175 179.333 li
cp
@
187.337 179.333 mo
187.646 180.909 li
188.545 182.242 li
189.87 183.133 li
191.445 183.451 li
193.021 183.133 li
194.355 182.242 li
195.245 180.909 li
195.554 179.333 li
195.245 177.768 li
194.355 176.433 li
193.021 175.543 li
191.445 175.224 li
189.87 175.543 li
188.545 176.433 li
187.646 177.768 li
187.337 179.333 li
cp
@
127.391 133.14 mo
127.391 280.793 li
@
114.212 290.61 mo
114.522 292.177 li
115.42 293.51 li
116.747 294.399 li
118.321 294.718 li
119.897 294.399 li
121.231 293.51 li
122.121 292.177 li
122.429 290.61 li
122.121 289.035 li
121.231 287.7 li
119.897 286.811 li
118.321 286.492 li
116.747 286.811 li
115.42 287.7 li
114.522 289.035 li
114.212 290.61 li
cp
@
122.429 143.77 mo
122.121 142.196 li
121.231 140.861 li
119.897 139.971 li
118.321 139.662 li
116.747 139.971 li
115.42 140.861 li
114.522 142.196 li
114.212 143.77 li
114.522 145.347 li
115.42 146.68 li
116.747 147.569 li
118.321 147.878 li
119.897 147.569 li
121.231 146.68 li
122.121 145.347 li
122.429 143.77 li
cp
@
127.391 131.155 mo
127.391 105.731 li
113.625 105.731 li
112.514 105.84 li
111.455 106.161 li
110.474 106.68 li
109.614 107.391 li
108.904 108.25 li
108.384 109.231 li
108.064 110.29 li
107.955 111.401 li
107.955 299.68 li
118.891 299.68 li
120.551 299.51 li
122.141 299.03 li
123.612 298.241 li
124.901 297.19 li
125.961 295.901 li
126.751 294.43 li
127.231 292.831 li
127.391 291.17 li
127.391 282.777 li
@
266.122 150.01 mo
265.812 148.435 li
264.922 147.101 li
263.588 146.211 li
262.013 145.901 li
260.437 146.211 li
259.104 147.101 li
258.214 148.435 li
257.905 150.01 li
258.214 151.586 li
259.104 152.919 li
260.437 153.809 li
262.013 154.118 li
263.588 153.809 li
264.922 152.919 li
265.812 151.586 li
266.122 150.01 li
cp
@
279.593 148.942 mo
279.593 146.611 li
279.483 145.5 li
279.153 144.439 li
278.632 143.461 li
277.933 142.6 li
277.073 141.9 li
276.093 141.371 li
275.023 141.051 li
273.923 140.939 li
252.375 140.939 li
252.375 329.221 li
252.485 330.32 li
252.815 331.391 li
253.335 332.371 li
254.036 333.23 li
254.895 333.93 li
255.875 334.461 li
256.946 334.781 li
258.045 334.891 li
271.083 334.891 li
271.083 324.506 li
@
257.905 296.85 mo
258.214 298.417 li
259.104 299.75 li
260.437 300.639 li
262.013 300.958 li
263.588 300.639 li
264.922 299.75 li
265.812 298.417 li
266.122 296.85 li
265.812 295.275 li
264.922 293.94 li
263.588 293.051 li
262.013 292.732 li
260.437 293.051 li
259.104 293.94 li
258.214 295.275 li
257.905 296.85 li
cp
@
279.593 150.926 mo
279.593 157.951 li
271.653 157.951 li
271.653 234.48 li
279.593 234.48 li
279.593 241.1 li
279.573 241.551 li
279.513 242.01 li
279.423 242.451 li
279.303 242.891 li
279.133 243.32 li
278.943 243.73 li
278.712 244.121 li
278.453 244.5 li
272.222 252.811 li
271.962 253.189 li
271.733 253.58 li
271.533 254 li
271.373 254.42 li
271.253 254.861 li
271.163 255.311 li
271.103 255.76 li
271.083 256.221 li
271.083 322.522 li
@
151.742 315.027 mo
152.061 316.604 li
152.95 317.936 li
154.284 318.826 li
155.85 319.135 li
157.425 318.826 li
158.759 317.936 li
159.649 316.604 li
159.968 315.027 li
159.649 313.452 li
158.759 312.118 li
157.425 311.228 li
155.85 310.918 li
154.284 311.228 li
152.95 312.118 li
152.061 313.452 li
151.742 315.027 li
cp
@
164.93 99.5571 mo
164.93 305.21 li
@
164.93 97.5728 mo
164.93 91.0874 li
164.9 90.7163 li
164.83 90.3569 li
164.71 90.0073 li
164.55 89.6772 li
164.34 89.3667 li
164.09 89.0874 li
163.82 88.8472 li
163.51 88.6362 li
148.06 79.7163 li
148.06 68.9565 li
148 68.4077 li
147.84 67.8765 li
147.58 67.3862 li
147.23 66.9565 li
146.8 66.6069 li
146.31 66.3374 li
145.78 66.1772 li
145.22 66.1265 li
143.21 66.1265 li
142.11 66.2378 li
141.05 66.5562 li
140.07 67.0776 li
139.21 67.7866 li
138.5 68.6479 li
137.98 69.6265 li
137.65 70.687 li
137.55 71.7964 li
137.55 324.097 li
156.419 324.097 li
158.08 323.937 li
159.68 323.447 li
161.15 322.667 li
162.43 321.607 li
163.49 320.318 li
164.28 318.847 li
164.76 317.257 li
164.93 315.597 li
164.93 307.195 li
@
159.968 168.197 mo
159.649 166.622 li
158.759 165.287 li
157.425 164.398 li
155.85 164.079 li
154.284 164.398 li
152.95 165.287 li
152.061 166.622 li
151.742 168.197 li
152.061 169.764 li
152.95 171.097 li
154.284 171.986 li
155.85 172.305 li
157.425 171.986 li
158.759 171.097 li
159.649 169.764 li
159.968 168.197 li
cp
@
235.687 318.21 mo
235.687 292.434 li
235.577 291.325 li
235.247 290.264 li
234.727 289.286 li
234.027 288.424 li
233.167 287.715 li
232.187 287.196 li
231.117 286.866 li
230.017 286.764 li
208.307 286.764 li
208.307 377.854 li
208.357 378.965 li
208.517 380.065 li
208.787 381.145 li
209.167 382.196 li
209.637 383.196 li
210.217 384.155 li
210.877 385.045 li
211.627 385.866 li
220.597 394.845 li
221.217 395.405 li
221.887 395.905 li
222.607 396.325 li
223.357 396.685 li
224.147 396.966 li
224.957 397.175 li
225.777 397.296 li
226.607 397.335 li
235.687 397.335 li
235.687 378.194 li
@
230.725 295.854 mo
230.406 294.279 li
229.517 292.945 li
228.183 292.055 li
226.607 291.746 li
225.041 292.055 li
223.707 292.945 li
222.818 294.279 li
222.499 295.854 li
222.818 297.43 li
223.707 298.754 li
225.041 299.655 li
226.607 299.962 li
228.183 299.655 li
229.517 298.754 li
230.406 297.43 li
230.725 295.854 li
cp
@
222.499 388.825 mo
222.818 390.401 li
223.707 391.734 li
225.041 392.624 li
226.607 392.942 li
228.183 392.624 li
229.517 391.734 li
230.406 390.401 li
230.725 388.825 li
230.406 387.26 li
229.517 385.925 li
228.183 385.036 li
226.607 384.716 li
225.041 385.036 li
223.707 385.925 li
222.818 387.26 li
222.499 388.825 li
cp
@
235.687 320.194 mo
235.687 376.21 li
@
60.8901 342.135 mo
60.8901 335.12 li
68.8301 335.12 li
68.8301 258.581 li
60.8901 258.581 li
60.8901 251.972 li
60.9102 251.511 li
60.9702 251.062 li
61.0601 250.61 li
61.1802 250.171 li
61.3501 249.751 li
61.54 249.341 li
61.77 248.94 li
62.0303 248.571 li
68.2603 240.251 li
68.52 239.87 li
68.75 239.481 li
68.9502 239.071 li
69.1099 238.642 li
69.23 238.2 li
69.3203 237.761 li
69.3799 237.302 li
69.3999 236.851 li
69.3999 170.54 li
@
60.8901 344.12 mo
60.8901 346.45 li
61 347.562 li
61.3301 348.62 li
61.8501 349.601 li
62.5503 350.462 li
63.4102 351.171 li
64.3901 351.69 li
65.46 352.021 li
66.5601 352.12 li
123.26 352.12 li
124.36 352.021 li
125.43 351.69 li
126.41 351.171 li
127.26 350.462 li
127.97 349.601 li
128.49 348.62 li
128.82 347.562 li
128.93 346.45 li
128.93 335.542 li
128.86 334.712 li
128.68 333.901 li
128.39 333.132 li
127.98 332.401 li
127.47 331.751 li
126.87 331.171 li
126.2 330.69 li
125.46 330.321 li
119.03 327.071 li
113.11 322.962 li
107.81 318.081 li
103.24 312.521 li
99.48 306.37 li
96.6099 299.771 li
94.6699 292.831 li
93.7202 285.69 li
97.5103 283.851 li
97.5103 281.78 li
93.6099 279.95 li
93.6099 277.892 li
97.5103 276.001 li
97.5103 273.931 li
93.6099 272.101 li
93.6099 270.03 li
97.5103 268.2 li
97.5103 266.132 li
93.6099 264.241 li
93.6099 262.181 li
97.5103 260.351 li
97.5103 258.222 li
93.6099 256.392 li
93.6099 254.321 li
97.5103 252.491 li
97.5103 250.37 li
93.6099 248.542 li
93.6099 246.472 li
97.5103 244.642 li
97.5103 242.511 li
93.6099 240.741 li
93.6099 238.61 li
97.5103 236.78 li
97.5103 234.722 li
93.6099 232.892 li
93.6099 230.761 li
97.5103 228.931 li
97.5103 226.86 li
93.6099 225.03 li
93.6099 222.911 li
97.5103 221.081 li
97.5103 219.011 li
93.6099 217.181 li
93.6099 215.052 li
97.5103 213.28 li
97.5103 211.151 li
93.6099 209.321 li
93.6099 207.261 li
97.5103 205.431 li
97.5103 203.302 li
93.6099 201.472 li
93.6099 199.401 li
97.5103 197.571 li
97.5103 195.44 li
93.6099 193.62 li
93.6099 191.552 li
97.5103 189.722 li
97.5103 187.591 li
93.6099 185.821 li
93.6099 183.69 li
97.5103 181.86 li
97.5103 179.802 li
93.6099 177.972 li
93.6099 175.841 li
97.5103 174.011 li
97.5103 171.94 li
93.6099 170.11 li
93.6099 167.981 li
97.5103 166.151 li
97.5103 164.091 li
93.6099 162.261 li
93.6099 160.132 li
97.5103 158.36 li
97.5103 156.231 li
93.6099 154.401 li
93.6099 152.331 li
97.5103 150.501 li
97.5103 148.382 li
93.6099 146.552 li
93.6099 144.481 li
97.5103 142.651 li
97.5103 140.521 li
93.6099 138.69 li
93.6099 136.632 li
97.5103 134.802 li
97.5103 132.671 li
93.6099 130.901 li
93.6099 128.771 li
97.5103 126.94 li
97.5103 124.87 li
93.6099 123.042 li
93.5708 121.062 li
94.8384 120.4 96.2134 119.801 97.6118 119.382 cv
97.6646 118.314 li
97.7759 117.255 li
96.4653 116.609 95.2427 115.826 94.0845 114.923 cv
94.4048 112.94 li
95.7798 112.477 97.1919 112.135 98.6333 111.949 cv
98.8716 110.852 li
99.1587 109.82 li
97.9556 109.035 96.8423 108.053 95.8423 107.012 cv
96.5142 105.086 li
97.9341 104.813 99.3911 104.697 100.823 104.705 cv
101.215 103.753 li
101.62 102.74 li
100.631 101.699 99.6821 100.611 98.8657 99.4248 cv
99.7505 97.6523 li
101.194 97.5674 102.655 97.6914 104.063 97.9922 cv
104.639 97.0088 li
105.266 96.0928 li
104.767 95.4795 104.322 94.8301 103.923 94.1553 cv
89.1001 94.1514 li
88.5503 94.2002 li
88.0103 94.3701 li
87.52 94.6318 li
87.0898 94.9814 li
86.7402 95.4111 li
86.48 95.9014 li
86.3203 96.4307 li
86.2603 96.9814 li
86.2603 107.741 li
70.8203 116.661 li
70.5103 116.87 li
70.23 117.11 li
69.98 117.392 li
69.7803 117.7 li
69.6099 118.03 li
69.4902 118.382 li
69.4199 118.751 li
69.3999 119.12 li
69.3999 168.555 li
@
74.3618 343.052 mo
74.6709 344.626 li
75.5605 345.961 li
76.894 346.851 li
78.4702 347.17 li
80.0459 346.851 li
81.3794 345.961 li
82.269 344.626 li
82.5786 343.052 li
82.269 341.485 li
81.3794 340.152 li
80.0459 339.251 li
78.4702 338.944 li
76.894 339.251 li
75.5605 340.152 li
74.6709 341.485 li
74.3618 343.052 li
cp
@
82.5786 196.222 mo
82.269 194.645 li
81.3794 193.313 li
80.0459 192.423 li
78.4702 192.113 li
76.894 192.423 li
75.5605 193.313 li
74.6709 194.645 li
74.3618 196.222 li
74.6709 197.796 li
75.5605 199.131 li
76.894 200.021 li
78.4702 200.33 li
80.0459 200.021 li
81.3794 199.131 li
82.269 197.796 li
82.5786 196.222 li
cp
@
222.139 272.344 mo
222.448 273.91 li
223.337 275.244 li
224.671 276.133 li
226.247 276.452 li
227.823 276.133 li
229.157 275.244 li
230.046 273.91 li
230.355 272.344 li
230.046 270.769 li
229.157 269.435 li
227.823 268.544 li
226.247 268.226 li
224.671 268.544 li
223.337 269.435 li
222.448 270.769 li
222.139 272.344 li
cp
@
222.139 125.504 mo
222.448 127.08 li
223.337 128.414 li
224.671 129.303 li
226.247 129.613 li
227.823 129.303 li
229.157 128.414 li
230.046 127.08 li
230.355 125.504 li
230.046 123.929 li
229.157 122.594 li
227.823 121.705 li
226.247 121.396 li
224.671 121.705 li
223.337 122.594 li
222.448 123.929 li
222.139 125.504 li
cp
@
377.049 125.504 mo
377.368 127.08 li
378.257 128.414 li
379.591 129.303 li
381.167 129.613 li
382.733 129.303 li
384.067 128.414 li
384.966 127.08 li
385.275 125.504 li
384.966 123.929 li
384.067 122.594 li
382.733 121.705 li
381.167 121.396 li
379.591 121.705 li
378.257 122.594 li
377.368 123.929 li
377.049 125.504 li
cp
@
230.355 32.5347 mo
230.046 30.958 li
229.157 29.625 li
227.823 28.7358 li
226.247 28.4165 li
224.671 28.7358 li
223.337 29.625 li
222.448 30.958 li
222.139 32.5347 li
222.448 34.0996 li
223.337 35.4346 li
224.671 36.3237 li
226.247 36.6431 li
227.823 36.3237 li
229.157 35.4346 li
230.046 34.0996 li
230.355 32.5347 li
cp
@
258.257 23.4341 mo
222.847 23.4341 li
221.737 23.5444 li
220.677 23.8647 li
219.697 24.394 li
218.837 25.0942 li
218.127 25.9546 li
217.606 26.9341 li
217.287 28.0044 li
217.177 29.105 li
217.177 166.134 li
217.157 166.594 li
217.097 167.044 li
217.007 167.494 li
216.888 167.924 li
216.728 168.355 li
216.526 168.764 li
216.297 169.164 li
216.037 169.535 li
209.808 177.855 li
209.547 178.224 li
209.317 178.625 li
209.127 179.035 li
208.957 179.464 li
208.837 179.894 li
208.747 180.344 li
208.687 180.794 li
208.667 181.254 li
208.667 187.865 li
216.606 187.865 li
216.606 264.404 li
208.667 264.404 li
208.667 275.744 li
208.776 276.844 li
209.106 277.914 li
209.627 278.894 li
210.327 279.754 li
211.187 280.455 li
212.167 280.984 li
213.237 281.304 li
214.337 281.414 li
234.187 281.414 li
234.187 189.584 li
234.207 188.904 li
234.297 188.224 li
234.427 187.554 li
234.617 186.894 li
234.857 186.254 li
235.157 185.634 li
235.497 185.044 li
235.887 184.484 li
242.857 175.195 li
243.237 174.625 li
243.587 174.035 li
243.877 173.414 li
244.117 172.775 li
244.307 172.125 li
244.447 171.455 li
244.527 170.775 li
244.557 170.084 li
244.557 56.4839 li
244.667 55.3843 li
244.987 54.314 li
245.507 53.3345 li
246.217 52.4741 li
247.077 51.7749 li
248.057 51.2437 li
249.117 50.9243 li
250.227 50.814 li
357.187 50.814 li
358.297 50.9243 li
359.357 51.2437 li
360.337 51.7749 li
361.197 52.4741 li
361.897 53.3345 li
362.427 54.314 li
362.747 55.3843 li
362.857 56.4839 li
362.857 114.525 li
362.907 115.634 li
363.077 116.734 li
363.347 117.814 li
363.717 118.865 li
364.197 119.875 li
364.767 120.824 li
365.427 121.724 li
366.177 122.544 li
375.147 131.514 li
375.767 132.084 li
376.437 132.574 li
377.157 133.004 li
377.907 133.365 li
378.697 133.644 li
379.507 133.844 li
380.327 133.964 li
381.167 134.014 li
390.237 134.014 li
390.237 29.105 li
390.127 28.0044 li
389.807 26.9341 li
389.277 25.9546 li
388.577 25.0942 li
387.717 24.394 li
386.737 23.8647 li
385.667 23.5444 li
384.567 23.4341 li
349.156 23.4341 li
@
385.275 32.5347 mo
384.966 30.958 li
384.067 29.625 li
382.733 28.7358 li
381.167 28.4165 li
379.591 28.7358 li
378.257 29.625 li
377.368 30.958 li
377.049 32.5347 li
377.368 34.0996 li
378.257 35.4346 li
379.591 36.3237 li
381.167 36.6431 li
382.733 36.3237 li
384.067 35.4346 li
384.966 34.0996 li
385.275 32.5347 li
cp
@
260.242 23.4341 mo
347.171 23.4341 li
@
83.4233 486.581 mo
83.7329 488.155 li
84.6318 489.489 li
85.9668 490.38 li
87.5317 490.688 li
89.1084 490.38 li
90.4409 489.489 li
91.3306 488.155 li
91.6401 486.581 li
91.3306 485.004 li
90.4409 483.671 li
89.1084 482.78 li
87.5317 482.472 li
85.9668 482.78 li
84.6318 483.671 li
83.7329 485.004 li
83.4233 486.581 li
cp
@
69.2231 487.573 mo
69.2231 495.649 li
88.1021 495.649 li
89.7622 495.491 li
91.3521 495.011 li
92.8228 494.22 li
94.1118 493.161 li
95.1724 491.87 li
95.9614 490.399 li
96.4419 488.81 li
96.6021 487.149 li
96.6021 477.06 li
69.2231 477.06 li
69.2231 485.589 li
@
83.4233 457.421 mo
83.7329 458.985 li
84.6318 460.32 li
85.9668 461.21 li
87.5317 461.528 li
89.1084 461.21 li
90.4414 460.32 li
91.3306 458.985 li
91.6401 457.421 li
91.3306 455.844 li
90.4414 454.509 li
89.1084 453.62 li
87.5317 453.301 li
85.9668 453.62 li
84.6318 454.509 li
83.7329 455.844 li
83.4233 457.421 li
cp
@
69.2231 458.413 mo
69.2231 466.489 li
88.1021 466.489 li
89.7622 466.319 li
91.3521 465.841 li
92.8228 465.05 li
94.1118 464.001 li
95.1724 462.71 li
95.9614 461.239 li
96.4419 459.64 li
96.6021 457.979 li
96.6021 447.899 li
69.2231 447.899 li
69.2231 456.429 li
@
105 458.413 mo
105 466.489 li
123.879 466.489 li
125.54 466.331 li
127.129 465.851 li
128.6 465.06 li
129.889 464.001 li
130.95 462.71 li
131.739 461.239 li
132.219 459.649 li
132.379 457.989 li
132.379 447.899 li
105 447.899 li
105 456.429 li
@
119.201 457.421 mo
119.51 458.995 li
120.409 460.329 li
121.744 461.22 li
123.309 461.528 li
124.886 461.22 li
126.218 460.329 li
127.108 458.995 li
127.417 457.421 li
127.108 455.844 li
126.218 454.511 li
124.886 453.62 li
123.309 453.312 li
121.744 453.62 li
120.409 454.511 li
119.51 455.844 li
119.201 457.421 li
cp
@
105 487.573 mo
105 495.649 li
123.879 495.649 li
125.54 495.479 li
127.129 495.001 li
128.6 494.21 li
129.889 493.161 li
130.95 491.87 li
131.739 490.399 li
132.219 488.8 li
132.379 487.14 li
132.379 477.06 li
105 477.06 li
105 485.589 li
@
119.201 486.581 mo
119.51 488.146 li
120.409 489.48 li
121.744 490.37 li
123.309 490.688 li
124.886 490.37 li
126.219 489.48 li
127.108 488.146 li
127.417 486.581 li
127.108 485.004 li
126.219 483.669 li
124.886 482.78 li
123.309 482.461 li
121.744 482.78 li
120.409 483.669 li
119.51 485.004 li
119.201 486.581 li
cp
@
856.655 27.0669 mo
844.473 27.0669 li
840.602 27.4478 li
836.881 28.5767 li
833.442 30.4165 li
830.442 32.8774 li
827.973 35.8872 li
826.143 39.3169 li
825.012 43.0376 li
824.631 46.9165 li
824.631 255.256 li
824.522 256.368 li
824.192 257.426 li
823.672 258.407 li
822.973 259.266 li
822.112 259.977 li
821.131 260.497 li
820.063 260.817 li
818.961 260.926 li
817.612 260.926 li
816.512 261.038 li
815.442 261.358 li
814.461 261.887 li
813.602 262.586 li
812.903 263.448 li
812.381 264.426 li
812.051 265.487 li
811.942 266.596 li
811.942 270.846 li
812.051 271.958 li
812.381 273.016 li
812.903 273.997 li
813.602 274.858 li
814.461 275.567 li
815.442 276.086 li
816.512 276.407 li
817.612 276.516 li
833.752 276.516 li
834.852 276.407 li
835.922 276.086 li
836.903 275.567 li
837.752 274.858 li
838.461 273.997 li
838.983 273.016 li
839.313 271.958 li
839.422 270.846 li
839.422 95.8364 li
839.932 88.5063 li
841.452 81.3267 li
843.961 74.4263 li
847.413 67.9478 li
851.733 62.0063 li
856.823 56.7271 li
862.612 52.2075 li
868.973 48.5376 li
875.772 45.7778 li
882.903 44.0063 li
890.202 43.2368 li
897.542 43.4868 li
904.772 44.7661 li
911.752 47.0278 li
918.352 50.2466 li
924.442 54.3462 li
929.893 59.2661 li
934.612 64.8872 li
938.512 71.1079 li
941.493 77.8169 li
943.522 84.8774 li
944.551 92.147 li
940.762 93.9165 li
940.762 96.0474 li
944.663 97.8774 li
944.663 99.9478 li
940.762 101.778 li
940.762 103.897 li
944.663 105.727 li
944.663 107.797 li
940.762 109.627 li
940.762 111.756 li
944.663 113.528 li
944.663 115.647 li
940.762 117.487 li
940.762 119.547 li
944.663 121.377 li
944.663 123.506 li
940.762 125.336 li
940.762 127.407 li
944.663 129.237 li
944.663 131.358 li
940.762 133.186 li
940.762 135.256 li
944.663 137.086 li
944.663 139.217 li
940.762 140.987 li
940.762 143.118 li
944.663 144.948 li
944.663 147.006 li
940.762 148.836 li
940.762 150.967 li
944.663 152.797 li
944.663 154.868 li
940.762 156.698 li
940.762 158.827 li
944.663 160.647 li
944.663 162.717 li
940.762 164.547 li
940.762 166.676 li
944.663 168.448 li
944.663 170.577 li
940.762 172.407 li
940.762 174.467 li
944.663 176.297 li
944.663 178.426 li
940.762 180.256 li
940.762 182.327 li
944.663 184.157 li
944.663 186.288 li
940.762 188.118 li
940.762 190.176 li
944.663 192.067 li
944.663 194.137 li
940.762 195.967 li
940.762 198.038 li
944.663 199.868 li
944.663 201.936 li
940.762 203.817 li
940.762 205.887 li
944.663 207.717 li
944.663 209.788 li
940.762 211.676 li
940.762 213.747 li
944.663 215.577 li
944.663 217.637 li
940.762 219.528 li
940.762 221.596 li
944.663 223.426 li
944.663 225.497 li
940.762 227.327 li
940.762 229.397 li
944.663 231.278 li
944.663 233.346 li
940.762 235.176 li
940.762 237.247 li
944.663 239.137 li
944.663 241.208 li
940.762 243.038 li
940.762 245.096 li
944.663 246.987 li
944.663 249.057 li
940.762 250.887 li
940.762 252.958 li
944.663 254.788 li
944.663 256.907 li
940.762 258.747 li
940.762 260.807 li
944.663 262.637 li
944.663 264.708 li
940.762 266.596 li
940.762 268.667 li
944.663 270.497 li
944.663 276.516 li
967.852 276.516 li
968.961 276.407 li
970.022 276.086 li
971.002 275.567 li
971.862 274.858 li
972.563 273.997 li
973.092 273.016 li
973.413 271.958 li
973.522 270.846 li
973.522 266.596 li
973.413 265.487 li
973.092 264.426 li
972.563 263.448 li
971.862 262.586 li
971.002 261.887 li
970.022 261.358 li
968.961 261.038 li
967.852 260.926 li
966.512 260.926 li
965.403 260.817 li
964.342 260.497 li
963.362 259.977 li
962.502 259.266 li
961.792 258.407 li
961.272 257.426 li
960.942 256.368 li
960.842 255.256 li
960.842 46.9165 li
960.452 43.0376 li
959.333 39.3169 li
957.493 35.8872 li
955.022 32.8774 li
952.022 30.4165 li
948.592 28.5767 li
944.872 27.4478 li
940.993 27.0669 li
928.811 27.0669 li
@
828.678 268.727 mo
828.385 267.231 li
827.542 265.967 li
826.276 265.125 li
824.782 264.822 li
823.288 265.125 li
822.024 265.967 li
821.18 267.231 li
820.887 268.727 li
821.18 270.211 li
822.024 271.477 li
823.288 272.329 li
824.782 272.623 li
826.276 272.329 li
827.542 271.477 li
828.385 270.211 li
828.678 268.727 li
cp
@
859.489 27.0669 mo
925.976 27.0669 li
@
847.028 36.9868 mo
846.725 35.5029 li
845.881 34.2368 li
844.616 33.394 li
843.122 33.0913 li
841.637 33.394 li
840.374 34.2368 li
839.53 35.5029 li
839.227 36.9868 li
839.53 38.4819 li
840.374 39.7461 li
841.637 40.5894 li
843.122 40.8921 li
844.616 40.5894 li
845.881 39.7461 li
846.725 38.4819 li
847.028 36.9868 li
cp
@
956.788 268.727 mo
957.079 270.211 li
957.922 271.477 li
959.188 272.329 li
960.682 272.623 li
962.176 272.329 li
963.442 271.477 li
964.286 270.211 li
964.579 268.727 li
964.286 267.231 li
963.442 265.967 li
962.176 265.125 li
960.682 264.822 li
959.188 265.125 li
957.922 265.967 li
957.079 267.231 li
956.788 268.727 li
cp
@
938.446 36.9868 mo
938.739 38.4819 li
939.583 39.7461 li
940.848 40.5894 li
942.342 40.8921 li
943.827 40.5894 li
945.092 39.7461 li
945.946 38.4819 li
946.239 36.9868 li
945.946 35.5029 li
945.092 34.2368 li
943.827 33.394 li
942.342 33.0913 li
940.848 33.394 li
939.583 34.2368 li
938.739 35.5029 li
938.446 36.9868 li
cp
@
1025.99 213.747 mo
1026.04 213.267 li
1026.17 212.817 li
1026.38 212.386 li
1026.67 212.007 li
1027.03 211.697 li
1027.44 211.447 li
1027.89 211.277 li
1028.36 211.197 li
1028.36 205.017 li
1036.86 205.017 li
1036.86 211.197 li
1110.56 211.197 li
1110.56 205.017 li
1119.06 205.017 li
1119.06 256.296 li
1110.56 256.296 li
1110.56 245.207 li
1036.86 245.207 li
1036.86 256.296 li
1028.36 256.296 li
1028.36 245.207 li
1027.89 245.126 li
1027.44 244.957 li
1027.03 244.716 li
1026.67 244.396 li
1026.38 244.017 li
1026.17 243.597 li
1026.04 243.136 li
1025.99 242.656 li
1025.99 213.747 li
cp
@
1110.56 146.037 mo
1119.06 146.037 li
1119.06 175.737 li
1110.56 175.737 li
1110.56 146.037 li
cp
@
1054.71 133.797 mo
1058.86 133.469 li
1062.98 134.167 li
1066.79 135.849 li
1070.07 138.426 li
1072.52 141.668 li
1074.85 141.669 li
1077.8 142.191 li
1080.38 143.693 li
1082.3 145.983 li
1083.32 148.796 li
1083.31 151.78 li
1082.28 154.591 li
1080.36 156.873 li
1077.76 158.355 li
1074.84 158.876 li
1072.6 158.837 li
1070.05 162.134 li
1066.77 164.698 li
1062.95 166.384 li
1058.85 167.076 li
1054.68 166.74 li
1050.74 165.389 li
1047.25 163.114 li
1044.43 160.044 li
1042.44 156.381 li
1041.42 152.347 li
1041.42 148.172 li
1042.45 144.14 li
1044.44 140.469 li
1047.27 137.414 li
1050.76 135.143 li
1054.71 133.797 li
cp
@
1101.36 191.226 mo
1101.7 189.497 li
1102.69 188.027 li
1104.15 187.04 li
1105.88 186.702 li
1107.61 187.04 li
1109.08 188.027 li
1110.05 189.497 li
1110.4 191.226 li
1110.05 192.957 li
1109.08 194.417 li
1107.61 195.402 li
1105.88 195.74 li
1104.15 195.402 li
1102.69 194.417 li
1101.7 192.957 li
1101.36 191.226 li
cp
@
1035.06 72.145 mo
1054.5 72.145 li
1054.5 80.2583 li
1035.06 80.2583 li
1035.06 72.145 li
cp
@
1084.31 195.056 mo
1063.03 195.056 li
1063.03 186.546 li
1084.31 186.546 li
1084.31 195.056 li
cp
@
1077.57 72.145 mo
1097.02 72.145 li
1097.02 80.2583 li
1077.57 80.2583 li
1077.57 72.145 li
cp
@
1028.36 146.037 mo
1036.86 146.037 li
1036.86 175.737 li
1028.36 175.737 li
1028.36 146.037 li
cp
@
1015.4 424.237 mo
1006.9 424.237 li
1006.9 475.519 li
1015.4 475.519 li
1015.4 424.237 li
cp
@
1089.1 475.519 mo
1097.61 475.519 li
1097.61 424.237 li
1089.1 424.237 li
1089.1 475.519 li
cp
@
1055.22 353.658 mo
1052.01 356.868 li
1049.6 360.708 li
1048.1 364.988 li
1047.6 369.488 li
1048.1 373.999 li
1049.6 378.278 li
1052.01 382.118 li
1055.22 385.318 li
1059.06 387.728 li
1063.34 389.228 li
1067.84 389.737 li
1072.35 389.228 li
1076.63 387.728 li
1080.47 385.318 li
1083.67 382.118 li
1086.08 378.278 li
1087.58 373.999 li
1088.09 369.488 li
1087.58 364.988 li
1086.08 360.708 li
1083.67 356.868 li
1080.47 353.658 li
1076.63 351.249 li
1072.35 349.749 li
1067.84 349.249 li
1063.34 349.749 li
1059.06 351.249 li
1055.22 353.658 li
cp
@
1090.91 299.48 mo
1090.91 291.367 li
1071.46 291.367 li
1071.46 299.48 li
1090.91 299.48 li
cp
@
1048.4 291.367 mo
1028.94 291.367 li
1028.94 299.48 li
1048.4 299.48 li
1048.4 291.367 li
cp
@
1045.01 445.948 mo
1045.02 448.932 li
1046.05 451.742 li
1047.97 454.024 li
1050.56 455.517 li
1053.48 456.027 li
1055.73 455.989 li
1058.28 459.286 li
1061.56 461.849 li
1065.38 463.536 li
1069.47 464.228 li
1073.64 463.892 li
1077.59 462.54 li
1081.08 460.265 li
1083.9 457.204 li
1085.88 453.532 li
1086.9 449.499 li
1086.9 445.323 li
1085.87 441.292 li
1083.89 437.62 li
1081.06 434.565 li
1077.56 432.294 li
1073.61 430.948 li
1069.46 430.62 li
1065.35 431.317 li
1061.54 433.011 li
1058.26 435.577 li
1055.81 438.819 li
1053.47 438.821 li
1050.52 439.343 li
1047.95 440.844 li
1046.03 443.135 li
1045.01 445.948 li
cp
@
1018.35 414.624 mo
1020.08 414.962 li
1021.81 414.624 li
1023.28 413.638 li
1024.26 412.169 li
1024.61 410.438 li
1024.26 408.708 li
1023.28 407.247 li
1021.81 406.263 li
1020.08 405.924 li
1018.35 406.263 li
1016.88 407.247 li
1015.91 408.708 li
1015.56 410.438 li
1015.91 412.169 li
1016.88 413.638 li
1018.35 414.624 li
cp
@
507.5 384.724 mo
507.191 383.159 li
506.301 381.824 li
504.968 380.935 li
503.392 380.616 li
501.826 380.935 li
500.492 381.824 li
499.592 383.159 li
499.284 384.724 li
499.592 386.3 li
500.492 387.635 li
501.826 388.524 li
503.392 388.843 li
504.968 388.524 li
506.301 387.635 li
507.191 386.3 li
507.5 384.724 li
cp
@
569.87 384.724 mo
569.551 383.159 li
568.662 381.824 li
567.328 380.935 li
565.751 380.616 li
564.187 380.935 li
562.852 381.824 li
561.962 383.159 li
561.643 384.724 li
561.962 386.3 li
562.852 387.635 li
564.187 388.524 li
565.751 388.843 li
567.328 388.524 li
568.662 387.635 li
569.551 386.3 li
569.87 384.724 li
cp
@
561.601 450.534 mo
569.913 450.534 li
569.913 439.394 li
561.601 439.394 li
561.601 450.534 li
cp
@
551.582 388.985 mo
551.582 380.474 li
517.572 380.474 li
517.572 388.985 li
551.582 388.985 li
cp
@
517.572 405.845 mo
551.582 405.845 li
551.582 397.063 li
546.202 397.063 li
546.202 400.175 li
522.952 400.175 li
522.952 397.063 li
517.572 397.063 li
517.572 405.845 li
cp
@
507.543 422.185 mo
507.543 411.054 li
499.241 411.054 li
499.241 422.185 li
507.543 422.185 li
cp
@
569.913 422.185 mo
569.913 411.054 li
561.601 411.054 li
561.601 422.185 li
569.913 422.185 li
cp
@
449.78 388.985 mo
487.802 388.985 li
487.802 379.063 li
487.912 377.954 li
488.232 376.894 li
488.762 375.915 li
489.461 375.054 li
490.322 374.345 li
491.302 373.825 li
492.362 373.505 li
493.472 373.394 li
575.682 373.395 li
576.782 373.506 li
577.852 373.826 li
578.832 374.346 li
579.682 375.055 li
580.392 375.916 li
580.912 376.895 li
581.242 377.955 li
581.352 379.064 li
581.352 388.986 li
619.863 388.986 li
@
447.795 388.985 mo
415.522 388.985 li
412.751 389.255 li
410.092 390.063 li
407.642 391.374 li
405.501 393.134 li
403.732 395.284 li
402.421 397.735 li
401.622 400.394 li
401.342 403.155 li
401.342 447.335 li
401.452 448.444 li
401.782 449.505 li
402.302 450.485 li
403.012 451.345 li
403.862 452.054 li
404.842 452.575 li
405.912 452.894 li
407.012 453.005 li
452.372 453.005 li
454.582 453.224 li
456.711 453.874 li
458.671 454.915 li
460.392 456.325 li
461.802 458.044 li
462.842 460.005 li
463.492 462.134 li
463.711 464.345 li
463.711 473.484 li
463.822 474.584 li
464.142 475.654 li
464.662 476.635 li
465.372 477.494 li
466.232 478.193 li
467.211 478.725 li
468.272 479.043 li
469.382 479.154 li
599.772 479.155 li
600.882 479.044 li
601.942 478.726 li
602.921 478.194 li
603.782 477.495 li
604.482 476.636 li
605.012 475.655 li
605.332 474.585 li
605.442 473.485 li
605.442 464.346 li
605.662 462.135 li
606.302 460.006 li
607.352 458.045 li
608.762 456.326 li
610.482 454.916 li
612.442 453.875 li
614.572 453.225 li
616.782 453.006 li
662.132 453.006 li
663.242 452.895 li
664.302 452.576 li
665.282 452.055 li
666.142 451.346 li
666.852 450.486 li
667.372 449.506 li
667.692 448.445 li
667.802 447.336 li
667.802 403.156 li
667.532 400.395 li
666.722 397.736 li
665.412 395.285 li
663.652 393.135 li
661.501 391.375 li
659.052 390.064 li
656.392 389.256 li
653.632 388.986 li
621.847 388.986 li
@
499.241 450.534 mo
507.543 450.534 li
507.543 439.394 li
499.241 439.394 li
499.241 450.534 li
cp
@
615.792 245.059 mo
615.5 243.564 li
614.646 242.3 li
613.381 241.457 li
611.896 241.163 li
610.402 241.457 li
609.138 242.3 li
608.294 243.564 li
608 245.059 li
608.294 246.552 li
609.138 247.818 li
610.402 248.662 li
611.896 248.955 li
613.381 248.662 li
614.646 247.818 li
615.5 246.552 li
615.792 245.059 li
cp
@
507.547 224.037 mo
499.246 224.037 li
499.246 238.011 li
507.547 238.011 li
507.547 224.037 li
cp
@
453.361 313.088 mo
453.654 314.583 li
454.507 315.847 li
455.772 316.691 li
457.257 316.984 li
458.751 316.691 li
460.016 315.847 li
460.859 314.583 li
461.153 313.088 li
460.859 311.595 li
460.016 310.33 li
458.751 309.486 li
457.257 309.192 li
455.772 309.486 li
454.507 310.33 li
453.654 311.595 li
453.361 313.088 li
cp
@
608 313.088 mo
608.294 314.583 li
609.138 315.847 li
610.402 316.691 li
611.896 316.984 li
613.381 316.691 li
614.646 315.847 li
615.5 314.583 li
615.792 313.088 li
615.5 311.595 li
614.646 310.33 li
613.381 309.486 li
611.896 309.192 li
610.402 309.486 li
609.138 310.33 li
608.294 311.595 li
608 313.088 li
cp
@
551.287 231.709 mo
550.597 227.629 li
548.917 223.838 li
546.356 220.579 li
543.077 218.04 li
543.077 215.719 li
542.567 212.809 li
541.087 210.249 li
538.827 208.36 li
536.057 207.348 li
533.097 207.348 li
530.327 208.36 li
528.067 210.249 li
526.587 212.809 li
526.077 215.719 li
526.077 218.04 li
522.797 220.579 li
520.237 223.838 li
518.557 227.629 li
517.867 231.709 li
518.197 235.838 li
519.537 239.758 li
521.797 243.239 li
524.847 246.049 li
528.487 248.018 li
532.507 249.04 li
536.646 249.04 li
540.667 248.018 li
544.307 246.049 li
547.356 243.239 li
549.617 239.758 li
550.957 235.838 li
551.287 231.709 li
cp
@
461.153 245.059 mo
460.859 243.564 li
460.016 242.3 li
458.751 241.457 li
457.257 241.163 li
455.772 241.457 li
454.507 242.3 li
453.654 243.564 li
453.361 245.059 li
453.654 246.552 li
454.507 247.818 li
455.772 248.662 li
457.257 248.955 li
458.751 248.662 li
460.016 247.818 li
460.859 246.552 li
461.153 245.059 li
cp
@
499.246 260.889 mo
499.246 274.86 li
507.547 274.86 li
507.547 260.889 li
499.246 260.889 li
cp
@
580.021 286.299 mo
584.187 286.299 li
586.117 286.489 li
587.977 287.059 li
589.697 287.969 li
591.197 289.209 li
592.437 290.709 li
593.347 292.428 li
593.917 294.29 li
594.106 296.219 li
594.106 330.098 li
594.217 331.2 li
594.537 332.268 li
595.057 333.249 li
595.767 334.11 li
596.627 334.809 li
597.606 335.338 li
598.667 335.659 li
599.777 335.768 li
606.937 335.768 li
609.697 335.499 li
612.356 334.688 li
614.807 333.379 li
616.957 331.62 li
618.717 329.469 li
620.027 327.018 li
620.837 324.36 li
621.106 321.588 li
621.106 236.338 li
620.837 233.598 li
620.047 230.969 li
618.767 228.54 li
617.027 226.399 li
614.917 224.629 li
612.507 223.309 li
609.887 222.479 li
607.146 222.168 li
598.097 222.03 li
594.817 221.659 li
591.667 220.668 li
588.777 219.079 li
586.237 216.959 li
584.157 214.399 li
582.617 211.479 li
581.667 208.319 li
581.347 205.03 li
581.347 175.749 li
570.007 175.749 li
570.007 182.229 li
573.557 182.229 li
573.557 186.479 li
570.007 186.479 li
570.007 201.258 li
561.507 201.258 li
561.507 186.479 li
557.957 186.479 li
557.957 182.229 li
561.507 182.229 li
561.507 175.749 li
551.587 175.749 li
551.587 153.069 li
551.477 151.969 li
551.157 150.899 li
550.627 149.918 li
549.927 149.069 li
549.067 148.36 li
548.087 147.838 li
547.017 147.508 li
545.917 147.409 li
523.237 147.409 li
522.137 147.508 li
521.067 147.838 li
520.087 148.36 li
519.227 149.069 li
518.527 149.918 li
517.997 150.899 li
517.677 151.969 li
517.567 153.069 li
517.567 175.749 li
507.646 175.749 li
507.646 182.229 li
511.187 182.229 li
511.187 186.479 li
507.646 186.479 li
507.646 201.258 li
499.146 201.258 li
499.146 186.479 li
495.597 186.479 li
495.597 182.229 li
499.146 182.229 li
499.146 175.749 li
487.807 175.749 li
487.807 205.37 li
487.477 208.688 li
486.507 211.879 li
484.937 214.819 li
482.827 217.399 li
480.247 219.518 li
477.307 221.088 li
474.117 222.049 li
470.797 222.379 li
462.217 222.379 li
459.457 222.649 li
456.797 223.459 li
454.347 224.768 li
452.197 226.53 li
450.437 228.678 li
449.127 231.129 li
448.317 233.79 li
448.047 236.549 li
448.047 321.588 li
448.317 324.36 li
449.127 327.018 li
450.437 329.468 li
452.197 331.619 li
454.347 333.378 li
456.797 334.687 li
459.457 335.498 li
462.217 335.767 li
469.377 335.767 li
470.487 335.658 li
471.547 335.337 li
472.527 334.808 li
473.387 334.109 li
474.097 333.248 li
474.617 332.267 li
474.937 331.199 li
475.047 330.097 li
475.047 296.219 li
475.237 294.29 li
475.807 292.428 li
476.717 290.709 li
477.957 289.209 li
479.457 287.969 li
481.177 287.059 li
483.037 286.489 li
484.967 286.299 li
489.123 286.299 li
@
561.606 260.889 mo
561.606 274.86 li
569.908 274.86 li
569.908 260.889 li
561.606 260.889 li
cp
@
578.037 286.299 mo
491.107 286.299 li
@
569.908 224.037 mo
561.606 224.037 li
561.606 238.011 li
569.908 238.011 li
569.908 224.037 li
cp
@
870.573 718.063 mo
873.278 718.023 li
873.438 717.742 li
874.067 716.641 874.618 715.406 875.079 714.068 cv
875.725 713.984 li
876.45 713.943 li
877.11 715.17 877.85 716.344 878.606 717.354 cv
878.807 717.623 li
881.424 717.248 li
881.547 716.943 li
882.042 715.705 882.385 714.381 882.571 713.006 cv
883.301 712.848 li
883.991 712.688 li
884.788 713.781 885.665 714.777 886.661 715.727 cv
886.903 715.957 li
889.436 715.164 li
889.499 714.83 li
889.766 713.404 889.883 712.08 889.86 710.795 cv
890.6 710.508 li
891.206 710.23 li
892.213 711.254 893.241 712.105 894.336 712.83 cv
894.614 713.016 li
896.959 711.801 li
896.977 711.477 li
897.045 710.18 896.958 708.82 896.717 707.43 cv
897.924 706.691 li
899.081 707.51 900.247 708.215 901.395 708.793 cv
901.702 708.947 li
903.872 707.381 li
903.838 707.055 li
903.7 705.674 903.403 704.34 902.958 703.078 cv
903.54 702.625 li
904.083 702.164 li
905.233 702.746 906.485 703.258 907.809 703.686 cv
908.139 703.795 li
910.053 701.865 li
909.956 701.541 li
909.573 700.289 909.073 699.018 908.465 697.756 cv
908.885 697.258 li
909.372 696.703 li
910.583 697.094 911.879 697.383 913.321 697.588 cv
913.651 697.635 li
915.28 695.488 li
915.124 695.174 li
914.471 693.863 913.788 692.723 913.042 691.695 cv
913.456 691.092 li
913.825 690.49 li
915.083 690.684 916.274 690.779 917.456 690.779 cv
918.208 690.768 li
919.389 688.4 li
919.215 688.129 li
918.463 686.961 917.588 685.9 916.614 684.973 cv
916.915 684.316 li
917.174 683.662 li
918.709 683.645 920.034 683.518 921.213 683.273 cv
921.526 683.207 li
922.413 680.703 li
922.165 680.451 li
921.141 679.408 920.137 678.523 919.106 677.756 cv
919.295 677.072 li
919.448 676.369 li
920.694 676.205 921.973 675.883 923.342 675.385 cv
923.655 675.271 li
924.083 672.633 li
923.823 672.426 li
922.77 671.588 921.659 670.879 920.434 670.27 cv
920.514 669.518 li
920.547 668.85 li
921.887 668.439 923.184 667.883 924.325 667.232 cv
924.616 667.066 li
924.563 664.428 li
924.284 664.268 li
923.147 663.617 921.901 663.064 920.573 662.621 cv
920.526 661.959 li
920.452 661.211 li
921.516 660.717 922.62 660.039 923.893 659.104 cv
924.163 658.904 li
923.799 656.207 li
923.467 656.094 li
922.081 655.617 920.795 655.287 919.549 655.088 cv
919.383 654.379 li
919.19 653.707 li
920.239 652.977 921.272 652.084 922.266 651.047 cv
922.506 650.799 li
921.639 648.262 li
921.319 648.199 li
920.065 647.947 918.897 647.826 917.747 647.826 cv
917.59 647.826 917.434 647.828 917.278 647.832 cv
916.754 646.508 li
917.729 645.514 918.606 644.463 919.364 643.383 cv
919.561 643.102 li
918.344 640.75 li
918.024 640.73 li
917.704 640.709 917.379 640.699 917.055 640.699 cv
916.114 640.699 915.102 640.779 913.971 640.943 cv
913.192 639.773 li
914.008 638.693 914.711 637.521 915.284 636.287 cv
915.42 635.992 li
913.874 633.752 li
913.526 633.803 li
912.36 633.971 911.129 634.252 909.571 634.707 cv
908.657 633.625 li
909.323 632.396 909.834 631.133 910.178 629.861 cv
910.264 629.549 li
908.417 627.656 li
908.092 627.748 li
906.848 628.104 905.608 628.59 904.311 629.232 cv
903.776 628.738 li
903.204 628.305 li
903.633 627.08 903.936 625.793 904.129 624.383 cv
904.174 624.055 li
902.042 622.434 li
901.733 622.574 li
900.426 623.174 899.249 623.873 898.227 624.656 cv
897.622 624.244 li
896.989 623.873 li
897.247 622.51 897.336 621.146 897.258 619.811 cv
897.239 619.484 li
894.874 618.303 li
894.598 618.492 li
893.62 619.166 892.624 619.984 891.479 621.053 cv
890.807 620.785 li
890.206 620.537 li
890.192 619.133 890.061 617.777 889.815 616.5 cv
889.754 616.18 li
887.192 615.287 li
886.94 615.527 li
885.883 616.543 884.991 617.574 884.282 618.598 cv
883.614 618.412 li
882.903 618.258 li
882.709 616.963 882.387 615.639 881.942 614.318 cv
881.833 613.994 li
879.18 613.564 li
878.975 613.83 li
878.098 614.953 877.372 616.08 876.76 617.266 cv
876.057 617.191 li
875.385 617.158 li
874.999 615.959 874.461 614.697 873.786 613.402 cv
873.624 613.092 li
870.965 613.143 li
870.807 613.428 li
870.17 614.57 869.62 615.813 869.168 617.129 cv
867.75 617.211 li
867.065 615.875 866.35 614.752 865.571 613.785 cv
865.368 613.535 li
862.756 613.91 li
862.639 614.225 li
862.176 615.467 861.846 616.756 861.629 618.158 cv
860.918 618.322 li
860.245 618.516 li
859.518 617.48 858.627 616.447 857.592 615.441 cv
857.344 615.199 li
854.803 616.068 li
854.741 616.391 li
854.469 617.797 854.334 619.115 854.331 620.408 cv
853.649 620.66 li
853.036 620.939 li
851.993 619.922 850.973 619.07 849.924 618.342 cv
849.649 618.15 li
847.215 619.355 li
847.211 619.701 li
847.192 621.109 847.282 622.461 847.479 623.725 cv
846.266 624.465 li
845.106 623.648 843.969 622.961 842.799 622.365 cv
842.483 622.203 li
840.301 623.848 li
840.344 624.176 li
840.526 625.516 840.827 626.848 841.239 628.143 cv
840.715 628.586 li
840.176 629.01 li
838.762 628.316 837.555 627.844 836.405 627.527 cv
836.092 627.441 li
834.198 629.291 li
834.288 629.613 li
834.647 630.906 835.145 632.178 835.768 633.398 cv
835.295 633.91 li
834.813 634.494 li
833.594 634.045 832.295 633.74 830.858 633.566 cv
830.526 633.527 li
828.979 635.672 li
829.116 635.971 li
829.672 637.199 830.358 638.377 831.161 639.477 cv
830.426 640.67 li
829.286 640.48 828.084 640.389 826.77 640.389 cv
826.04 640.396 li
824.846 642.834 li
825.034 643.105 li
825.864 644.316 826.7 645.328 827.583 646.184 cv
827.27 646.891 li
827.022 647.49 li
825.655 647.496 824.259 647.631 822.981 647.883 cv
822.653 647.947 li
821.849 650.451 li
822.065 650.693 li
822.923 651.65 823.913 652.539 825.083 653.402 cv
824.893 654.084 li
824.741 654.797 li
823.353 655.006 822.075 655.326 820.849 655.77 cv
820.536 655.885 li
820.108 658.525 li
820.372 658.732 li
821.495 659.611 822.605 660.318 823.756 660.887 cv
823.675 661.639 li
823.642 662.322 li
822.265 662.797 821.079 663.311 819.938 663.924 cv
819.643 664.082 li
819.616 666.723 li
819.905 666.887 li
820.973 667.498 822.188 668.035 823.613 668.527 cv
823.656 669.262 li
823.733 669.957 li
822.46 670.574 821.341 671.291 820.319 672.141 cv
820.076 672.344 li
820.451 674.955 li
820.773 675.07 li
822.017 675.514 823.304 675.844 824.698 676.074 cv
825.02 677.449 li
823.848 678.309 822.823 679.207 821.974 680.125 cv
821.751 680.367 li
822.542 682.896 li
822.88 682.959 li
824.323 683.223 825.643 683.355 826.909 683.365 cv
827.202 684.061 li
827.477 684.666 li
826.508 685.633 825.635 686.682 824.879 687.789 cv
824.694 688.063 li
825.901 690.498 li
826.254 690.496 li
827.698 690.486 829.014 690.396 830.262 690.223 cv
830.999 691.43 li
830.153 692.555 829.448 693.73 828.897 694.928 cv
828.76 695.229 li
830.325 697.398 li
830.661 697.354 li
831.959 697.18 833.292 696.879 834.625 696.457 cv
835.542 697.539 li
834.958 698.68 834.446 699.934 834.018 701.27 cv
833.913 701.6 li
835.836 703.506 li
836.153 703.418 li
837.393 703.078 838.635 702.592 839.94 701.936 cv
840.44 702.402 li
840.993 702.885 li
840.592 704.086 840.303 705.385 840.11 706.844 cv
840.067 707.178 li
842.221 708.73 li
842.524 708.586 li
843.639 708.055 844.809 707.367 846.008 706.539 cv
847.211 707.281 li
846.977 708.674 846.885 710.002 846.932 711.332 cv
846.944 711.668 li
849.303 712.846 li
849.573 712.676 li
850.641 712.002 851.674 711.16 852.727 710.107 cv
853.362 710.361 li
854.036 710.672 li
854.053 712.07 854.186 713.412 854.432 714.666 cv
854.495 714.984 li
856.995 715.867 li
857.247 715.629 li
858.204 714.721 859.09 713.729 859.95 712.604 cv
861.293 712.898 li
861.51 714.262 861.852 715.592 862.311 716.857 cv
862.424 717.172 li
865.071 717.602 li
865.278 717.332 li
866.09 716.27 866.813 715.113 867.432 713.893 cv
868.844 714.043 li
869.258 715.361 869.784 716.611 870.409 717.762 cv
870.573 718.063 li
cp
@
872.614 672.273 mo
872.678 672.27 li
872.799 672.215 li
872.846 672.162 li
873.118 671.863 873.315 671.6 873.471 671.324 cv
873.766 671.523 874.086 671.689 874.461 671.834 cv
874.592 671.834 li
874.659 671.807 li
874.75 671.717 li
874.78 671.66 li
874.932 671.352 875.053 671.014 875.133 670.672 cv
875.448 670.77 875.811 670.836 876.243 670.863 cv
876.356 670.824 li
876.403 670.789 li
876.471 670.678 li
876.483 670.607 li
876.542 670.215 876.553 669.846 876.51 669.559 cv
876.553 669.559 li
876.866 669.559 877.198 669.52 877.641 669.418 cv
877.745 669.342 li
877.782 669.285 li
877.809 669.162 li
877.799 669.1 li
877.745 668.742 877.657 668.402 877.532 668.086 cv
877.848 667.988 878.172 667.844 878.557 667.619 cv
878.631 667.52 li
878.649 667.457 li
878.641 667.328 li
878.612 667.27 li
878.456 666.943 878.266 666.639 878.059 666.379 cv
878.336 666.188 878.608 665.951 878.897 665.641 cv
878.942 665.518 li
878.942 665.451 li
878.897 665.334 li
878.85 665.285 li
878.6 665.014 878.334 664.783 878.057 664.596 cv
878.264 664.338 878.463 664.018 878.641 663.635 cv
878.647 663.512 li
878.629 663.451 li
878.551 663.35 li
878.493 663.314 li
878.174 663.133 877.852 662.99 877.532 662.891 cv
877.657 662.576 877.747 662.225 877.807 661.801 cv
877.776 661.68 li
877.743 661.629 li
877.637 661.555 li
877.569 661.539 li
877.208 661.457 876.877 661.418 876.557 661.418 cv
876.528 661.418 li
876.551 661.074 876.536 660.721 876.471 660.297 cv
876.405 660.188 li
876.354 660.146 li
876.231 660.109 li
876.165 660.113 li
875.807 660.139 875.461 660.201 875.133 660.303 cv
875.053 659.963 874.932 659.623 874.745 659.246 cv
874.649 659.166 li
874.594 659.143 li
874.465 659.141 li
874.403 659.166 li
874.043 659.305 873.709 659.48 873.475 659.66 cv
873.307 659.365 873.1 659.088 872.788 658.756 cv
872.676 658.707 li
872.618 658.699 li
872.495 658.734 li
872.44 658.779 li
872.157 659.002 871.911 659.246 871.692 659.518 cv
871.434 659.279 871.141 659.068 870.78 658.865 cv
870.655 658.848 li
870.594 658.859 li
870.487 658.93 li
870.446 658.988 li
870.223 659.32 870.053 659.643 869.958 659.918 cv
869.643 659.766 869.301 659.648 868.895 659.559 cv
868.766 659.58 li
868.709 659.609 li
868.627 659.709 li
868.606 659.775 li
868.502 660.115 868.438 660.439 868.409 660.807 cv
868.192 660.773 867.969 660.758 867.747 660.758 cv
867.618 660.758 867.487 660.764 867.288 660.779 cv
867.174 660.838 li
867.129 660.883 li
867.083 661.006 li
867.083 661.072 li
867.081 661.436 867.118 661.785 867.192 662.115 cv
866.86 662.168 866.512 662.262 866.116 662.416 cv
866.02 662.51 li
865.993 662.574 li
865.987 662.697 li
866.004 662.758 li
866.11 663.104 866.254 663.441 866.42 663.725 cv
866.112 663.871 865.782 664.082 865.481 664.33 cv
865.418 664.441 li
865.407 664.506 li
865.436 664.631 li
865.473 664.686 li
865.674 664.986 865.899 665.25 866.153 665.488 cv
865.903 665.719 865.668 665.996 865.432 666.35 cv
865.407 666.475 li
865.418 666.541 li
865.483 666.648 li
865.534 666.688 li
865.821 666.922 866.165 667.137 866.426 667.238 cv
866.254 667.535 866.108 667.877 865.985 668.285 cv
865.997 668.412 li
866.024 668.471 li
866.118 668.557 li
866.18 668.582 li
866.506 668.713 866.84 668.805 867.194 668.859 cv
867.118 669.189 867.081 669.549 867.083 669.973 cv
867.133 670.094 li
867.18 670.143 li
867.292 670.193 li
867.354 670.199 li
867.485 670.211 867.618 670.217 867.749 670.217 cv
867.987 670.217 868.225 670.197 868.407 670.16 cv
868.432 670.504 868.499 670.85 868.625 671.262 cv
868.711 671.365 li
868.768 671.398 li
868.893 671.414 li
868.959 671.4 li
869.329 671.316 869.668 671.199 869.948 671.049 cv
870.077 671.375 870.249 671.695 870.487 672.041 cv
870.594 672.111 li
870.661 672.127 li
870.788 672.107 li
870.844 672.074 li
871.167 671.891 871.44 671.691 871.692 671.457 cv
871.922 671.744 872.165 671.98 872.44 672.193 cv
872.495 672.236 li
872.614 672.273 li
cp
@
994.305 672.273 mo
994.37 672.27 li
994.491 672.215 li
994.538 672.162 li
994.809 671.863 995.006 671.6 995.163 671.324 cv
995.458 671.523 995.778 671.689 996.153 671.834 cv
996.284 671.834 li
996.35 671.807 li
996.442 671.717 li
996.471 671.66 li
996.624 671.352 996.745 671.014 996.825 670.672 cv
997.139 670.77 997.502 670.836 997.934 670.863 cv
998.047 670.824 li
998.094 670.789 li
998.163 670.678 li
998.174 670.607 li
998.233 670.215 998.245 669.846 998.202 669.559 cv
998.245 669.559 li
998.557 669.559 998.889 669.52 999.333 669.418 cv
999.436 669.342 li
999.473 669.285 li
999.5 669.162 li
999.491 669.1 li
999.436 668.742 999.348 668.402 999.223 668.086 cv
999.54 667.988 999.864 667.844 1000.25 667.619 cv
1000.32 667.52 li
1000.34 667.457 li
1000.33 667.328 li
1000.3 667.27 li
1000.15 666.943 999.958 666.639 999.75 666.379 cv
1000.03 666.188 1000.3 665.951 1000.59 665.641 cv
1000.63 665.518 li
1000.63 665.451 li
1000.59 665.334 li
1000.54 665.285 li
1000.29 665.014 1000.03 664.783 999.749 664.596 cv
999.956 664.338 1000.15 664.018 1000.33 663.635 cv
1000.34 663.512 li
1000.32 663.451 li
1000.24 663.35 li
1000.18 663.314 li
999.866 663.133 999.543 662.99 999.223 662.891 cv
999.348 662.576 999.438 662.225 999.499 661.801 cv
999.467 661.68 li
999.434 661.629 li
999.329 661.555 li
999.26 661.539 li
998.899 661.457 998.569 661.418 998.249 661.418 cv
998.219 661.418 li
998.243 661.074 998.227 660.721 998.163 660.297 cv
998.096 660.188 li
998.045 660.146 li
997.922 660.109 li
997.856 660.113 li
997.499 660.139 997.153 660.201 996.825 660.303 cv
996.745 659.963 996.624 659.623 996.436 659.246 cv
996.34 659.166 li
996.286 659.143 li
996.157 659.141 li
996.094 659.166 li
995.735 659.305 995.401 659.48 995.167 659.66 cv
994.999 659.365 994.792 659.088 994.479 658.756 cv
994.368 658.707 li
994.309 658.699 li
994.186 658.734 li
994.131 658.779 li
993.848 659.002 993.602 659.246 993.383 659.518 cv
993.125 659.279 992.833 659.068 992.471 658.865 cv
992.346 658.848 li
992.286 658.859 li
992.178 658.93 li
992.137 658.988 li
991.915 659.32 991.745 659.643 991.649 659.918 cv
991.334 659.766 990.993 659.648 990.586 659.559 cv
990.458 659.58 li
990.401 659.609 li
990.319 659.709 li
990.297 659.775 li
990.194 660.115 990.129 660.439 990.1 660.807 cv
989.883 660.773 989.661 660.758 989.438 660.758 cv
989.309 660.758 989.178 660.764 988.979 660.779 cv
988.866 660.838 li
988.821 660.883 li
988.774 661.006 li
988.774 661.072 li
988.772 661.436 988.809 661.785 988.883 662.115 cv
988.551 662.168 988.204 662.262 987.807 662.416 cv
987.711 662.51 li
987.684 662.574 li
987.678 662.697 li
987.696 662.758 li
987.801 663.104 987.946 663.441 988.112 663.725 cv
987.803 663.871 987.473 664.082 987.172 664.33 cv
987.11 664.441 li
987.098 664.506 li
987.127 664.631 li
987.165 664.686 li
987.366 664.986 987.59 665.25 987.844 665.488 cv
987.594 665.719 987.36 665.996 987.124 666.35 cv
987.098 666.475 li
987.11 666.541 li
987.174 666.648 li
987.225 666.688 li
987.512 666.922 987.856 667.137 988.118 667.238 cv
987.946 667.535 987.799 667.877 987.676 668.285 cv
987.688 668.412 li
987.715 668.471 li
987.809 668.557 li
987.872 668.582 li
988.198 668.713 988.532 668.805 988.885 668.859 cv
988.809 669.189 988.772 669.549 988.774 669.973 cv
988.825 670.094 li
988.872 670.143 li
988.983 670.193 li
989.045 670.199 li
989.176 670.211 989.309 670.217 989.44 670.217 cv
989.678 670.217 989.917 670.197 990.098 670.16 cv
990.124 670.504 990.19 670.85 990.317 671.262 cv
990.403 671.365 li
990.459 671.398 li
990.584 671.414 li
990.651 671.4 li
991.02 671.316 991.36 671.199 991.639 671.049 cv
991.768 671.375 991.94 671.695 992.178 672.041 cv
992.286 672.111 li
992.352 672.127 li
992.479 672.107 li
992.536 672.074 li
992.858 671.891 993.131 671.691 993.383 671.457 cv
993.614 671.744 993.856 671.98 994.131 672.193 cv
994.186 672.236 li
994.305 672.273 li
cp
@
992.264 718.063 mo
994.969 718.023 li
995.129 717.742 li
995.758 716.641 996.309 715.406 996.77 714.068 cv
997.417 713.984 li
998.141 713.943 li
998.801 715.17 999.542 716.344 1000.3 717.354 cv
1000.5 717.623 li
1003.12 717.248 li
1003.24 716.943 li
1003.73 715.705 1004.08 714.381 1004.26 713.006 cv
1004.99 712.848 li
1005.68 712.688 li
1006.48 713.781 1007.36 714.777 1008.35 715.727 cv
1008.59 715.957 li
1011.13 715.164 li
1011.19 714.83 li
1011.46 713.404 1011.57 712.08 1011.55 710.795 cv
1012.29 710.508 li
1012.9 710.23 li
1013.9 711.254 1014.93 712.105 1016.03 712.83 cv
1016.31 713.016 li
1018.65 711.801 li
1018.67 711.477 li
1018.74 710.18 1018.65 708.82 1018.41 707.43 cv
1019.62 706.691 li
1020.77 707.51 1021.94 708.215 1023.09 708.793 cv
1023.39 708.947 li
1025.56 707.381 li
1025.53 707.055 li
1025.39 705.674 1025.09 704.34 1024.65 703.078 cv
1025.23 702.625 li
1025.77 702.164 li
1026.92 702.746 1028.18 703.258 1029.5 703.686 cv
1029.83 703.795 li
1031.74 701.865 li
1031.65 701.541 li
1031.26 700.289 1030.76 699.018 1030.16 697.756 cv
1030.58 697.258 li
1031.06 696.703 li
1032.27 697.094 1033.57 697.383 1035.01 697.588 cv
1035.34 697.635 li
1036.97 695.488 li
1036.81 695.174 li
1036.16 693.863 1035.48 692.723 1034.73 691.695 cv
1035.15 691.092 li
1035.52 690.49 li
1036.77 690.684 1037.97 690.779 1039.15 690.779 cv
1039.9 690.768 li
1041.08 688.4 li
1040.91 688.129 li
1040.15 686.961 1039.28 685.9 1038.31 684.973 cv
1038.61 684.316 li
1038.87 683.662 li
1040.4 683.645 1041.73 683.518 1042.9 683.273 cv
1043.22 683.207 li
1044.1 680.703 li
1043.86 680.451 li
1042.83 679.408 1041.83 678.523 1040.8 677.756 cv
1040.99 677.072 li
1041.14 676.369 li
1042.39 676.205 1043.66 675.883 1045.03 675.385 cv
1045.35 675.271 li
1045.77 672.633 li
1045.51 672.426 li
1044.46 671.588 1043.35 670.879 1042.13 670.27 cv
1042.21 669.518 li
1042.24 668.85 li
1043.58 668.439 1044.88 667.883 1046.02 667.232 cv
1046.31 667.066 li
1046.25 664.428 li
1045.98 664.268 li
1044.84 663.617 1043.59 663.064 1042.26 662.621 cv
1042.22 661.959 li
1042.14 661.211 li
1043.21 660.717 1044.31 660.039 1045.58 659.104 cv
1045.85 658.904 li
1045.49 656.207 li
1045.16 656.094 li
1043.77 655.617 1042.49 655.287 1041.24 655.088 cv
1041.07 654.379 li
1040.88 653.707 li
1041.93 652.977 1042.96 652.084 1043.96 651.047 cv
1044.2 650.799 li
1043.33 648.262 li
1043.01 648.199 li
1041.76 647.947 1040.59 647.826 1039.44 647.826 cv
1039.28 647.826 1039.13 647.828 1038.97 647.832 cv
1038.45 646.508 li
1039.42 645.514 1040.3 644.463 1041.06 643.383 cv
1041.25 643.102 li
1040.04 640.75 li
1039.72 640.73 li
1039.4 640.709 1039.07 640.699 1038.75 640.699 cv
1037.81 640.699 1036.79 640.779 1035.66 640.943 cv
1034.88 639.773 li
1035.7 638.693 1036.4 637.521 1036.98 636.287 cv
1037.11 635.992 li
1035.56 633.752 li
1035.22 633.803 li
1034.05 633.971 1032.82 634.252 1031.26 634.707 cv
1030.35 633.625 li
1031.01 632.396 1031.53 631.133 1031.87 629.861 cv
1031.96 629.549 li
1030.11 627.656 li
1029.78 627.748 li
1028.54 628.104 1027.3 628.59 1026 629.232 cv
1025.47 628.738 li
1024.9 628.305 li
1025.32 627.08 1025.63 625.793 1025.82 624.383 cv
1025.87 624.055 li
1023.73 622.434 li
1023.42 622.574 li
1022.12 623.174 1020.94 623.873 1019.92 624.656 cv
1019.31 624.244 li
1018.68 623.873 li
1018.94 622.51 1019.03 621.146 1018.95 619.811 cv
1018.93 619.484 li
1016.56 618.303 li
1016.29 618.492 li
1015.31 619.166 1014.31 619.984 1013.17 621.053 cv
1012.5 620.785 li
1011.9 620.537 li
1011.88 619.133 1011.75 617.777 1011.51 616.5 cv
1011.45 616.18 li
1008.88 615.287 li
1008.63 615.527 li
1007.57 616.543 1006.68 617.574 1005.97 618.598 cv
1005.31 618.412 li
1004.59 618.258 li
1004.4 616.963 1004.08 615.639 1003.63 614.318 cv
1003.52 613.994 li
1000.87 613.564 li
1000.67 613.83 li
999.79 614.953 999.063 616.08 998.452 617.266 cv
997.749 617.191 li
997.077 617.158 li
996.69 615.959 996.153 614.697 995.477 613.402 cv
995.315 613.092 li
992.657 613.143 li
992.499 613.428 li
991.862 614.57 991.311 615.813 990.86 617.129 cv
989.442 617.211 li
988.756 615.875 988.042 614.752 987.262 613.785 cv
987.059 613.535 li
984.448 613.91 li
984.331 614.225 li
983.868 615.467 983.538 616.756 983.321 618.158 cv
982.61 618.322 li
981.936 618.516 li
981.209 617.48 980.319 616.447 979.284 615.441 cv
979.036 615.199 li
976.495 616.068 li
976.432 616.391 li
976.161 617.797 976.026 619.115 976.022 620.408 cv
975.34 620.66 li
974.727 620.939 li
973.684 619.922 972.665 619.07 971.616 618.342 cv
971.34 618.15 li
968.907 619.355 li
968.903 619.701 li
968.883 621.109 968.973 622.461 969.17 623.725 cv
967.958 624.465 li
966.797 623.648 965.661 622.961 964.491 622.365 cv
964.174 622.203 li
961.993 623.848 li
962.036 624.176 li
962.217 625.516 962.518 626.848 962.93 628.143 cv
962.407 628.586 li
961.868 629.01 li
960.454 628.316 959.247 627.844 958.096 627.527 cv
957.784 627.441 li
955.889 629.291 li
955.979 629.613 li
956.338 630.906 956.836 632.178 957.459 633.398 cv
956.987 633.91 li
956.504 634.494 li
955.286 634.045 953.987 633.74 952.549 633.566 cv
952.217 633.527 li
950.67 635.672 li
950.807 635.971 li
951.364 637.199 952.049 638.377 952.852 639.477 cv
952.118 640.67 li
950.977 640.48 949.776 640.389 948.461 640.389 cv
947.731 640.396 li
946.538 642.834 li
946.725 643.105 li
947.555 644.316 948.391 645.328 949.274 646.184 cv
948.961 646.891 li
948.713 647.49 li
947.346 647.496 945.95 647.631 944.672 647.883 cv
944.344 647.947 li
943.54 650.451 li
943.756 650.693 li
944.614 651.65 945.604 652.539 946.774 653.402 cv
946.584 654.084 li
946.432 654.797 li
945.043 655.006 943.766 655.326 942.54 655.77 cv
942.227 655.885 li
941.799 658.525 li
942.063 658.732 li
943.186 659.611 944.297 660.318 945.448 660.887 cv
945.366 661.639 li
945.333 662.322 li
943.956 662.797 942.77 663.311 941.629 663.924 cv
941.334 664.082 li
941.307 666.723 li
941.596 666.887 li
942.665 667.498 943.879 668.035 945.305 668.527 cv
945.348 669.262 li
945.424 669.957 li
944.151 670.574 943.032 671.291 942.01 672.141 cv
941.768 672.344 li
942.143 674.955 li
942.465 675.07 li
943.708 675.514 944.995 675.844 946.389 676.074 cv
946.711 677.449 li
945.54 678.309 944.514 679.207 943.665 680.125 cv
943.442 680.367 li
944.233 682.896 li
944.571 682.959 li
946.014 683.223 947.334 683.355 948.6 683.365 cv
948.893 684.061 li
949.168 684.666 li
948.2 685.633 947.327 686.682 946.571 687.789 cv
946.385 688.063 li
947.592 690.498 li
947.946 690.496 li
949.389 690.486 950.706 690.396 951.954 690.223 cv
952.69 691.43 li
951.844 692.555 951.139 693.73 950.588 694.928 cv
950.452 695.229 li
952.016 697.398 li
952.352 697.354 li
953.651 697.18 954.983 696.879 956.317 696.457 cv
957.233 697.539 li
956.649 698.68 956.137 699.934 955.709 701.27 cv
955.604 701.6 li
957.528 703.506 li
957.844 703.418 li
959.084 703.078 960.327 702.592 961.631 701.936 cv
962.131 702.402 li
962.684 702.885 li
962.284 704.086 961.995 705.385 961.801 706.844 cv
961.758 707.178 li
963.913 708.73 li
964.215 708.586 li
965.331 708.055 966.5 707.367 967.7 706.539 cv
968.903 707.281 li
968.668 708.674 968.577 710.002 968.624 711.332 cv
968.635 711.668 li
970.995 712.846 li
971.264 712.676 li
972.333 712.002 973.366 711.16 974.418 710.107 cv
975.053 710.361 li
975.727 710.672 li
975.745 712.07 975.877 713.412 976.124 714.666 cv
976.186 714.984 li
978.686 715.867 li
978.938 715.629 li
979.895 714.721 980.782 713.729 981.641 712.604 cv
982.985 712.898 li
983.202 714.262 983.543 715.592 984.002 716.857 cv
984.116 717.172 li
986.762 717.602 li
986.969 717.332 li
987.782 716.27 988.504 715.113 989.124 713.893 cv
990.536 714.043 li
990.95 715.361 991.475 716.611 992.1 717.762 cv
992.264 718.063 li
cp
@
1113.96 718.063 mo
1116.66 718.023 li
1116.82 717.742 li
1117.45 716.641 1118 715.406 1118.46 714.068 cv
1119.11 713.984 li
1119.83 713.943 li
1120.49 715.17 1121.23 716.344 1121.99 717.354 cv
1122.19 717.623 li
1124.81 717.248 li
1124.93 716.943 li
1125.42 715.705 1125.77 714.381 1125.95 713.006 cv
1126.68 712.848 li
1127.37 712.688 li
1128.17 713.781 1129.05 714.777 1130.04 715.727 cv
1130.29 715.957 li
1132.82 715.164 li
1132.88 714.83 li
1133.15 713.404 1133.27 712.08 1133.24 710.795 cv
1133.98 710.508 li
1134.59 710.23 li
1135.6 711.254 1136.62 712.105 1137.72 712.83 cv
1138 713.016 li
1140.34 711.801 li
1140.36 711.477 li
1140.43 710.18 1140.34 708.82 1140.1 707.43 cv
1141.31 706.691 li
1142.46 707.51 1143.63 708.215 1144.78 708.793 cv
1145.08 708.947 li
1147.25 707.381 li
1147.22 707.055 li
1147.08 705.674 1146.79 704.34 1146.34 703.078 cv
1146.92 702.625 li
1147.47 702.164 li
1148.62 702.746 1149.87 703.258 1151.19 703.686 cv
1151.52 703.795 li
1153.44 701.865 li
1153.34 701.541 li
1152.96 700.289 1152.46 699.018 1151.85 697.756 cv
1152.27 697.258 li
1152.75 696.703 li
1153.97 697.094 1155.26 697.383 1156.7 697.588 cv
1157.03 697.635 li
1158.66 695.488 li
1158.51 695.174 li
1157.85 693.863 1157.17 692.723 1156.42 691.695 cv
1156.84 691.092 li
1157.21 690.49 li
1158.47 690.684 1159.66 690.779 1160.84 690.779 cv
1161.59 690.768 li
1162.77 688.4 li
1162.6 688.129 li
1161.85 686.961 1160.97 685.9 1160 684.973 cv
1160.3 684.316 li
1160.56 683.662 li
1162.09 683.645 1163.42 683.518 1164.6 683.273 cv
1164.91 683.207 li
1165.8 680.703 li
1165.55 680.451 li
1164.52 679.408 1163.52 678.523 1162.49 677.756 cv
1162.68 677.072 li
1162.83 676.369 li
1164.08 676.205 1165.36 675.883 1166.73 675.385 cv
1167.04 675.271 li
1167.47 672.633 li
1167.21 672.426 li
1166.15 671.588 1165.04 670.879 1163.82 670.27 cv
1163.9 669.518 li
1163.93 668.85 li
1165.27 668.439 1166.57 667.883 1167.71 667.232 cv
1168 667.066 li
1167.95 664.428 li
1167.67 664.268 li
1166.53 663.617 1165.28 663.064 1163.96 662.621 cv
1163.91 661.959 li
1163.83 661.211 li
1164.9 660.717 1166 660.039 1167.28 659.104 cv
1167.55 658.904 li
1167.18 656.207 li
1166.85 656.094 li
1165.46 655.617 1164.18 655.287 1162.93 655.088 cv
1162.77 654.379 li
1162.57 653.707 li
1163.62 652.977 1164.65 652.084 1165.65 651.047 cv
1165.89 650.799 li
1165.02 648.262 li
1164.7 648.199 li
1163.45 647.947 1162.28 647.826 1161.13 647.826 cv
1160.97 647.826 1160.82 647.828 1160.66 647.832 cv
1160.14 646.508 li
1161.11 645.514 1161.99 644.463 1162.75 643.383 cv
1162.94 643.102 li
1161.73 640.75 li
1161.41 640.73 li
1161.09 640.709 1160.76 640.699 1160.44 640.699 cv
1159.5 640.699 1158.48 640.779 1157.35 640.943 cv
1156.57 639.773 li
1157.39 638.693 1158.09 637.521 1158.67 636.287 cv
1158.8 635.992 li
1157.26 633.752 li
1156.91 633.803 li
1155.74 633.971 1154.51 634.252 1152.95 634.707 cv
1152.04 633.625 li
1152.71 632.396 1153.22 631.133 1153.56 629.861 cv
1153.65 629.549 li
1151.8 627.656 li
1151.48 627.748 li
1150.23 628.104 1148.99 628.59 1147.69 629.232 cv
1147.16 628.738 li
1146.59 628.305 li
1147.02 627.08 1147.32 625.793 1147.51 624.383 cv
1147.56 624.055 li
1145.42 622.434 li
1145.12 622.574 li
1143.81 623.174 1142.63 623.873 1141.61 624.656 cv
1141 624.244 li
1140.37 623.873 li
1140.63 622.51 1140.72 621.146 1140.64 619.811 cv
1140.62 619.484 li
1138.26 618.303 li
1137.98 618.492 li
1137 619.166 1136.01 619.984 1134.86 621.053 cv
1134.19 620.785 li
1133.59 620.537 li
1133.57 619.133 1133.44 617.777 1133.2 616.5 cv
1133.14 616.18 li
1130.57 615.287 li
1130.32 615.527 li
1129.27 616.543 1128.37 617.574 1127.66 618.598 cv
1127 618.412 li
1126.29 618.258 li
1126.09 616.963 1125.77 615.639 1125.32 614.318 cv
1125.22 613.994 li
1122.56 613.564 li
1122.36 613.83 li
1121.48 614.953 1120.75 616.08 1120.14 617.266 cv
1119.44 617.191 li
1118.77 617.158 li
1118.38 615.959 1117.84 614.697 1117.17 613.402 cv
1117.01 613.092 li
1114.35 613.143 li
1114.19 613.428 li
1113.55 614.57 1113 615.813 1112.55 617.129 cv
1111.13 617.211 li
1110.45 615.875 1109.73 614.752 1108.95 613.785 cv
1108.75 613.535 li
1106.14 613.91 li
1106.02 614.225 li
1105.56 615.467 1105.23 616.756 1105.01 618.158 cv
1104.3 618.322 li
1103.63 618.516 li
1102.9 617.48 1102.01 616.447 1100.98 615.441 cv
1100.73 615.199 li
1098.19 616.068 li
1098.12 616.391 li
1097.85 617.797 1097.72 619.115 1097.71 620.408 cv
1097.03 620.66 li
1096.42 620.939 li
1095.38 619.922 1094.36 619.07 1093.31 618.342 cv
1093.03 618.15 li
1090.6 619.355 li
1090.59 619.701 li
1090.57 621.109 1090.66 622.461 1090.86 623.725 cv
1089.65 624.465 li
1088.49 623.648 1087.35 622.961 1086.18 622.365 cv
1085.87 622.203 li
1083.68 623.848 li
1083.73 624.176 li
1083.91 625.516 1084.21 626.848 1084.62 628.143 cv
1084.1 628.586 li
1083.56 629.01 li
1082.15 628.316 1080.94 627.844 1079.79 627.527 cv
1079.48 627.441 li
1077.58 629.291 li
1077.67 629.613 li
1078.03 630.906 1078.53 632.178 1079.15 633.398 cv
1078.68 633.91 li
1078.2 634.494 li
1076.98 634.045 1075.68 633.74 1074.24 633.566 cv
1073.91 633.527 li
1072.36 635.672 li
1072.5 635.971 li
1073.06 637.199 1073.74 638.377 1074.54 639.477 cv
1073.81 640.67 li
1072.67 640.48 1071.47 640.389 1070.15 640.389 cv
1069.42 640.396 li
1068.23 642.834 li
1068.42 643.105 li
1069.25 644.316 1070.08 645.328 1070.97 646.184 cv
1070.65 646.891 li
1070.4 647.49 li
1069.04 647.496 1067.64 647.631 1066.36 647.883 cv
1066.04 647.947 li
1065.23 650.451 li
1065.45 650.693 li
1066.31 651.65 1067.3 652.539 1068.47 653.402 cv
1068.28 654.084 li
1068.12 654.797 li
1066.73 655.006 1065.46 655.326 1064.23 655.77 cv
1063.92 655.885 li
1063.49 658.525 li
1063.75 658.732 li
1064.88 659.611 1065.99 660.318 1067.14 660.887 cv
1067.06 661.639 li
1067.02 662.322 li
1065.65 662.797 1064.46 663.311 1063.32 663.924 cv
1063.03 664.082 li
1063 666.723 li
1063.29 666.887 li
1064.36 667.498 1065.57 668.035 1067 668.527 cv
1067.04 669.262 li
1067.12 669.957 li
1065.84 670.574 1064.72 671.291 1063.7 672.141 cv
1063.46 672.344 li
1063.83 674.955 li
1064.16 675.07 li
1065.4 675.514 1066.69 675.844 1068.08 676.074 cv
1068.4 677.449 li
1067.23 678.309 1066.21 679.207 1065.36 680.125 cv
1065.13 680.367 li
1065.92 682.896 li
1066.26 682.959 li
1067.71 683.223 1069.03 683.355 1070.29 683.365 cv
1070.58 684.061 li
1070.86 684.666 li
1069.89 685.633 1069.02 686.682 1068.26 687.789 cv
1068.08 688.063 li
1069.28 690.498 li
1069.64 690.496 li
1071.08 690.486 1072.4 690.396 1073.65 690.223 cv
1074.38 691.43 li
1073.54 692.555 1072.83 693.73 1072.28 694.928 cv
1072.14 695.229 li
1073.71 697.398 li
1074.04 697.354 li
1075.34 697.18 1076.67 696.879 1078.01 696.457 cv
1078.92 697.539 li
1078.34 698.68 1077.83 699.934 1077.4 701.27 cv
1077.3 701.6 li
1079.22 703.506 li
1079.54 703.418 li
1080.78 703.078 1082.02 702.592 1083.32 701.936 cv
1083.82 702.402 li
1084.38 702.885 li
1083.98 704.086 1083.69 705.385 1083.49 706.844 cv
1083.45 707.178 li
1085.6 708.73 li
1085.91 708.586 li
1087.02 708.055 1088.19 707.367 1089.39 706.539 cv
1090.59 707.281 li
1090.36 708.674 1090.27 710.002 1090.31 711.332 cv
1090.33 711.668 li
1092.69 712.846 li
1092.96 712.676 li
1094.02 712.002 1095.06 711.16 1096.11 710.107 cv
1096.74 710.361 li
1097.42 710.672 li
1097.44 712.07 1097.57 713.412 1097.81 714.666 cv
1097.88 714.984 li
1100.38 715.867 li
1100.63 715.629 li
1101.59 714.721 1102.47 713.729 1103.33 712.604 cv
1104.68 712.898 li
1104.89 714.262 1105.23 715.592 1105.69 716.857 cv
1105.81 717.172 li
1108.45 717.602 li
1108.66 717.332 li
1109.47 716.27 1110.2 715.113 1110.81 713.893 cv
1112.23 714.043 li
1112.64 715.361 1113.17 716.611 1113.79 717.762 cv
1113.96 718.063 li
cp
@
1116 672.273 mo
1116.06 672.27 li
1116.18 672.215 li
1116.23 672.162 li
1116.5 671.863 1116.7 671.6 1116.85 671.324 cv
1117.15 671.523 1117.47 671.689 1117.84 671.834 cv
1117.98 671.834 li
1118.04 671.807 li
1118.13 671.717 li
1118.16 671.66 li
1118.31 671.352 1118.44 671.014 1118.52 670.672 cv
1118.83 670.77 1119.19 670.836 1119.63 670.863 cv
1119.74 670.824 li
1119.79 670.789 li
1119.85 670.678 li
1119.87 670.607 li
1119.92 670.215 1119.94 669.846 1119.89 669.559 cv
1119.94 669.559 li
1120.25 669.559 1120.58 669.52 1121.02 669.418 cv
1121.13 669.342 li
1121.16 669.285 li
1121.19 669.162 li
1121.18 669.1 li
1121.13 668.742 1121.04 668.402 1120.91 668.086 cv
1121.23 667.988 1121.56 667.844 1121.94 667.619 cv
1122.01 667.52 li
1122.03 667.457 li
1122.02 667.328 li
1121.99 667.27 li
1121.84 666.943 1121.65 666.639 1121.44 666.379 cv
1121.72 666.188 1121.99 665.951 1122.28 665.641 cv
1122.32 665.518 li
1122.32 665.451 li
1122.28 665.334 li
1122.23 665.285 li
1121.98 665.014 1121.72 664.783 1121.44 664.596 cv
1121.65 664.338 1121.85 664.018 1122.02 663.635 cv
1122.03 663.512 li
1122.01 663.451 li
1121.93 663.35 li
1121.88 663.314 li
1121.56 663.133 1121.23 662.99 1120.91 662.891 cv
1121.04 662.576 1121.13 662.225 1121.19 661.801 cv
1121.16 661.68 li
1121.13 661.629 li
1121.02 661.555 li
1120.95 661.539 li
1120.59 661.457 1120.26 661.418 1119.94 661.418 cv
1119.91 661.418 li
1119.93 661.074 1119.92 660.721 1119.85 660.297 cv
1119.79 660.188 li
1119.74 660.146 li
1119.61 660.109 li
1119.55 660.113 li
1119.19 660.139 1118.84 660.201 1118.52 660.303 cv
1118.44 659.963 1118.31 659.623 1118.13 659.246 cv
1118.03 659.166 li
1117.98 659.143 li
1117.85 659.141 li
1117.79 659.166 li
1117.43 659.305 1117.09 659.48 1116.86 659.66 cv
1116.69 659.365 1116.48 659.088 1116.17 658.756 cv
1116.06 658.707 li
1116 658.699 li
1115.88 658.734 li
1115.82 658.779 li
1115.54 659.002 1115.29 659.246 1115.07 659.518 cv
1114.82 659.279 1114.52 659.068 1114.16 658.865 cv
1114.04 658.848 li
1113.98 658.859 li
1113.87 658.93 li
1113.83 658.988 li
1113.61 659.32 1113.44 659.643 1113.34 659.918 cv
1113.03 659.766 1112.68 659.648 1112.28 659.559 cv
1112.15 659.58 li
1112.09 659.609 li
1112.01 659.709 li
1111.99 659.775 li
1111.89 660.115 1111.82 660.439 1111.79 660.807 cv
1111.57 660.773 1111.35 660.758 1111.13 660.758 cv
1111 660.758 1110.87 660.764 1110.67 660.779 cv
1110.56 660.838 li
1110.51 660.883 li
1110.47 661.006 li
1110.47 661.072 li
1110.46 661.436 1110.5 661.785 1110.57 662.115 cv
1110.24 662.168 1109.9 662.262 1109.5 662.416 cv
1109.4 662.51 li
1109.38 662.574 li
1109.37 662.697 li
1109.39 662.758 li
1109.49 663.104 1109.64 663.441 1109.8 663.725 cv
1109.49 663.871 1109.16 664.082 1108.86 664.33 cv
1108.8 664.441 li
1108.79 664.506 li
1108.82 664.631 li
1108.86 664.686 li
1109.06 664.986 1109.28 665.25 1109.54 665.488 cv
1109.29 665.719 1109.05 665.996 1108.81 666.35 cv
1108.79 666.475 li
1108.8 666.541 li
1108.87 666.648 li
1108.92 666.688 li
1109.2 666.922 1109.55 667.137 1109.81 667.238 cv
1109.64 667.535 1109.49 667.877 1109.37 668.285 cv
1109.38 668.412 li
1109.41 668.471 li
1109.5 668.557 li
1109.56 668.582 li
1109.89 668.713 1110.22 668.805 1110.58 668.859 cv
1110.5 669.189 1110.46 669.549 1110.47 669.973 cv
1110.52 670.094 li
1110.56 670.143 li
1110.67 670.193 li
1110.74 670.199 li
1110.87 670.211 1111 670.217 1111.13 670.217 cv
1111.37 670.217 1111.61 670.197 1111.79 670.16 cv
1111.81 670.504 1111.88 670.85 1112.01 671.262 cv
1112.09 671.365 li
1112.15 671.398 li
1112.28 671.414 li
1112.34 671.4 li
1112.71 671.316 1113.05 671.199 1113.33 671.049 cv
1113.46 671.375 1113.63 671.695 1113.87 672.041 cv
1113.98 672.111 li
1114.04 672.127 li
1114.17 672.107 li
1114.23 672.074 li
1114.55 671.891 1114.82 671.691 1115.07 671.457 cv
1115.31 671.744 1115.55 671.98 1115.82 672.193 cv
1115.88 672.236 li
1116 672.273 li
cp
@
1209.25 554.931 mo
1209.25 561.558 1203.88 566.931 1197.25 566.931 cv
810.231 566.931 li
803.602 566.931 798.23 561.558 798.23 554.931 cv
798.23 12.0015 li
798.23 5.37402 803.602 .00146484 810.231 .00146484 cv
1197.25 .00146484 li
1203.88 .00146484 1209.25 5.37402 1209.25 12.0015 cv
1209.25 554.931 li
cp
@
765.356 554.931 mo
765.356 561.558 759.983 566.931 753.356 566.931 cv
12.0015 566.931 li
5.37402 566.931 .00146484 561.558 .00146484 554.931 cv
.00146484 12.0015 li
.00146484 5.37402 5.37402 .00146484 12.0015 .00146484 cv
753.356 .00146484 li
759.983 .00146484 765.356 5.37402 765.356 12.0015 cv
765.356 554.931 li
cp
@
447.795 65.9531 mo
415.518 65.9531 li
412.748 66.2324 li
410.098 67.0332 li
407.648 68.3428 li
405.498 70.1133 li
403.728 72.2529 li
402.428 74.7031 li
401.618 77.3633 li
401.348 80.1328 li
401.348 119.003 li
401.458 120.113 li
401.778 121.173 li
402.297 122.152 li
403.007 123.013 li
403.858 123.723 li
404.848 124.242 li
405.908 124.563 li
407.018 124.673 li
417.877 124.673 li
419.768 128.572 li
421.837 128.572 li
423.667 124.673 li
425.738 124.673 li
427.627 128.572 li
429.688 128.572 li
431.518 124.673 li
433.587 124.673 li
435.417 128.572 li
437.547 128.572 li
439.377 124.673 li
441.448 124.673 li
443.278 128.572 li
445.337 128.572 li
447.228 124.673 li
449.297 124.673 li
451.127 128.572 li
453.198 128.572 li
455.087 124.673 li
457.148 124.673 li
458.978 128.572 li
461.047 128.572 li
462.938 124.673 li
465.007 124.673 li
466.837 128.572 li
468.908 128.572 li
470.738 124.673 li
472.797 124.673 li
474.688 128.572 li
476.757 128.572 li
478.587 124.673 li
480.658 124.673 li
482.547 128.572 li
484.608 128.572 li
486.448 124.673 li
488.507 124.673 li
490.398 128.572 li
492.468 128.572 li
494.297 124.673 li
496.368 124.673 li
498.198 128.572 li
500.257 128.572 li
502.148 124.673 li
504.218 124.673 li
506.047 128.572 li
508.178 128.572 li
510.007 124.673 li
512.068 124.673 li
513.908 128.572 li
516.028 128.572 li
517.858 124.673 li
519.928 124.673 li
521.757 128.572 li
523.888 128.572 li
525.658 124.673 li
527.778 124.673 li
529.618 128.572 li
531.678 128.572 li
533.507 124.673 li
535.638 124.673 li
537.468 128.572 li
539.528 128.572 li
541.368 124.673 li
543.488 124.673 li
545.318 128.572 li
547.388 128.572 li
549.218 124.673 li
551.348 124.673 li
553.118 128.572 li
555.238 128.572 li
557.078 124.673 li
559.138 124.673 li
560.968 128.572 li
563.098 128.572 li
564.928 124.673 li
566.998 124.673 li
568.828 128.572 li
570.948 128.572 li
572.778 124.673 li
574.848 124.673 li
576.678 128.572 li
578.808 128.572 li
580.578 124.673 li
582.708 124.673 li
584.538 128.572 li
586.598 128.572 li
588.428 124.673 li
590.558 124.673 li
592.388 128.572 li
594.458 128.572 li
596.288 124.673 li
598.408 124.673 li
600.238 128.572 li
602.308 128.572 li
604.138 124.673 li
606.268 124.673 li
608.038 128.572 li
610.167 128.572 li
611.998 124.673 li
614.058 124.673 li
615.888 128.572 li
618.018 128.572 li
619.848 124.673 li
621.917 124.673 li
623.748 128.572 li
625.868 128.572 li
627.698 124.673 li
629.768 124.673 li
631.598 128.572 li
633.728 128.572 li
635.498 124.673 li
637.627 124.673 li
639.458 128.572 li
641.518 128.572 li
643.348 124.673 li
645.478 124.673 li
647.308 128.572 li
649.377 128.572 li
651.208 124.673 li
662.127 124.673 li
663.238 124.563 li
664.297 124.242 li
665.278 123.723 li
666.138 123.013 li
666.848 122.152 li
667.368 121.173 li
667.688 120.113 li
667.797 119.003 li
667.797 80.1328 li
667.528 77.3633 li
666.718 74.7031 li
665.408 72.2529 li
663.648 70.1133 li
661.498 68.3428 li
659.047 67.0332 li
656.388 66.2324 li
653.627 65.9531 li
621.847 65.9531 li
@
422.634 98.0518 mo
421.055 98.3501 li
419.714 99.2285 li
418.814 100.559 li
418.494 102.134 li
418.792 103.713 li
419.672 105.054 li
421.001 105.954 li
422.604 106.272 li
646.527 106.272 li
648.09 105.975 li
649.431 105.096 li
650.332 103.767 li
650.651 102.192 li
650.354 100.615 li
649.474 99.272 li
648.145 98.3711 li
646.541 98.0542 li
422.634 98.0518 li
cp
@
449.78 65.9531 mo
487.797 65.9531 li
487.797 56.0332 li
487.908 54.9336 li
488.228 53.8633 li
488.757 52.8828 li
489.458 52.0234 li
490.318 51.3223 li
491.297 50.8027 li
492.368 50.4727 li
493.468 50.3633 li
575.678 50.3633 li
576.778 50.4727 li
577.848 50.8027 li
578.828 51.3223 li
579.688 52.0234 li
580.388 52.8828 li
580.908 53.8633 li
581.238 54.9336 li
581.348 56.0332 li
581.348 65.9531 li
619.863 65.9531 li
@
561.64 61.7031 mo
561.958 63.2783 li
562.848 64.6123 li
564.182 65.502 li
565.757 65.8115 li
567.323 65.502 li
568.657 64.6123 li
569.547 63.2783 li
569.865 61.7031 li
569.547 60.1367 li
568.657 58.8027 li
567.323 57.9043 li
565.757 57.5947 li
564.182 57.9043 li
562.848 58.8027 li
561.958 60.1367 li
561.64 61.7031 li
cp
@
517.568 65.9531 mo
551.578 65.9531 li
551.578 57.4531 li
517.568 57.4531 li
517.568 65.9531 li
cp
@
499.28 61.7031 mo
499.599 63.2783 li
500.488 64.6123 li
501.822 65.502 li
503.388 65.8115 li
504.964 65.502 li
506.298 64.6123 li
507.187 63.2783 li
507.506 61.7031 li
507.187 60.1367 li
506.298 58.8027 li
504.964 57.9043 li
503.388 57.5947 li
501.822 57.9043 li
500.488 58.8027 li
499.599 60.1367 li
499.28 61.7031 li
cp
@
155.812 392.59 mo
192.637 392.59 li
194.297 392.43 li
195.887 391.939 li
197.357 391.16 li
198.647 390.1 li
199.707 388.811 li
200.487 387.34 li
200.977 385.75 li
201.137 384.09 li
201.137 198.66 li
179.427 198.641 li
178.317 198.75 li
177.257 199.07 li
176.277 199.6 li
175.417 200.299 li
174.717 201.16 li
174.188 202.141 li
173.867 203.209 li
173.757 204.311 li
173.757 353.01 li
173.647 354.119 li
173.327 355.18 li
172.807 356.16 li
172.097 357.02 li
171.237 357.721 li
170.257 358.25 li
169.197 358.57 li
168.087 358.68 li
58.686 358.68 li
57.5859 358.57 li
56.5156 358.25 li
55.5356 357.721 li
54.6758 357.02 li
53.9761 356.16 li
53.4458 355.18 li
53.126 354.119 li
53.0156 353.01 li
53.0156 204.311 li
52.9058 203.209 li
52.5859 202.141 li
52.0659 201.16 li
51.356 200.299 li
50.4961 199.6 li
49.5156 199.07 li
48.4561 198.75 li
47.3457 198.641 li
28.0771 198.641 li
28.0771 277.32 li
28.0571 277.77 li
28.0068 278.221 li
27.917 278.67 li
27.7871 279.109 li
27.627 279.529 li
27.4272 279.949 li
27.207 280.34 li
26.9473 280.721 li
20.707 289.029 li
20.4473 289.41 li
20.2168 289.799 li
20.0269 290.209 li
19.8672 290.641 li
19.7368 291.08 li
19.647 291.529 li
19.5972 291.98 li
19.5771 292.43 li
19.5771 299.049 li
27.5068 299.049 li
27.5068 375.58 li
19.5771 375.58 li
19.5771 386.92 li
19.687 388.029 li
20.0068 389.09 li
20.5269 390.07 li
21.2368 390.93 li
22.0972 391.641 li
23.0771 392.16 li
24.1372 392.48 li
25.2471 392.59 li
64.9131 392.59 li
@
153.827 392.59 mo
66.8975 392.59 li
@
1193.68 186.151 mo
1193.68 178.555 li
1188.01 178.555 li
1188.01 178.3 li
1188.01 170.022 li
1188.01 169.768 li
1193.68 169.768 li
1193.68 157.854 li
1193.63 156.673 li
1193.48 155.5 li
1193.24 154.35 li
1192.89 153.216 li
1192.46 152.114 li
1191.94 151.062 li
1191.32 150.049 li
1190.63 149.093 li
1170 123.107 li
1168.95 121.925 li
1167.77 120.872 li
1166.49 119.958 li
1165.1 119.183 li
1163.64 118.576 li
1162.12 118.139 li
1160.56 117.87 li
1158.98 117.78 li
1154.19 117.78 li
1154.19 129.12 li
1145.48 129.12 li
1145.12 129.12 li
1145.12 117.78 li
1143.62 117.779 li
1142.8 117.866 li
1142.02 118.098 li
1141.31 118.477 li
1140.67 118.994 li
1140.15 119.617 li
1139.77 120.339 li
1139.53 121.121 li
1139.46 121.941 li
1139.45 160.192 li
1139.53 161.003 li
1139.76 161.784 li
1140.14 162.507 li
1140.66 163.134 li
1141.29 163.653 li
1142 164.036 li
1142.79 164.272 li
1143.61 164.362 li
1154.19 164.362 li
1154.19 169.768 li
1168.37 169.768 li
1168.37 170.022 li
1168.37 178.3 li
1168.37 178.555 li
1154.19 178.555 li
1154.19 203.192 li
1165.46 203.194 li
1166.25 203.359 li
1166.92 203.815 li
1167.36 204.491 li
1167.51 205.289 li
1167.35 206.086 li
1166.89 206.762 li
1166.21 207.208 li
1165.44 207.359 li
1154.19 207.359 li
1154.19 215.661 li
1165.46 215.663 li
1166.25 215.828 li
1166.92 216.285 li
1167.36 216.971 li
1167.51 217.769 li
1167.35 218.565 li
1166.89 219.233 li
1166.22 219.677 li
1165.44 219.83 li
1147.1 219.83 li
1147.1 233.102 li
1149.85 233.103 li
1151.12 233.291 li
1152.27 233.837 li
1153.21 234.699 li
1153.86 235.796 li
1154.17 237.036 li
1154.11 238.315 li
1153.66 239.51 li
1152.9 240.531 li
1151.88 241.294 li
1150.67 241.72 li
1149.4 241.776 li
1148.16 241.466 li
1147.07 240.797 li
1146.22 239.853 li
1145.68 238.695 li
1145.48 237.451 li
1145.53 209.018 li
1148.2 207.154 li
1148.36 207.029 li
1148.49 206.901 li
1148.61 206.74 li
1148.71 206.579 li
1148.79 206.4 li
1148.85 206.225 li
1148.88 206.032 li
1148.9 205.83 li
1148.9 204.596 li
1148.87 204.102 li
1148.81 203.622 li
1148.7 203.151 li
1148.55 202.688 li
1148.37 202.236 li
1148.15 201.805 li
1147.89 201.399 li
1147.59 201.005 li
1146.11 199.248 li
1145.97 199.095 li
1145.82 198.963 li
1145.65 198.848 li
1145.47 198.752 li
1145.28 198.675 li
1145.08 198.617 li
1144.87 198.58 li
1144.66 198.57 li
1143.23 198.569 li
1142.69 198.614 li
1142.19 198.768 li
1141.73 199.007 li
1141.31 199.333 li
1140.97 199.74 li
1140.71 200.201 li
1140.54 200.692 li
1140.48 201.233 li
1139.47 237.155 li
1139.46 237.35 li
1139.45 246.651 li
1139.61 248.292 li
1140.08 249.863 li
1140.86 251.318 li
1141.91 252.593 li
1143.18 253.643 li
1144.63 254.424 li
1146.21 254.901 li
1147.86 255.061 li
1154.19 255.061 li
1168.37 255.061 li
1168.37 263.339 li
1168.37 263.849 li
1154.19 263.849 li
1154.19 293.462 li
1184.02 283.588 li
1186.05 282.736 li
1187.92 281.585 li
1189.59 280.146 li
1191.01 278.468 li
1192.15 276.593 li
1192.99 274.566 li
1193.51 272.422 li
1193.68 270.23 li
1193.68 263.849 li
1188.01 263.849 li
1188.01 263.339 li
1188.01 255.061 li
1193.68 255.061 li
1193.68 247.21 li
@
1193.68 244.375 mo
1193.68 188.987 li
@
1193.69 355.723 mo
1193.69 411.11 li
@
1193.69 352.887 mo
1193.69 345.036 li
1188.02 345.036 li
1188.01 345.036 li
1188.01 336.249 li
1193.69 336.249 li
1193.69 329.875 li
1193.51 327.69 li
1193 325.545 li
1192.16 323.518 li
1191.02 321.642 li
1189.6 319.961 li
1187.93 318.521 li
1186.07 317.369 li
1184.03 316.511 li
1154.19 306.635 li
1154.19 336.249 li
1168.37 336.249 li
1168.37 336.758 li
1168.37 345.036 li
1154.19 345.036 li
1154.19 345.036 li
1147.87 345.036 li
1146.23 345.192 li
1144.65 345.665 li
1143.2 346.443 li
1141.92 347.49 li
1140.87 348.763 li
1140.1 350.216 li
1139.61 351.787 li
1139.46 353.437 li
1139.45 362.637 li
1139.46 362.738 li
1139.47 363.043 li
1140.48 398.856 li
1140.54 399.386 li
1140.7 399.878 li
1140.96 400.343 li
1141.3 400.75 li
1141.71 401.079 li
1142.17 401.323 li
1142.68 401.479 li
1143.22 401.527 li
1144.66 401.527 li
1144.87 401.519 li
1145.07 401.482 li
1145.27 401.425 li
1145.46 401.349 li
1145.64 401.255 li
1145.81 401.142 li
1145.96 401.01 li
1146.11 400.854 li
1147.59 399.097 li
1147.88 398.702 li
1148.15 398.302 li
1148.37 397.868 li
1148.56 397.417 li
1148.71 396.956 li
1148.81 396.483 li
1148.88 396.003 li
1148.9 395.507 li
1148.9 394.271 li
1148.89 394.075 li
1148.85 393.887 li
1148.79 393.706 li
1148.72 393.53 li
1148.51 393.209 li
1148.36 393.074 li
1148.21 392.948 li
1145.49 390.997 li
1145.5 362.631 li
1145.69 361.375 li
1146.23 360.22 li
1147.09 359.282 li
1148.19 358.62 li
1149.43 358.318 li
1150.71 358.383 li
1151.9 358.816 li
1152.94 359.587 li
1153.69 360.612 li
1154.11 361.811 li
1154.17 363.09 li
1153.86 364.328 li
1153.2 365.421 li
1152.25 366.277 li
1151.09 366.814 li
1149.84 366.995 li
1147.1 366.995 li
1147.1 380.268 li
1165.46 380.27 li
1166.25 380.435 li
1166.92 380.892 li
1167.36 381.568 li
1167.51 382.366 li
1167.35 383.162 li
1166.89 383.84 li
1166.22 384.284 li
1165.44 384.437 li
1154.19 384.437 li
1154.19 392.738 li
1165.45 392.74 li
1166.25 392.903 li
1166.92 393.362 li
1167.36 394.047 li
1167.51 394.847 li
1167.35 395.644 li
1166.89 396.309 li
1166.22 396.753 li
1165.44 396.905 li
1154.19 396.905 li
1154.19 421.542 li
1168.37 421.542 li
1168.37 421.797 li
1168.37 430.075 li
1168.37 430.329 li
1154.19 430.329 li
1154.19 435.735 li
1143.62 435.735 li
1142.81 435.821 li
1142.03 436.054 li
1141.31 436.434 li
1140.68 436.95 li
1140.16 437.574 li
1139.77 438.296 li
1139.53 439.075 li
1139.46 439.896 li
1139.45 478.146 li
1139.53 478.958 li
1139.76 479.739 li
1140.15 480.464 li
1140.67 481.091 li
1141.29 481.608 li
1142.01 481.991 li
1142.79 482.228 li
1143.61 482.317 li
1145.12 482.317 li
1145.12 470.978 li
1145.49 470.978 li
1154.19 470.978 li
1154.19 482.317 li
1158.97 482.317 li
1160.55 482.229 li
1162.11 481.961 li
1163.63 481.524 li
1165.1 480.92 li
1166.48 480.146 li
1167.77 479.232 li
1168.94 478.181 li
1170 476.995 li
1190.63 451.007 li
1191.32 450.056 li
1191.94 449.043 li
1192.46 447.99 li
1192.9 446.89 li
1193.24 445.756 li
1193.49 444.604 li
1193.64 443.433 li
1193.69 442.247 li
1193.69 430.329 li
1188.01 430.329 li
1188.01 421.542 li
1193.69 421.542 li
1193.69 413.946 li
@
851.29 203.898 mo
851.29 242.855 li
@
851.29 201.063 mo
851.29 176.921 li
860.321 176.921 li
861.06 176.931 li
861.788 176.961 li
862.524 177.011 li
863.252 177.07 li
863.979 177.16 li
864.706 177.271 li
865.434 177.39 li
866.152 177.529 li
887.481 182.029 li
888.172 182.236 li
888.796 182.55 li
889.372 182.971 li
889.859 183.48 li
890.249 184.067 li
890.541 184.713 li
890.725 185.397 li
890.782 186.101 li
890.782 187.808 li
890.782 187.808 li
885.31 189.934 li
885.31 187.808 li
866.122 187.808 li
866.122 188.063 li
860.551 188.063 li
859.524 188.245 li
858.62 188.787 li
857.963 189.621 li
857.637 190.622 li
857.702 191.679 li
858.12 192.651 li
858.871 193.402 li
859.831 193.843 li
860.885 193.91 li
861.889 193.607 li
862.733 192.949 li
863.286 192.054 li
863.479 191.02 li
863.48 189.681 li
866.122 189.681 li
866.122 196.341 li
866.122 196.595 li
890.782 196.595 li
890.782 196.892 li
890.742 197.717 li
890.613 198.537 li
890.415 199.339 li
890.138 200.108 li
889.782 200.859 li
889.365 201.562 li
888.871 202.223 li
888.318 202.835 li
873.86 217.302 li
872.795 218.588 li
871.994 220.076 li
871.505 221.694 li
871.333 223.372 li
871.502 225.053 li
871.987 226.661 li
872.784 228.15 li
873.854 229.455 li
888.321 243.923 li
888.876 244.539 li
889.371 245.202 li
889.786 245.913 li
890.142 246.656 li
890.417 247.435 li
890.615 248.236 li
890.743 249.048 li
890.782 249.877 li
890.782 250.168 li
866.122 250.168 li
866.122 250.423 li
866.122 257.083 li
863.48 257.083 li
863.48 255.762 li
863.297 254.745 li
862.756 253.83 li
861.921 253.174 li
860.92 252.857 li
859.866 252.913 li
858.899 253.342 li
858.141 254.081 li
857.709 255.042 li
857.632 256.095 li
857.946 257.112 li
858.592 257.943 li
859.489 258.497 li
860.533 258.7 li
866.122 258.7 li
866.122 258.956 li
885.309 258.956 li
885.309 256.83 li
890.782 258.956 li
890.782 260.672 li
890.723 261.384 li
890.536 262.066 li
890.241 262.711 li
889.848 263.287 li
889.36 263.793 li
888.782 264.211 li
888.155 264.533 li
887.472 264.737 li
865.43 269.374 li
864.705 269.495 li
863.977 269.604 li
863.25 269.683 li
862.521 269.753 li
861.784 269.803 li
861.059 269.833 li
851.29 269.833 li
851.29 245.69 li
@
929.5 172.26 mo
929.5 211.217 li
@
929.5 169.425 mo
929.5 145.282 li
919.732 145.282 li
919.005 145.313 li
918.268 145.362 li
917.54 145.432 li
916.813 145.512 li
916.084 145.621 li
915.36 145.741 li
893.317 150.377 li
892.635 150.582 li
892.007 150.903 li
891.43 151.322 li
890.941 151.828 li
890.549 152.403 li
890.254 153.048 li
890.067 153.731 li
890.008 154.442 li
890.008 156.16 li
890.007 156.16 li
895.479 158.286 li
895.479 156.16 li
914.668 156.16 li
914.668 156.415 li
920.256 156.416 li
921.3 156.618 li
922.197 157.172 li
922.843 158.003 li
923.157 159.02 li
923.08 160.073 li
922.649 161.034 li
921.89 161.773 li
920.924 162.202 li
919.869 162.258 li
918.868 161.941 li
918.034 161.285 li
917.492 160.371 li
917.309 159.353 li
917.309 158.032 li
914.668 158.032 li
914.668 164.692 li
914.668 164.947 li
890.008 164.947 li
890.008 165.237 li
890.047 166.066 li
890.174 166.878 li
890.373 167.68 li
890.647 168.459 li
891.004 169.202 li
891.418 169.913 li
891.913 170.576 li
892.468 171.191 li
906.936 185.66 li
908.006 186.965 li
908.803 188.454 li
909.288 190.063 li
909.458 191.743 li
909.284 193.421 li
908.795 195.04 li
907.995 196.527 li
906.929 197.813 li
892.471 212.279 li
891.918 212.892 li
891.424 213.553 li
891.008 214.255 li
890.651 215.006 li
890.375 215.776 li
890.176 216.578 li
890.047 217.397 li
890.008 218.223 li
890.008 218.52 li
914.668 218.52 li
914.668 218.774 li
914.668 225.435 li
917.309 225.435 li
917.311 224.095 li
917.504 223.061 li
918.057 222.166 li
918.9 221.508 li
919.904 221.205 li
920.959 221.272 li
921.918 221.713 li
922.669 222.464 li
923.088 223.436 li
923.153 224.494 li
922.827 225.494 li
922.17 226.329 li
921.266 226.871 li
920.239 227.053 li
914.668 227.053 li
914.668 227.307 li
895.479 227.307 li
895.479 225.181 li
890.007 227.307 li
890.008 227.307 li
890.007 229.014 li
890.064 229.717 li
890.249 230.401 li
890.542 231.047 li
890.93 231.634 li
891.417 232.144 li
891.993 232.564 li
892.618 232.878 li
893.309 233.085 li
914.637 237.586 li
915.356 237.726 li
916.084 237.845 li
916.811 237.956 li
917.538 238.045 li
918.266 238.104 li
919.002 238.154 li
919.729 238.185 li
920.468 238.194 li
929.5 238.194 li
929.5 214.052 li
@
1022.62 264.056 mo
1108.7 264.056 li
@
1019.79 264.056 mo
1011.82 264.056 li
1010.71 263.947 li
1009.65 263.626 li
1008.67 263.107 li
1007.81 262.396 li
1007.11 261.537 li
1006.58 260.556 li
1006.26 259.498 li
1006.15 258.386 li
1006.11 110.337 li
1006.12 109.146 li
1005.88 107.976 li
1005.41 106.886 li
1004.71 105.917 li
1003.83 105.117 li
1002.8 104.517 li
1001.67 104.146 li
1000.48 104.027 li
976.786 104.027 li
975.875 103.937 li
975.006 103.667 li
974.196 103.237 li
973.497 102.657 li
972.917 101.957 li
972.487 101.146 li
972.217 100.277 li
972.125 99.3667 li
972.125 66.1567 li
972.217 65.2466 li
972.487 64.3765 li
972.917 63.5669 li
973.497 62.8667 li
974.196 62.2866 li
975.006 61.8569 li
975.875 61.5972 li
976.786 61.5073 li
1154.55 61.5073 li
1155.46 61.5972 li
1156.33 61.8569 li
1157.14 62.2866 li
1157.84 62.8667 li
1158.42 63.5669 li
1158.85 64.3765 li
1159.11 65.2466 li
1159.2 66.1567 li
1159.2 99.3667 li
1159.11 100.277 li
1158.85 101.146 li
1158.42 101.957 li
1157.84 102.657 li
1157.14 103.237 li
1156.33 103.667 li
1155.46 103.937 li
1154.55 104.027 li
1130.86 104.027 li
1129.75 104.136 li
1128.69 104.457 li
1127.71 104.976 li
1126.85 105.687 li
1126.14 106.546 li
1125.62 107.527 li
1125.3 108.587 li
1125.19 109.697 li
1125.19 258.386 li
1125.08 259.498 li
1124.76 260.556 li
1124.23 261.537 li
1123.53 262.396 li
1122.67 263.107 li
1121.69 263.626 li
1120.62 263.947 li
1119.52 264.056 li
1111.54 264.056 li
@
925.976 539.865 mo
859.489 539.865 li
@
856.655 539.865 mo
843.124 539.865 li
841.192 539.674 li
839.333 539.115 li
837.614 538.195 li
836.114 536.965 li
834.874 535.455 li
833.963 533.744 li
833.393 531.885 li
833.204 529.945 li
833.204 311.674 li
833.092 310.574 li
832.772 309.504 li
832.252 308.525 li
831.543 307.664 li
830.682 306.965 li
829.704 306.436 li
828.643 306.115 li
827.534 306.004 li
817.614 306.004 li
816.512 305.895 li
815.442 305.574 li
814.463 305.055 li
813.602 304.346 li
812.903 303.484 li
812.374 302.504 li
812.053 301.445 li
811.942 300.334 li
811.942 296.084 li
812.053 294.984 li
812.374 293.914 li
812.903 292.936 li
813.602 292.074 li
814.463 291.375 li
815.442 290.846 li
816.512 290.525 li
817.614 290.414 li
891.711 290.414 li
894.547 290.414 li
967.852 290.414 li
968.954 290.525 li
970.022 290.846 li
971.002 291.375 li
971.864 292.074 li
972.563 292.936 li
973.092 293.914 li
973.413 294.984 li
973.522 296.084 li
973.522 300.334 li
973.413 301.445 li
973.092 302.504 li
972.563 303.484 li
971.864 304.346 li
971.002 305.055 li
970.022 305.574 li
968.954 305.895 li
967.852 306.004 li
957.932 306.004 li
956.823 306.115 li
955.762 306.436 li
954.784 306.965 li
953.922 307.664 li
953.213 308.525 li
952.692 309.504 li
952.374 310.574 li
952.262 311.674 li
952.262 529.945 li
952.073 531.885 li
951.502 533.744 li
950.592 535.455 li
949.352 536.965 li
947.852 538.195 li
946.133 539.115 li
944.272 539.674 li
942.342 539.865 li
928.811 539.865 li
@
1014.42 539.865 mo
996.922 539.865 li
996.022 539.775 li
995.143 539.516 li
994.342 539.086 li
993.631 538.506 li
993.051 537.805 li
992.622 536.996 li
992.362 536.125 li
992.272 535.215 li
992.272 286.398 li
992.381 285.288 li
992.702 284.228 li
993.233 283.249 li
993.932 282.387 li
994.792 281.678 li
995.772 281.158 li
996.833 280.829 li
997.942 280.728 li
1058.88 280.728 li
1061.72 280.728 li
1122.65 280.728 li
1123.75 280.829 li
1124.82 281.158 li
1125.8 281.678 li
1126.66 282.387 li
1127.36 283.249 li
1127.88 284.228 li
1128.21 285.288 li
1128.32 286.398 li
1128.32 535.215 li
1128.23 536.125 li
1127.96 536.996 li
1127.53 537.805 li
1126.95 538.506 li
1126.25 539.086 li
1125.44 539.516 li
1124.57 539.775 li
1123.66 539.865 li
1106.17 539.865 li
@
1103.34 539.865 mo
1017.26 539.865 li
@
919.377 341.445 mo
919.409 341.164 li
919.495 340.895 li
919.633 340.654 li
919.815 340.436 li
920.049 340.266 li
920.306 340.135 li
920.594 340.055 li
920.893 340.025 li
926.944 340.025 li
927.231 340.055 li
927.52 340.135 li
927.776 340.266 li
928.01 340.436 li
928.192 340.654 li
928.341 340.895 li
928.426 341.164 li
928.449 341.445 li
928.449 398.135 li
928.426 398.414 li
928.341 398.674 li
928.192 398.924 li
928.01 399.135 li
927.776 399.314 li
927.52 399.445 li
927.231 399.525 li
926.944 399.555 li
920.893 399.555 li
920.594 399.525 li
920.306 399.445 li
920.049 399.314 li
919.815 399.135 li
919.633 398.924 li
919.495 398.674 li
919.409 398.414 li
919.377 398.135 li
919.377 341.445 li
cp
@
919.377 432.145 mo
919.409 431.875 li
919.495 431.605 li
919.633 431.365 li
919.815 431.145 li
920.049 430.975 li
920.306 430.846 li
920.594 430.754 li
920.893 430.734 li
926.944 430.734 li
927.231 430.754 li
927.52 430.846 li
927.776 430.975 li
928.01 431.145 li
928.192 431.365 li
928.341 431.605 li
928.426 431.875 li
928.449 432.145 li
928.449 488.846 li
928.426 489.115 li
928.341 489.385 li
928.192 489.635 li
928.01 489.846 li
927.776 490.025 li
927.52 490.154 li
927.231 490.234 li
926.944 490.266 li
920.893 490.266 li
920.594 490.234 li
920.306 490.154 li
920.049 490.025 li
919.815 489.846 li
919.633 489.635 li
919.495 489.385 li
919.409 489.115 li
919.377 488.846 li
919.377 432.145 li
cp
@
857.018 341.445 mo
857.04 341.164 li
857.135 340.895 li
857.274 340.654 li
857.456 340.436 li
857.69 340.266 li
857.946 340.135 li
858.233 340.055 li
858.522 340.025 li
864.573 340.025 li
864.872 340.055 li
865.16 340.135 li
865.417 340.266 li
865.651 340.436 li
865.833 340.654 li
865.97 340.895 li
866.055 341.164 li
866.088 341.445 li
866.088 398.135 li
866.055 398.414 li
865.97 398.674 li
865.833 398.924 li
865.651 399.135 li
865.417 399.314 li
865.16 399.445 li
864.872 399.525 li
864.573 399.555 li
858.522 399.555 li
858.233 399.525 li
857.946 399.445 li
857.69 399.314 li
857.456 399.135 li
857.274 398.924 li
857.135 398.674 li
857.04 398.414 li
857.018 398.135 li
857.018 341.445 li
cp
@
857.018 432.145 mo
857.04 431.875 li
857.135 431.605 li
857.274 431.365 li
857.456 431.145 li
857.69 430.975 li
857.946 430.846 li
858.233 430.754 li
858.522 430.734 li
864.573 430.734 li
864.872 430.754 li
865.16 430.846 li
865.417 430.975 li
865.651 431.145 li
865.833 431.365 li
865.97 431.605 li
866.055 431.875 li
866.088 432.145 li
866.088 488.846 li
866.055 489.115 li
865.97 489.385 li
865.833 489.635 li
865.651 489.846 li
865.417 490.025 li
865.16 490.154 li
864.872 490.234 li
864.573 490.266 li
858.522 490.266 li
858.233 490.234 li
857.946 490.154 li
857.69 490.025 li
857.456 489.846 li
857.274 489.635 li
857.135 489.385 li
857.04 489.115 li
857.018 488.846 li
857.018 432.145 li
cp
@
1315.33 46.6299 mo
1316.91 46.3213 li
1318.24 45.4307 li
1319.13 44.0986 li
1319.44 42.5225 li
1319.13 40.9561 li
1318.24 39.6221 li
1316.91 38.7236 li
1315.33 38.4131 li
1313.77 38.7236 li
1312.43 39.6221 li
1311.53 40.9561 li
1311.23 42.5225 li
1311.53 44.0986 li
1312.43 45.4307 li
1313.77 46.3213 li
1315.33 46.6299 li
cp
1 .0313726 0 rgb
@
1306.12 90.7549 mo
1306.12 119.063 li
1306.34 121.532 li
1306.98 123.933 li
1308.04 126.183 li
1309.47 128.214 li
1311.23 129.964 li
1313.27 131.372 li
1315.53 132.412 li
1317.93 133.031 li
1319.73 133.111 li
1320.94 132.912 li
1322.09 132.463 li
1323.11 131.772 li
1323.95 130.884 li
1324.59 129.833 li
1324.98 128.673 li
1325.12 127.442 li
1325.12 19.8525 li
1320.29 19.8525 li
1317.53 20.1221 li
1314.87 20.9229 li
1312.42 22.2334 li
1310.27 24.0029 li
1308.51 26.1436 li
1307.2 28.6025 li
1306.39 31.2529 li
1306.12 34.0225 li
1306.12 60.4268 li
@
1315.33 106.446 mo
1313.77 106.765 li
1312.43 107.653 li
1311.53 108.987 li
1311.23 110.554 li
1311.53 112.128 li
1312.43 113.464 li
1313.77 114.353 li
1315.33 114.671 li
1316.91 114.353 li
1318.24 113.464 li
1319.13 112.128 li
1319.44 110.554 li
1319.13 108.987 li
1318.24 107.653 li
1316.91 106.765 li
1315.33 106.446 li
cp
@
1306.12 87.9209 mo
1306.12 63.2607 li
@
1266.79 91.6475 mo
1266.79 118.942 li
1267.06 121.714 li
1267.87 124.362 li
1269.18 126.823 li
1270.94 128.964 li
1273.09 130.733 li
1275.54 132.042 li
1278.2 132.842 li
1280.97 133.111 li
1285.79 133.111 li
1285.79 25.5225 li
1285.65 24.292 li
1285.26 23.1338 li
1284.62 22.083 li
1283.78 21.1924 li
1282.76 20.5029 li
1281.61 20.0537 li
1280.4 19.8525 li
1278.6 19.9326 li
1276.2 20.5537 li
1273.94 21.5928 li
1271.9 23.0029 li
1270.14 24.7529 li
1268.71 26.7822 li
1267.66 29.0322 li
1267.01 31.4326 li
1266.79 33.9033 li
1266.79 61.3193 li
@
1276 46.5225 mo
1277.57 46.2041 li
1278.91 45.3154 li
1279.8 43.9795 li
1280.12 42.415 li
1279.8 40.8389 li
1278.91 39.5049 li
1277.57 38.6162 li
1276 38.2959 li
1274.43 38.6162 li
1273.1 39.5049 li
1272.21 40.8389 li
1271.89 42.415 li
1272.21 43.9795 li
1273.1 45.3154 li
1274.43 46.2041 li
1276 46.5225 li
cp
@
1266.79 88.8135 mo
1266.79 64.1533 li
@
1276 106.335 mo
1274.43 106.644 li
1273.1 107.534 li
1272.21 108.868 li
1271.89 110.442 li
1272.21 112.011 li
1273.1 113.343 li
1274.43 114.241 li
1276 114.552 li
1277.57 114.241 li
1278.91 113.343 li
1279.8 112.011 li
1280.12 110.442 li
1279.8 108.868 li
1278.91 107.534 li
1277.57 106.644 li
1276 106.335 li
cp
@
1519.83 328.092 mo
1521.41 327.782 li
1522.74 326.893 li
1523.63 325.56 li
1523.94 323.983 li
1523.63 322.408 li
1522.74 321.074 li
1521.41 320.185 li
1519.83 319.875 li
1518.25 320.185 li
1516.92 321.074 li
1516.03 322.408 li
1515.72 323.983 li
1516.03 325.56 li
1516.92 326.893 li
1518.25 327.782 li
1519.83 328.092 li
cp
@
1457.47 319.875 mo
1455.89 320.185 li
1454.56 321.074 li
1453.67 322.408 li
1453.36 323.983 li
1453.67 325.56 li
1454.56 326.893 li
1455.89 327.782 li
1457.47 328.092 li
1459.03 327.782 li
1460.37 326.893 li
1461.27 325.56 li
1461.58 323.983 li
1461.27 322.408 li
1460.37 321.074 li
1459.03 320.185 li
1457.47 319.875 li
cp
@
1397.87 328.233 mo
1369.59 328.233 li
1366.83 328.514 li
1364.17 329.313 li
1361.72 330.624 li
1359.57 332.384 li
1357.81 334.534 li
1356.5 336.983 li
1355.69 339.644 li
1355.42 342.413 li
1355.42 350.311 li
1621.88 350.311 li
1621.88 342.413 li
1621.6 339.644 li
1620.8 336.983 li
1619.49 334.534 li
1617.73 332.384 li
1615.58 330.624 li
1613.13 329.313 li
1610.47 328.514 li
1607.7 328.233 li
1575.21 328.233 li
@
1400.71 328.233 mo
1441.88 328.233 li
1441.88 318.313 li
1441.99 317.214 li
1442.31 316.144 li
1442.83 315.163 li
1443.54 314.304 li
1444.4 313.604 li
1445.38 313.073 li
1446.44 312.753 li
1447.55 312.644 li
1529.75 312.644 li
1530.86 312.753 li
1531.92 313.073 li
1532.9 313.604 li
1533.76 314.304 li
1534.46 315.163 li
1534.99 316.144 li
1535.31 317.214 li
1535.42 318.313 li
1535.42 328.233 li
1572.38 328.233 li
@
1505.66 328.233 mo
1505.66 319.733 li
1471.64 319.733 li
1471.64 328.233 li
1505.66 328.233 li
cp
@
1457.47 265.061 mo
1455.89 265.37 li
1454.56 266.26 li
1453.67 267.594 li
1453.36 269.169 li
1453.67 270.745 li
1454.56 272.078 li
1455.89 272.968 li
1457.47 273.277 li
1459.03 272.968 li
1460.37 272.078 li
1461.27 270.745 li
1461.58 269.169 li
1461.27 267.594 li
1460.37 266.26 li
1459.03 265.37 li
1457.47 265.061 li
cp
@
1505.66 273.419 mo
1505.66 264.919 li
1471.64 264.919 li
1471.64 273.419 li
1505.66 273.419 li
cp
@
1397.87 273.419 mo
1369.59 273.419 li
1366.83 273.699 li
1364.17 274.499 li
1361.72 275.81 li
1359.57 277.569 li
1357.81 279.72 li
1356.5 282.169 li
1355.69 284.829 li
1355.42 287.599 li
1355.42 295.496 li
1621.88 295.496 li
1621.88 287.599 li
1621.6 284.829 li
1620.8 282.169 li
1619.49 279.72 li
1617.73 277.569 li
1615.58 275.81 li
1613.13 274.499 li
1610.47 273.699 li
1607.7 273.419 li
1575.21 273.419 li
@
1519.83 273.277 mo
1521.41 272.968 li
1522.74 272.078 li
1523.63 270.745 li
1523.94 269.169 li
1523.63 267.594 li
1522.74 266.26 li
1521.41 265.37 li
1519.83 265.061 li
1518.25 265.37 li
1516.92 266.26 li
1516.03 267.594 li
1515.72 269.169 li
1516.03 270.745 li
1516.92 272.078 li
1518.25 272.968 li
1519.83 273.277 li
cp
@
1400.71 273.419 mo
1441.88 273.419 li
1441.88 263.499 li
1441.99 262.399 li
1442.31 261.329 li
1442.83 260.349 li
1443.54 259.489 li
1444.4 258.789 li
1445.38 258.259 li
1446.44 257.938 li
1447.55 257.829 li
1529.75 257.829 li
1530.86 257.938 li
1531.92 258.259 li
1532.9 258.789 li
1533.76 259.489 li
1534.46 260.349 li
1534.99 261.329 li
1535.31 262.399 li
1535.42 263.499 li
1535.42 273.419 li
1572.38 273.419 li
@
1348.85 61.3174 mo
1348.85 25.5225 li
1348.96 24.4131 li
1349.28 23.3525 li
1349.81 22.3721 li
1350.51 21.5127 li
1351.37 20.8135 li
1352.35 20.2822 li
1353.42 19.9639 li
1354.52 19.8525 li
1459.81 19.8525 li
1460.36 19.9131 li
1460.89 20.0732 li
1461.38 20.333 li
1461.81 20.6826 li
1462.16 21.1123 li
1462.43 21.6025 li
1462.59 22.1338 li
1462.64 22.6924 li
1462.64 28.7432 li
1462.59 29.2725 li
1462.44 29.792 li
1462.19 30.2725 li
1461.86 30.6924 li
1461.45 31.042 li
1460.99 31.3135 li
1460.48 31.4932 li
1459.95 31.5732 li
1452.23 32.4932 li
1444.72 34.4834 li
1437.56 37.5029 li
1430.9 41.5029 li
1424.86 46.3838 li
1419.56 52.0732 li
1415.11 58.4424 li
1411.59 65.3623 li
1409.08 72.7236 li
1407.62 80.3525 li
1407.24 88.1123 li
1407.95 95.8525 li
1409.74 103.413 li
1412.56 110.653 li
1416.37 117.423 li
1421.09 123.593 li
1426.63 129.042 li
1432.88 133.663 li
1433.55 134.272 li
1434.01 135.063 li
1434.19 135.952 li
1434.07 136.853 li
1433.68 137.673 li
1433.05 138.323 li
1432.25 138.743 li
1431.35 138.894 li
1354.52 138.894 li
1353.42 138.782 li
1352.35 138.464 li
1351.37 137.933 li
1350.51 137.233 li
1349.81 136.372 li
1349.28 135.394 li
1348.96 134.333 li
1348.85 133.224 li
1348.85 91.6475 li
@
1367.7 108.183 mo
1356.62 108.183 li
1356.62 116.683 li
1367.71 116.683 li
1367.79 117.153 li
1367.95 117.603 li
1368.2 118.013 li
1368.52 118.362 li
1368.9 118.663 li
1369.32 118.872 li
1369.78 119.003 li
1370.25 119.054 li
1399.17 119.054 li
1399.64 119.003 li
1400.1 118.872 li
1400.53 118.663 li
1400.9 118.362 li
1401.22 118.013 li
1401.47 117.603 li
1401.63 117.153 li
1401.71 116.683 li
1407.89 116.683 li
1407.89 108.183 li
1401.72 108.183 li
1401.72 34.4834 li
1407.89 34.4834 li
1407.89 25.9736 li
1356.62 25.9736 li
1356.62 34.4834 li
1367.7 34.4834 li
1367.7 108.183 li
cp
@
1421.69 34.6396 mo
1419.96 34.9775 li
1418.49 35.9639 li
1417.51 37.4326 li
1417.16 39.1631 li
1417.51 40.8936 li
1418.49 42.3545 li
1419.96 43.3389 li
1421.69 43.6768 li
1423.42 43.3389 li
1424.89 42.3545 li
1425.86 40.8936 li
1426.21 39.1631 li
1425.86 37.4326 li
1424.89 35.9639 li
1423.42 34.9775 li
1421.69 34.6396 li
cp
@
1348.85 88.8115 mo
1348.85 64.1533 li
@
1544.43 50.5635 mo
1555.51 50.5635 li
1555.51 42.0635 li
1544.42 42.0635 li
1544.34 41.5928 li
1544.18 41.1436 li
1543.93 40.7334 li
1543.61 40.3838 li
1543.23 40.083 li
1542.81 39.874 li
1542.35 39.7432 li
1541.88 39.6924 li
1512.96 39.6924 li
1512.49 39.7432 li
1512.03 39.874 li
1511.6 40.083 li
1511.23 40.3838 li
1510.91 40.7334 li
1510.66 41.1436 li
1510.5 41.5928 li
1510.42 42.0635 li
1504.24 42.0635 li
1504.24 50.5635 li
1510.41 50.5635 li
1510.41 124.263 li
1504.24 124.263 li
1504.24 132.772 li
1555.51 132.772 li
1555.51 124.263 li
1544.43 124.263 li
1544.43 50.5635 li
cp
@
1490.44 115.069 mo
1488.71 115.407 li
1487.24 116.393 li
1486.26 117.854 li
1485.91 119.583 li
1486.26 121.314 li
1487.24 122.783 li
1488.71 123.769 li
1490.44 124.106 li
1492.17 123.769 li
1493.64 122.783 li
1494.61 121.314 li
1494.96 119.583 li
1494.61 117.854 li
1493.64 116.393 li
1492.17 115.407 li
1490.44 115.069 li
cp
@
1563.28 67.0996 mo
1563.28 25.5225 li
1563.17 24.4131 li
1562.85 23.3525 li
1562.32 22.374 li
1561.62 21.5127 li
1560.76 20.8135 li
1559.78 20.2822 li
1558.71 19.9639 li
1557.61 19.8525 li
1480.78 19.8525 li
1479.88 20.0029 li
1479.08 20.4229 li
1478.45 21.0732 li
1478.06 21.8936 li
1477.94 22.7939 li
1478.12 23.6826 li
1478.58 24.4736 li
1479.25 25.083 li
1485.5 29.7041 li
1491.04 35.1533 li
1495.76 41.3232 li
1499.57 48.0928 li
1502.39 55.333 li
1504.18 62.8936 li
1504.89 70.6338 li
1504.51 78.3936 li
1503.05 86.0225 li
1500.54 93.3838 li
1497.02 100.304 li
1492.57 106.673 li
1487.27 112.362 li
1481.23 117.243 li
1474.57 121.243 li
1467.41 124.263 li
1459.9 126.253 li
1452.18 127.173 li
1451.65 127.253 li
1451.14 127.433 li
1450.68 127.704 li
1450.27 128.054 li
1449.94 128.474 li
1449.69 128.954 li
1449.54 129.474 li
1449.49 130.003 li
1449.49 136.054 li
1449.54 136.613 li
1449.7 137.145 li
1449.97 137.635 li
1450.32 138.064 li
1450.75 138.414 li
1451.24 138.674 li
1451.77 138.834 li
1452.32 138.895 li
1557.61 138.894 li
1558.71 138.782 li
1559.78 138.464 li
1560.76 137.933 li
1561.62 137.233 li
1562.32 136.374 li
1562.85 135.394 li
1563.17 134.333 li
1563.28 133.224 li
1563.28 97.4287 li
@
1563.28 94.5938 mo
1563.28 69.9355 li
@
1578.68 228.753 mo
1577.12 229.062 li
1575.78 229.952 li
1574.89 231.286 li
1574.57 232.86 li
1574.89 234.429 li
1575.78 235.761 li
1577.12 236.659 li
1578.68 236.97 li
1580.26 236.659 li
1581.59 235.761 li
1582.48 234.429 li
1582.8 232.86 li
1582.48 231.286 li
1581.59 229.952 li
1580.26 229.062 li
1578.68 228.753 li
cp
@
1578.68 168.938 mo
1580.26 168.62 li
1581.59 167.731 li
1582.48 166.396 li
1582.8 164.831 li
1582.48 163.255 li
1581.59 161.921 li
1580.26 161.032 li
1578.68 160.714 li
1577.12 161.032 li
1575.78 161.921 li
1574.89 163.255 li
1574.57 164.831 li
1574.89 166.396 li
1575.78 167.731 li
1577.12 168.62 li
1578.68 168.938 li
cp
@
1569.47 186.569 mo
1569.47 211.229 li
@
1569.47 214.063 mo
1569.47 241.358 li
1569.74 244.13 li
1570.55 246.778 li
1571.86 249.239 li
1573.62 251.38 li
1575.77 253.149 li
1578.22 254.458 li
1580.88 255.259 li
1583.65 255.528 li
1588.47 255.528 li
1588.47 147.94 li
1588.33 146.71 li
1587.94 145.552 li
1587.3 144.501 li
1586.46 143.61 li
1585.44 142.921 li
1584.29 142.472 li
1583.08 142.271 li
1581.28 142.351 li
1578.88 142.972 li
1576.62 144.011 li
1574.58 145.421 li
1572.82 147.171 li
1571.39 149.2 li
1570.34 151.45 li
1569.69 153.851 li
1569.47 156.321 li
1569.47 183.735 li
@
1612.46 228.862 mo
1610.89 229.181 li
1609.56 230.071 li
1608.66 231.403 li
1608.35 232.97 li
1608.66 234.546 li
1609.56 235.88 li
1610.89 236.769 li
1612.46 237.089 li
1614.03 236.769 li
1615.37 235.88 li
1616.26 234.546 li
1616.57 232.97 li
1616.26 231.403 li
1615.37 230.071 li
1614.03 229.181 li
1612.46 228.862 li
cp
@
1612.46 169.048 mo
1614.03 168.737 li
1615.37 167.849 li
1616.26 166.517 li
1616.57 164.938 li
1616.26 163.374 li
1615.37 162.04 li
1614.03 161.14 li
1612.46 160.831 li
1610.89 161.14 li
1609.56 162.04 li
1608.66 163.374 li
1608.35 164.938 li
1608.66 166.517 li
1609.56 167.849 li
1610.89 168.737 li
1612.46 169.048 li
cp
@
1603.25 185.679 mo
1603.25 210.337 li
@
1603.25 213.173 mo
1603.25 241.479 li
1603.47 243.948 li
1604.11 246.349 li
1605.17 248.599 li
1606.6 250.63 li
1608.36 252.38 li
1610.4 253.788 li
1612.66 254.829 li
1615.06 255.448 li
1616.86 255.528 li
1618.06 255.329 li
1619.22 254.88 li
1620.23 254.188 li
1621.07 253.3 li
1621.72 252.249 li
1622.11 251.089 li
1622.24 249.858 li
1622.24 142.271 li
1617.42 142.271 li
1614.66 142.54 li
1612 143.341 li
1609.55 144.651 li
1607.4 146.419 li
1605.64 148.56 li
1604.33 151.019 li
1603.52 153.669 li
1603.25 156.438 li
1603.25 182.843 li
@
1246.3 372.151 mo
1243.17 372.151 1240.63 369.612 1240.63 366.481 cv
1240.63 5.81934 li
1240.63 2.68848 1243.17 .150391 1246.3 .150391 cv
1641.96 .150391 li
1645.09 .150391 1647.63 2.68848 1647.63 5.81934 cv
1647.63 366.481 li
1647.63 369.612 1645.09 372.151 1641.96 372.151 cv
1246.3 372.151 li
cp
@
1266.35 325.095 mo
1266.35 177.44 li
.980392 .0588235 .0470588 rgb
@
1279.53 167.624 mo
1279.22 166.058 li
1278.32 164.724 li
1277 163.835 li
1275.42 163.517 li
1273.85 163.835 li
1272.51 164.724 li
1271.62 166.058 li
1271.31 167.624 li
1271.62 169.198 li
1272.51 170.534 li
1273.85 171.423 li
1275.42 171.741 li
1277 171.423 li
1278.32 170.534 li
1279.22 169.198 li
1279.53 167.624 li
cp
@
1271.31 314.464 mo
1271.62 316.038 li
1272.51 317.373 li
1273.85 318.263 li
1275.42 318.572 li
1277 318.263 li
1278.32 317.373 li
1279.22 316.038 li
1279.53 314.464 li
1279.22 312.887 li
1278.32 311.554 li
1277 310.665 li
1275.42 310.355 li
1273.85 310.665 li
1272.51 311.554 li
1271.62 312.887 li
1271.31 314.464 li
cp
@
1266.35 327.079 mo
1266.35 352.503 li
1280.12 352.503 li
1281.23 352.394 li
1282.29 352.073 li
1283.27 351.554 li
1284.13 350.843 li
1284.84 349.983 li
1285.36 349.003 li
1285.68 347.944 li
1285.79 346.833 li
1285.79 158.554 li
1274.85 158.554 li
1273.19 158.724 li
1271.6 159.204 li
1270.13 159.993 li
1268.84 161.044 li
1267.78 162.333 li
1266.99 163.804 li
1266.51 165.403 li
1266.35 167.063 li
1266.35 175.456 li
@
1311.38 343.434 mo
1311.68 345.009 li
1312.57 346.343 li
1313.91 347.232 li
1315.48 347.542 li
1317.06 347.232 li
1318.39 346.343 li
1319.28 345.009 li
1319.59 343.434 li
1319.28 341.856 li
1318.39 340.524 li
1317.06 339.635 li
1315.48 339.325 li
1313.91 339.635 li
1312.57 340.524 li
1311.68 341.856 li
1311.38 343.434 li
cp
@
1297.9 344.501 mo
1297.9 346.832 li
1298.01 347.943 li
1298.34 349.004 li
1298.86 349.982 li
1299.56 350.844 li
1300.42 351.543 li
1301.4 352.072 li
1302.47 352.393 li
1303.57 352.504 li
1325.12 352.504 li
1325.12 164.223 li
1325.01 163.123 li
1324.68 162.053 li
1324.16 161.072 li
1323.46 160.213 li
1322.6 159.514 li
1321.62 158.982 li
1320.55 158.662 li
1319.45 158.553 li
1306.41 158.553 li
1306.41 168.937 li
@
1319.59 196.594 mo
1319.28 195.026 li
1318.39 193.693 li
1317.06 192.805 li
1315.48 192.485 li
1313.91 192.805 li
1312.57 193.693 li
1311.68 195.026 li
1311.38 196.594 li
1311.68 198.168 li
1312.57 199.503 li
1313.91 200.393 li
1315.48 200.711 li
1317.06 200.393 li
1318.39 199.503 li
1319.28 198.168 li
1319.59 196.594 li
cp
@
1297.9 342.517 mo
1297.9 335.492 li
1305.84 335.492 li
1305.84 258.963 li
1297.9 258.963 li
1297.9 252.344 li
1297.92 251.893 li
1297.98 251.434 li
1298.07 250.992 li
1298.19 250.553 li
1298.36 250.123 li
1298.55 249.713 li
1298.78 249.322 li
1299.04 248.943 li
1305.27 240.633 li
1305.53 240.254 li
1305.76 239.863 li
1305.96 239.443 li
1306.12 239.023 li
1306.24 238.582 li
1306.33 238.133 li
1306.39 237.684 li
1306.41 237.223 li
1306.41 170.921 li
@
1375.97 167.253 mo
1523.62 167.253 li
@
1533.44 180.431 mo
1535 180.122 li
1536.34 179.224 li
1537.23 177.897 li
1537.55 176.323 li
1537.23 174.747 li
1536.34 173.413 li
1535 172.522 li
1533.44 172.214 li
1531.86 172.522 li
1530.53 173.413 li
1529.64 174.747 li
1529.32 176.323 li
1529.64 177.897 li
1530.53 179.224 li
1531.86 180.122 li
1533.44 180.431 li
cp
@
1386.6 172.214 mo
1385.02 172.522 li
1383.69 173.413 li
1382.8 174.747 li
1382.49 176.323 li
1382.8 177.897 li
1383.69 179.224 li
1385.02 180.122 li
1386.6 180.431 li
1388.17 180.122 li
1389.51 179.224 li
1390.4 177.897 li
1390.71 176.323 li
1390.4 174.747 li
1389.51 173.413 li
1388.17 172.522 li
1386.6 172.214 li
cp
@
1373.98 167.253 mo
1348.56 167.253 li
1348.56 181.019 li
1348.67 182.13 li
1348.99 183.188 li
1349.51 184.169 li
1350.22 185.03 li
1351.08 185.739 li
1352.06 186.259 li
1353.12 186.579 li
1354.23 186.688 li
1542.51 186.688 li
1542.51 175.753 li
1542.34 174.093 li
1541.86 172.503 li
1541.07 171.032 li
1540.02 169.743 li
1538.73 168.683 li
1537.26 167.892 li
1535.66 167.413 li
1534 167.253 li
1525.61 167.253 li
@
1357.63 212.276 mo
1356.05 212.585 li
1354.72 213.476 li
1353.83 214.81 li
1353.52 216.384 li
1353.83 217.96 li
1354.72 219.294 li
1356.05 220.183 li
1357.63 220.493 li
1359.21 220.183 li
1360.54 219.294 li
1361.43 217.96 li
1361.74 216.384 li
1361.43 214.81 li
1360.54 213.476 li
1359.21 212.585 li
1357.63 212.276 li
cp
@
1356.56 198.804 mo
1354.23 198.804 li
1353.12 198.915 li
1352.06 199.245 li
1351.08 199.765 li
1350.22 200.464 li
1349.52 201.325 li
1348.99 202.304 li
1348.67 203.374 li
1348.56 204.474 li
1348.56 226.022 li
1536.84 226.022 li
1537.94 225.913 li
1539.01 225.583 li
1539.99 225.062 li
1540.85 224.362 li
1541.55 223.503 li
1542.08 222.522 li
1542.4 221.452 li
1542.51 220.353 li
1542.51 207.313 li
1532.12 207.313 li
@
1504.47 220.493 mo
1506.04 220.183 li
1507.37 219.294 li
1508.26 217.96 li
1508.58 216.384 li
1508.26 214.81 li
1507.37 213.476 li
1506.04 212.585 li
1504.47 212.276 li
1502.89 212.585 li
1501.56 213.476 li
1500.67 214.81 li
1500.35 216.384 li
1500.67 217.96 li
1501.56 219.294 li
1502.89 220.183 li
1504.47 220.493 li
cp
@
1358.55 198.804 mo
1365.57 198.804 li
1365.57 206.745 li
1442.1 206.745 li
1442.1 198.804 li
1448.72 198.804 li
1449.17 198.825 li
1449.63 198.884 li
1450.07 198.974 li
1450.51 199.095 li
1450.94 199.265 li
1451.35 199.454 li
1451.74 199.685 li
1452.12 199.944 li
1460.43 206.175 li
1460.81 206.435 li
1461.2 206.665 li
1461.62 206.864 li
1462.04 207.024 li
1462.48 207.144 li
1462.93 207.235 li
1463.38 207.294 li
1463.84 207.313 li
1530.14 207.313 li
@
1392.73 587.582 mo
1393.8 587.902 li
1394.9 588.013 li
1501.86 588.013 li
1502.97 587.902 li
1504.03 587.582 li
1505.01 587.053 li
1505.87 586.353 li
1506.58 585.492 li
1507.1 584.513 li
1507.43 583.442 li
1507.54 582.343 li
1507.54 493.133 li
1507.43 492.032 li
1507.1 490.963 li
1506.58 489.982 li
1505.87 489.133 li
1505.01 488.423 li
1504.03 487.902 li
1502.97 487.572 li
1501.86 487.473 li
1394.9 487.473 li
1393.8 487.572 li
1392.73 487.902 li
1391.75 488.423 li
1390.89 489.133 li
1390.19 489.982 li
1389.67 490.963 li
1389.34 492.032 li
1389.23 493.133 li
1389.23 582.343 li
1389.34 583.442 li
1389.67 584.513 li
1390.19 585.492 li
1390.89 586.353 li
1391.75 587.053 li
1392.73 587.582 li
cp
1370.92 473.292 mo
1372.5 472.982 li
1373.83 472.082 li
1374.72 470.752 li
1375.04 469.183 li
1374.72 467.603 li
1373.83 466.272 li
1372.5 465.383 li
1370.92 465.072 li
1369.36 465.383 li
1368.03 466.272 li
1368.02 466.272 li
1367.13 467.603 li
1366.81 469.183 li
1367.13 470.752 li
1368.02 472.082 li
1368.03 472.082 li
1369.36 472.982 li
1370.92 473.292 li
cp
1370.92 566.272 mo
1372.5 565.952 li
1373.83 565.063 li
1374.72 563.732 li
1374.72 563.723 li
1375.04 562.152 li
1374.72 560.582 li
1373.83 559.252 li
1372.5 558.362 li
1370.92 558.042 li
1369.36 558.362 li
1368.03 559.252 li
1368.02 559.252 li
1367.13 560.582 li
1366.81 562.152 li
1367.13 563.732 li
1368.02 565.063 li
1368.03 565.063 li
1369.36 565.952 li
1370.92 566.272 li
cp
1370.92 713.103 mo
1372.5 712.792 li
1373.83 711.902 li
1374.72 710.563 li
1375.04 708.992 li
1374.72 707.412 li
1373.83 706.082 li
1372.5 705.192 li
1370.92 704.883 li
1369.36 705.192 li
1368.03 706.082 li
1368.02 706.082 li
1367.13 707.412 li
1366.81 708.992 li
1367.13 710.563 li
1368.02 711.902 li
1368.03 711.902 li
1369.36 712.792 li
1370.92 713.103 li
cp
1534.91 465.763 mo
1534.91 709.563 li
1534.75 711.223 li
1534.27 712.813 li
1533.48 714.282 li
1532.42 715.572 li
1531.13 716.633 li
1529.66 717.412 li
1528.07 717.902 li
1526.41 718.063 li
1359.02 718.063 li
1357.91 717.952 li
1356.85 717.633 li
1355.87 717.112 li
1355.01 716.402 li
1354.3 715.542 li
1353.79 714.563 li
1353.46 713.502 li
1353.35 712.393 li
1353.35 617.902 li
1353.37 617.452 li
1353.42 616.992 li
1353.51 616.553 li
1353.64 616.112 li
1353.8 615.683 li
1354 615.272 li
1354.22 614.883 li
1354.48 614.502 li
1360.72 606.192 li
1360.98 605.813 li
1361.21 605.423 li
1361.41 605.002 li
1361.56 604.582 li
1361.7 604.143 li
1361.79 603.692 li
1361.83 603.242 li
1361.85 602.782 li
1361.85 465.763 li
1361.96 464.652 li
1362.29 463.593 li
1362.81 462.612 li
1363.51 461.752 li
1364.37 461.042 li
1365.35 460.522 li
1366.42 460.192 li
1367.52 460.093 li
1529.24 460.093 li
1530.35 460.192 li
1531.41 460.522 li
1532.39 461.042 li
1533.25 461.752 li
1533.96 462.612 li
1534.48 463.593 li
1534.8 464.652 li
1534.91 465.763 li
cp
1525.84 473.292 mo
1527.42 472.982 li
1528.75 472.082 li
1529.64 470.752 li
1529.95 469.183 li
1529.64 467.603 li
1528.75 466.272 li
1527.42 465.383 li
1525.84 465.072 li
1524.28 465.383 li
1522.95 466.272 li
1522.94 466.272 li
1522.04 467.603 li
1521.73 469.183 li
1522.04 470.752 li
1522.94 472.082 li
1522.95 472.082 li
1524.28 472.982 li
1525.84 473.292 li
cp
1525.84 566.272 mo
1527.42 565.952 li
1528.75 565.063 li
1529.64 563.732 li
1529.64 563.723 li
1529.95 562.152 li
1529.64 560.582 li
1528.75 559.252 li
1527.42 558.362 li
1525.84 558.042 li
1524.28 558.362 li
1522.95 559.252 li
1522.94 559.252 li
1522.04 560.582 li
1521.73 562.152 li
1522.04 563.732 li
1522.94 565.063 li
1522.95 565.063 li
1524.28 565.952 li
1525.84 566.272 li
cp
1525.84 713.103 mo
1527.42 712.792 li
1528.75 711.902 li
1529.64 710.563 li
1529.95 708.992 li
1529.64 707.412 li
1528.75 706.082 li
1527.42 705.192 li
1525.84 704.883 li
1524.28 705.192 li
1522.95 706.082 li
1522.94 706.082 li
1522.04 707.412 li
1521.73 708.992 li
1522.04 710.563 li
1522.94 711.902 li
1522.95 711.902 li
1524.28 712.792 li
1525.84 713.103 li
cp
1 .0313726 0 rgb
@
1 lc
1 lj
1066.89 92.4873 mo
1064.84 95.5742 li
1066.89 92.4873 li
1064.84 89.4429 li
1066.89 92.4873 li
1068.91 89.4429 li
1066.89 92.4873 li
1068.94 95.5317 li
1066.89 92.4873 li
cp
0 0 1 rgb
@
1061.36 89.4429 mo
1061.36 89.7036 1061.41 89.918 1061.52 90.085 cv
1061.64 90.2524 1061.77 90.3853 1061.92 90.4844 cv
1062.07 90.584 1062.23 90.6548 1062.4 90.6973 cv
1062.56 90.7397 1062.7 90.7637 1062.81 90.7695 cv
1062.7 90.7637 1062.56 90.7397 1062.4 90.6973 cv
1062.23 90.6548 1062.07 90.584 1061.92 90.4844 cv
1061.77 90.3853 1061.64 90.2524 1061.52 90.085 cv
1061.41 89.918 1061.36 89.7036 1061.36 89.4429 cv
1061.36 95.5742 li
1061.36 89.4429 li
cp
@
891.887 32.2588 mo
887.499 38.3901 li
892.151 38.3901 li
887.499 38.3901 li
891.887 32.2588 li
887.668 32.2588 li
891.887 32.2588 li
cp
@
894.208 36.8511 mo
894.208 37.0776 894.248 37.2861 894.327 37.4761 cv
894.407 37.666 894.522 37.8291 894.676 37.9648 cv
894.829 38.1011 895.012 38.2061 895.229 38.2798 cv
895.444 38.3535 895.688 38.3901 895.959 38.3901 cv
896.232 38.3901 896.48 38.3604 896.704 38.3008 cv
896.928 38.2412 897.121 38.1494 897.282 38.0244 cv
897.444 37.8999 897.57 37.7383 897.661 37.5396 cv
897.75 37.3413 897.797 37.1006 897.797 36.8169 cv
897.797 36.25 897.625 35.8208 897.282 35.5283 cv
896.939 35.2368 896.397 35.0908 895.654 35.0908 cv
896.022 35.0908 896.331 35.0566 896.581 34.9888 cv
896.831 34.9204 897.03 34.8228 897.18 34.6953 cv
897.331 34.5674 897.438 34.4175 897.503 34.2446 cv
897.569 34.0718 897.601 33.8828 897.601 33.6792 cv
897.601 33.4751 897.573 33.2852 897.516 33.1094 cv
897.459 32.9336 897.37 32.7788 897.249 32.6455 cv
897.125 32.5127 896.964 32.4092 896.763 32.3354 cv
896.562 32.2617 896.317 32.2246 896.028 32.2246 cv
895.739 32.2246 895.488 32.2671 895.276 32.3525 cv
895.063 32.4375 894.887 32.5493 894.749 32.6885 cv
894.609 32.8271 894.504 32.9902 894.433 33.1772 cv
894.362 33.3643 894.327 33.5601 894.327 33.7642 cv
894.327 33.5601 894.362 33.3643 894.433 33.1772 cv
894.504 32.9902 894.609 32.8271 894.749 32.6885 cv
894.887 32.5493 895.063 32.4375 895.276 32.3525 cv
895.488 32.2671 895.739 32.2246 896.028 32.2246 cv
896.317 32.2246 896.562 32.2617 896.763 32.3354 cv
896.964 32.4092 897.125 32.5127 897.249 32.6455 cv
897.37 32.7788 897.459 32.9336 897.516 33.1094 cv
897.573 33.2852 897.601 33.4751 897.601 33.6792 cv
897.601 33.8828 897.569 34.0718 897.503 34.2446 cv
897.438 34.4175 897.331 34.5674 897.18 34.6953 cv
897.03 34.8228 896.831 34.9204 896.581 34.9888 cv
896.331 35.0566 896.022 35.0908 895.654 35.0908 cv
896.397 35.0908 896.939 35.2368 897.282 35.5283 cv
897.625 35.8208 897.797 36.25 897.797 36.8169 cv
897.797 37.1006 897.75 37.3413 897.661 37.5396 cv
897.57 37.7383 897.444 37.8999 897.282 38.0244 cv
897.121 38.1494 896.928 38.2412 896.704 38.3008 cv
896.48 38.3604 896.232 38.3901 895.959 38.3901 cv
895.688 38.3901 895.444 38.3535 895.229 38.2798 cv
895.012 38.2061 894.829 38.1011 894.676 37.9648 cv
894.522 37.8291 894.407 37.666 894.327 37.4761 cv
894.248 37.2861 894.208 37.0776 894.208 36.8511 cv
cp
@
892.932 534.671 mo
897.321 528.539 li
892.668 528.539 li
897.321 528.539 li
892.932 534.671 li
897.151 534.671 li
892.932 534.671 li
cp
@
889.165 534.671 mo
889.165 534.409 889.221 534.195 889.331 534.028 cv
889.442 533.86 889.573 533.728 889.727 533.629 cv
889.879 533.529 890.038 533.458 890.203 533.416 cv
890.368 533.374 890.503 533.35 890.611 533.344 cv
890.503 533.35 890.368 533.374 890.203 533.416 cv
890.038 533.458 889.879 533.529 889.727 533.629 cv
889.573 533.728 889.442 533.86 889.331 534.028 cv
889.221 534.195 889.165 534.409 889.165 534.671 cv
889.165 528.539 li
889.165 534.671 li
cp
@
389.079 156.165 mo
391.128 159.251 li
389.079 156.165 li
391.128 153.12 li
389.079 156.165 li
387.055 153.12 li
389.079 156.165 li
387.021 159.209 li
389.079 156.165 li
cp
@
394.054 153.12 mo
393.373 156.165 li
393.492 156.063 393.605 155.97 393.713 155.888 cv
393.821 155.806 393.936 155.738 394.058 155.684 cv
394.18 155.63 394.316 155.588 394.466 155.557 cv
394.616 155.525 394.796 155.51 395.006 155.51 cv
395.216 155.51 395.427 155.545 395.64 155.616 cv
395.852 155.687 396.045 155.796 396.218 155.943 cv
396.391 156.091 396.531 156.275 396.639 156.496 cv
396.747 156.717 396.8 156.975 396.8 157.27 cv
396.8 157.355 396.791 157.464 396.771 157.598 cv
396.75 157.731 396.717 157.873 396.668 158.022 cv
396.62 158.173 396.554 158.322 396.469 158.469 cv
396.384 158.617 396.274 158.751 396.141 158.873 cv
396.008 158.995 395.846 159.093 395.657 159.167 cv
395.466 159.24 395.244 159.277 394.989 159.277 cv
394.609 159.277 394.304 159.229 394.075 159.132 cv
393.845 159.036 393.667 158.917 393.539 158.775 cv
393.412 158.634 393.322 158.483 393.271 158.325 cv
393.22 158.166 393.183 158.024 393.161 157.899 cv
393.183 158.024 393.22 158.166 393.271 158.325 cv
393.322 158.483 393.412 158.634 393.539 158.775 cv
393.667 158.917 393.845 159.036 394.075 159.132 cv
394.304 159.229 394.609 159.277 394.989 159.277 cv
395.244 159.277 395.466 159.24 395.657 159.167 cv
395.846 159.093 396.008 158.995 396.141 158.873 cv
396.274 158.751 396.384 158.617 396.469 158.469 cv
396.554 158.322 396.62 158.173 396.668 158.022 cv
396.717 157.873 396.75 157.731 396.771 157.598 cv
396.791 157.464 396.8 157.355 396.8 157.27 cv
396.8 156.975 396.747 156.717 396.639 156.496 cv
396.531 156.275 396.391 156.091 396.218 155.943 cv
396.045 155.796 395.852 155.687 395.64 155.616 cv
395.427 155.545 395.216 155.51 395.006 155.51 cv
394.796 155.51 394.616 155.525 394.466 155.557 cv
394.316 155.588 394.18 155.63 394.058 155.684 cv
393.936 155.738 393.821 155.806 393.713 155.888 cv
393.605 155.97 393.492 156.063 393.373 156.165 cv
394.054 153.12 li
396.604 153.12 li
394.054 153.12 li
cp
@
401.239 153.12 mo
403.68 159.251 li
401.239 153.12 li
398.807 159.251 li
401.239 153.12 li
cp
@
723.158 281.186 mo
726.108 281.186 li
729.289 278.958 li
726.108 281.186 li
729.289 283.414 li
726.108 281.186 li
723.158 281.186 li
cp
@
729.289 288.354 mo
724.791 285.463 li
724.791 289.443 li
724.791 285.463 li
729.289 288.354 li
723.158 288.354 li
729.289 288.354 li
cp
@
729.289 293.899 mo
723.158 296.339 li
729.289 293.899 li
723.158 291.467 li
729.289 293.899 li
cp
@
723.158 390.534 mo
726.108 390.534 li
729.289 388.306 li
726.108 390.534 li
729.289 392.762 li
726.108 390.534 li
723.158 390.534 li
cp
@
724.697 394.812 mo
724.47 394.812 724.262 394.851 724.072 394.931 cv
723.882 395.009 723.719 395.126 723.583 395.278 cv
723.447 395.432 723.342 395.616 723.268 395.831 cv
723.194 396.047 723.158 396.29 723.158 396.563 cv
723.158 396.835 723.188 397.083 723.247 397.308 cv
723.307 397.53 723.398 397.724 723.523 397.886 cv
723.648 398.047 723.81 398.173 724.008 398.264 cv
724.207 398.354 724.447 398.399 724.731 398.399 cv
725.298 398.399 725.727 398.228 726.02 397.886 cv
726.311 397.542 726.457 396.999 726.457 396.257 cv
726.457 396.625 726.491 396.935 726.559 397.184 cv
726.627 397.433 726.725 397.633 726.853 397.783 cv
726.98 397.933 727.13 398.041 727.303 398.106 cv
727.476 398.171 727.665 398.204 727.869 398.204 cv
728.073 398.204 728.263 398.176 728.438 398.119 cv
728.614 398.063 728.769 397.974 728.902 397.851 cv
729.035 397.729 729.139 397.567 729.212 397.366 cv
729.286 397.165 729.323 396.92 729.323 396.631 cv
729.323 396.342 729.281 396.091 729.195 395.878 cv
729.11 395.665 728.999 395.489 728.859 395.351 cv
728.721 395.212 728.558 395.107 728.371 395.036 cv
728.184 394.966 727.988 394.931 727.784 394.931 cv
727.988 394.931 728.184 394.966 728.371 395.036 cv
728.558 395.107 728.721 395.212 728.859 395.351 cv
728.999 395.489 729.11 395.665 729.195 395.878 cv
729.281 396.091 729.323 396.342 729.323 396.631 cv
729.323 396.92 729.286 397.165 729.212 397.366 cv
729.139 397.567 729.035 397.729 728.902 397.851 cv
728.769 397.974 728.614 398.063 728.438 398.119 cv
728.263 398.176 728.073 398.204 727.869 398.204 cv
727.665 398.204 727.476 398.171 727.303 398.106 cv
727.13 398.041 726.98 397.933 726.853 397.783 cv
726.725 397.633 726.627 397.433 726.559 397.184 cv
726.491 396.935 726.457 396.625 726.457 396.257 cv
726.457 396.999 726.311 397.542 726.02 397.886 cv
725.727 398.228 725.298 398.399 724.731 398.399 cv
724.447 398.399 724.207 398.354 724.008 398.264 cv
723.81 398.173 723.648 398.047 723.523 397.886 cv
723.398 397.724 723.307 397.53 723.247 397.308 cv
723.188 397.083 723.158 396.835 723.158 396.563 cv
723.158 396.29 723.194 396.047 723.268 395.831 cv
723.342 395.616 723.447 395.432 723.583 395.278 cv
723.719 395.126 723.882 395.009 724.072 394.931 cv
724.262 394.851 724.47 394.812 724.697 394.812 cv
cp
@
726.313 401.325 mo
726.313 403.681 li
726.313 403.987 726.355 404.249 726.44 404.468 cv
726.525 404.686 726.637 404.862 726.776 404.999 cv
726.915 405.135 727.072 405.233 727.248 405.296 cv
727.424 405.358 727.605 405.388 727.792 405.382 cv
727.979 405.37 728.162 405.331 728.341 405.263 cv
728.52 405.194 728.678 405.091 728.817 404.952 cv
728.956 404.813 729.069 404.64 729.157 404.433 cv
729.245 404.226 729.289 403.981 729.289 403.698 cv
729.289 401.325 li
723.158 401.325 li
723.158 403.937 li
723.158 404.18 723.193 404.406 723.264 404.616 cv
723.335 404.825 723.437 405.009 723.57 405.165 cv
723.703 405.32 723.865 405.444 724.055 405.534 cv
724.245 405.625 724.461 405.671 724.706 405.671 cv
724.949 405.665 725.169 405.612 725.364 405.513 cv
725.56 405.414 725.729 405.278 725.871 405.104 cv
726.012 404.933 726.121 404.724 726.198 404.479 cv
726.274 404.236 726.313 403.97 726.313 403.681 cv
726.313 403.97 726.274 404.236 726.198 404.479 cv
726.121 404.724 726.012 404.933 725.871 405.104 cv
725.729 405.278 725.56 405.414 725.364 405.513 cv
725.169 405.612 724.949 405.665 724.706 405.671 cv
724.461 405.671 724.245 405.625 724.055 405.534 cv
723.865 405.444 723.703 405.32 723.57 405.165 cv
723.437 405.009 723.335 404.825 723.264 404.616 cv
723.193 404.406 723.158 404.18 723.158 403.937 cv
723.158 401.325 li
729.289 401.325 li
729.289 403.698 li
729.289 403.981 729.245 404.226 729.157 404.433 cv
729.069 404.64 728.956 404.813 728.817 404.952 cv
728.678 405.091 728.52 405.194 728.341 405.263 cv
728.162 405.331 727.979 405.37 727.792 405.382 cv
727.605 405.388 727.424 405.358 727.248 405.296 cv
727.072 405.233 726.915 405.135 726.776 404.999 cv
726.637 404.862 726.525 404.686 726.44 404.468 cv
726.355 404.249 726.313 403.987 726.313 403.681 cv
726.313 401.325 li
cp
@
687.536 390.504 mo
690.486 390.504 li
693.667 388.276 li
690.486 390.504 li
693.667 392.731 li
690.486 390.504 li
687.536 390.504 li
cp
@
687.536 398.429 mo
687.536 394.781 li
687.847 394.786 688.11 394.831 688.322 394.913 cv
688.535 394.995 688.721 395.102 688.879 395.231 cv
689.038 395.362 689.177 395.511 689.296 395.679 cv
689.415 395.846 689.534 396.021 689.653 396.201 cv
690.623 397.655 li
690.725 397.809 690.838 397.925 690.963 398.005 cv
691.087 398.083 691.218 398.142 691.354 398.179 cv
691.49 398.216 691.63 398.237 691.775 398.242 cv
691.919 398.248 692.063 398.251 692.204 398.251 cv
692.346 398.251 692.505 398.226 692.681 398.175 cv
692.856 398.123 693.021 398.038 693.174 397.919 cv
693.327 397.8 693.456 397.64 693.561 397.438 cv
693.666 397.237 693.718 396.986 693.718 396.687 cv
693.718 396.38 693.667 396.122 693.565 395.912 cv
693.463 395.702 693.328 395.53 693.161 395.397 cv
692.994 395.265 692.805 395.168 692.596 395.108 cv
692.386 395.05 692.176 395.02 691.966 395.02 cv
692.176 395.02 692.386 395.05 692.596 395.108 cv
692.805 395.168 692.994 395.265 693.161 395.397 cv
693.328 395.53 693.463 395.702 693.565 395.912 cv
693.667 396.122 693.718 396.38 693.718 396.687 cv
693.718 396.986 693.666 397.237 693.561 397.438 cv
693.456 397.64 693.327 397.8 693.174 397.919 cv
693.021 398.038 692.856 398.123 692.681 398.175 cv
692.505 398.226 692.346 398.251 692.204 398.251 cv
692.063 398.251 691.919 398.248 691.775 398.242 cv
691.63 398.237 691.49 398.216 691.354 398.179 cv
691.218 398.142 691.087 398.083 690.963 398.005 cv
690.838 397.925 690.725 397.809 690.623 397.655 cv
689.653 396.201 li
689.534 396.021 689.415 395.846 689.296 395.679 cv
689.177 395.511 689.038 395.362 688.879 395.231 cv
688.721 395.102 688.535 394.995 688.322 394.913 cv
688.11 394.831 687.847 394.786 687.536 394.781 cv
687.536 398.429 li
cp
@
690.69 401.354 mo
690.69 403.71 li
690.69 404.017 690.733 404.278 690.818 404.497 cv
690.903 404.716 691.015 404.893 691.154 405.028 cv
691.293 405.165 691.45 405.264 691.626 405.326 cv
691.802 405.389 691.983 405.417 692.17 405.411 cv
692.357 405.399 692.54 405.36 692.719 405.292 cv
692.897 405.224 693.056 405.12 693.195 404.981 cv
693.334 404.843 693.447 404.67 693.535 404.463 cv
693.623 404.256 693.667 404.011 693.667 403.728 cv
693.667 401.354 li
687.536 401.354 li
687.536 403.966 li
687.536 404.21 687.571 404.437 687.642 404.646 cv
687.713 404.855 687.815 405.038 687.948 405.194 cv
688.081 405.351 688.243 405.474 688.433 405.564 cv
688.623 405.655 688.839 405.7 689.083 405.7 cv
689.327 405.694 689.547 405.642 689.742 405.543 cv
689.938 405.444 690.106 405.308 690.249 405.135 cv
690.39 404.962 690.499 404.753 690.576 404.51 cv
690.652 404.267 690.69 403.999 690.69 403.71 cv
690.69 403.999 690.652 404.267 690.576 404.51 cv
690.499 404.753 690.39 404.962 690.249 405.135 cv
690.106 405.308 689.938 405.444 689.742 405.543 cv
689.547 405.642 689.327 405.694 689.083 405.7 cv
688.839 405.7 688.623 405.655 688.433 405.564 cv
688.243 405.474 688.081 405.351 687.948 405.194 cv
687.815 405.038 687.713 404.855 687.642 404.646 cv
687.571 404.437 687.536 404.21 687.536 403.966 cv
687.536 401.354 li
693.667 401.354 li
693.667 403.728 li
693.667 404.011 693.623 404.256 693.535 404.463 cv
693.447 404.67 693.334 404.843 693.195 404.981 cv
693.056 405.12 692.897 405.224 692.719 405.292 cv
692.54 405.36 692.357 405.399 692.17 405.411 cv
691.983 405.417 691.802 405.389 691.626 405.326 cv
691.45 405.264 691.293 405.165 691.154 405.028 cv
691.015 404.893 690.903 404.716 690.818 404.497 cv
690.733 404.278 690.69 404.017 690.69 403.71 cv
690.69 401.354 li
cp
@
343.303 405.025 mo
340.122 402.798 li
343.303 405.025 li
340.122 407.253 li
343.303 405.025 li
346.253 405.025 li
343.303 405.025 li
cp
@
344.714 400.748 mo
344.941 400.748 345.149 400.708 345.339 400.629 cv
345.529 400.55 345.692 400.434 345.828 400.28 cv
345.964 400.128 346.069 399.943 346.143 399.728 cv
346.217 399.513 346.253 399.269 346.253 398.996 cv
346.253 398.724 346.224 398.476 346.164 398.252 cv
346.104 398.028 346.013 397.835 345.888 397.674 cv
345.763 397.513 345.602 397.386 345.403 397.296 cv
345.205 397.205 344.964 397.159 344.68 397.159 cv
344.113 397.159 343.684 397.331 343.392 397.674 cv
343.1 398.017 342.954 398.56 342.954 399.302 cv
342.954 398.935 342.92 398.625 342.852 398.376 cv
342.784 398.126 342.686 397.927 342.559 397.776 cv
342.431 397.626 342.281 397.519 342.108 397.452 cv
341.935 397.388 341.746 397.354 341.542 397.354 cv
341.338 397.354 341.148 397.384 340.973 397.44 cv
340.797 397.497 340.642 397.586 340.509 397.708 cv
340.376 397.83 340.272 397.991 340.199 398.192 cv
340.125 398.394 340.088 398.64 340.088 398.929 cv
340.088 399.218 340.13 399.468 340.216 399.681 cv
340.301 399.894 340.413 400.069 340.552 400.208 cv
340.69 400.347 340.854 400.452 341.041 400.522 cv
341.228 400.594 341.423 400.629 341.627 400.629 cv
341.423 400.629 341.228 400.594 341.041 400.522 cv
340.854 400.452 340.69 400.347 340.552 400.208 cv
340.413 400.069 340.301 399.894 340.216 399.681 cv
340.13 399.468 340.088 399.218 340.088 398.929 cv
340.088 398.64 340.125 398.394 340.199 398.192 cv
340.272 397.991 340.376 397.83 340.509 397.708 cv
340.642 397.586 340.797 397.497 340.973 397.44 cv
341.148 397.384 341.338 397.354 341.542 397.354 cv
341.746 397.354 341.935 397.388 342.108 397.452 cv
342.281 397.519 342.431 397.626 342.559 397.776 cv
342.686 397.927 342.784 398.126 342.852 398.376 cv
342.92 398.625 342.954 398.935 342.954 399.302 cv
342.954 398.56 343.1 398.017 343.392 397.674 cv
343.684 397.331 344.113 397.159 344.68 397.159 cv
344.964 397.159 345.205 397.205 345.403 397.296 cv
345.602 397.386 345.763 397.513 345.888 397.674 cv
346.013 397.835 346.104 398.028 346.164 398.252 cv
346.224 398.476 346.253 398.724 346.253 398.996 cv
346.253 399.269 346.217 399.513 346.143 399.728 cv
346.069 399.943 345.964 400.128 345.828 400.28 cv
345.692 400.434 345.529 400.55 345.339 400.629 cv
345.149 400.708 344.941 400.748 344.714 400.748 cv
cp
@
346.253 395.152 mo
340.122 392.72 li
346.253 390.28 li
340.122 392.72 li
346.253 395.152 li
cp
@
378.183 405.056 mo
375.002 402.827 li
378.183 405.056 li
375.002 407.283 li
378.183 405.056 li
381.133 405.056 li
378.183 405.056 li
cp
@
381.133 397.13 mo
381.133 400.778 li
380.822 400.772 380.559 400.729 380.347 400.646 cv
380.134 400.563 379.948 400.458 379.79 400.327 cv
379.631 400.196 379.492 400.048 379.373 399.881 cv
379.254 399.714 379.135 399.539 379.016 399.358 cv
378.046 397.903 li
377.944 397.751 377.831 397.634 377.706 397.555 cv
377.582 397.476 377.451 397.417 377.315 397.38 cv
377.179 397.344 377.039 397.322 376.894 397.317 cv
376.75 397.312 376.606 397.308 376.465 397.308 cv
376.323 397.308 376.164 397.334 375.988 397.385 cv
375.813 397.437 375.648 397.521 375.495 397.64 cv
375.342 397.759 375.213 397.919 375.108 398.12 cv
375.003 398.321 374.951 398.573 374.951 398.873 cv
374.951 399.179 375.002 399.437 375.104 399.647 cv
375.206 399.856 375.341 400.028 375.508 400.161 cv
375.675 400.294 375.864 400.392 376.073 400.45 cv
376.283 400.51 376.493 400.54 376.703 400.54 cv
376.493 400.54 376.283 400.51 376.073 400.45 cv
375.864 400.392 375.675 400.294 375.508 400.161 cv
375.341 400.028 375.206 399.856 375.104 399.647 cv
375.002 399.437 374.951 399.179 374.951 398.873 cv
374.951 398.573 375.003 398.321 375.108 398.12 cv
375.213 397.919 375.342 397.759 375.495 397.64 cv
375.648 397.521 375.813 397.437 375.988 397.385 cv
376.164 397.334 376.323 397.308 376.465 397.308 cv
376.606 397.308 376.75 397.312 376.894 397.317 cv
377.039 397.322 377.179 397.344 377.315 397.38 cv
377.451 397.417 377.582 397.476 377.706 397.555 cv
377.831 397.634 377.944 397.751 378.046 397.903 cv
379.016 399.358 li
379.135 399.539 379.254 399.714 379.373 399.881 cv
379.492 400.048 379.631 400.196 379.79 400.327 cv
379.948 400.458 380.134 400.563 380.347 400.646 cv
380.559 400.729 380.822 400.772 381.133 400.778 cv
381.133 397.13 li
cp
@
375.002 392.69 mo
381.133 390.25 li
375.002 392.69 li
381.133 395.122 li
375.002 392.69 li
cp
@
890.239 64.3901 mo
892.288 67.4771 li
890.239 64.3901 li
892.288 61.3457 li
890.239 64.3901 li
888.214 61.3457 li
890.239 64.3901 li
888.18 67.4346 li
890.239 64.3901 li
cp
@
894.32 65.938 mo
894.32 66.1646 894.36 66.373 894.439 66.563 cv
894.518 66.7529 894.634 66.916 894.788 67.0518 cv
894.94 67.188 895.125 67.293 895.34 67.3667 cv
895.555 67.4404 895.799 67.4771 896.072 67.4771 cv
896.344 67.4771 896.592 67.4473 896.816 67.3877 cv
897.04 67.3281 897.233 67.2363 897.394 67.1113 cv
897.555 66.9868 897.682 66.8252 897.772 66.6265 cv
897.863 66.4282 897.909 66.1875 897.909 65.9038 cv
897.909 65.3369 897.737 64.9077 897.394 64.6152 cv
897.051 64.3237 896.508 64.1777 895.766 64.1777 cv
896.133 64.1777 896.443 64.1436 896.692 64.0757 cv
896.942 64.0073 897.141 63.9097 897.292 63.7822 cv
897.442 63.6543 897.549 63.5044 897.616 63.3315 cv
897.68 63.1587 897.713 62.9697 897.713 62.7661 cv
897.713 62.562 897.684 62.3721 897.627 62.1963 cv
897.571 62.0205 897.482 61.8657 897.36 61.7324 cv
897.238 61.5996 897.077 61.4961 896.875 61.4224 cv
896.674 61.3486 896.428 61.3115 896.139 61.3115 cv
895.85 61.3115 895.6 61.354 895.387 61.4395 cv
895.174 61.5244 894.999 61.6362 894.86 61.7754 cv
894.721 61.9141 894.616 62.0771 894.545 62.2642 cv
894.474 62.4512 894.439 62.647 894.439 62.8511 cv
894.439 62.647 894.474 62.4512 894.545 62.2642 cv
894.616 62.0771 894.721 61.9141 894.86 61.7754 cv
894.999 61.6362 895.174 61.5244 895.387 61.4395 cv
895.6 61.354 895.85 61.3115 896.139 61.3115 cv
896.428 61.3115 896.674 61.3486 896.875 61.4224 cv
897.077 61.4961 897.238 61.5996 897.36 61.7324 cv
897.482 61.8657 897.571 62.0205 897.627 62.1963 cv
897.684 62.3721 897.713 62.562 897.713 62.7661 cv
897.713 62.9697 897.68 63.1587 897.616 63.3315 cv
897.549 63.5044 897.442 63.6543 897.292 63.7822 cv
897.141 63.9097 896.942 64.0073 896.692 64.0757 cv
896.443 64.1436 896.133 64.1777 895.766 64.1777 cv
896.508 64.1777 897.051 64.3237 897.394 64.6152 cv
897.737 64.9077 897.909 65.3369 897.909 65.9038 cv
897.909 66.1875 897.863 66.4282 897.772 66.6265 cv
897.682 66.8252 897.555 66.9868 897.394 67.1113 cv
897.233 67.2363 897.04 67.3281 896.816 67.3877 cv
896.592 67.4473 896.344 67.4771 896.072 67.4771 cv
895.799 67.4771 895.555 67.4404 895.34 67.3667 cv
895.125 67.293 894.94 67.188 894.788 67.0518 cv
894.634 66.916 894.518 66.7529 894.439 66.563 cv
894.36 66.373 894.32 66.1646 894.32 65.938 cv
cp
@
299.241 76.8091 mo
301.299 73.7646 li
299.275 70.7202 li
301.299 73.7646 li
303.349 70.7202 li
301.299 73.7646 li
303.349 76.8516 li
301.299 73.7646 li
299.241 76.8091 li
cp
@
305.917 74.2495 mo
306.007 74.0225 306.133 73.8286 306.295 73.667 cv
306.457 73.5054 306.648 73.3809 306.869 73.2925 cv
307.09 73.2051 307.328 73.1606 307.583 73.1606 cv
307.838 73.1606 308.08 73.1934 308.306 73.2588 cv
308.533 73.3237 308.731 73.4287 308.901 73.5732 cv
309.072 73.7178 309.206 73.9077 309.305 74.1431 cv
309.404 74.3784 309.454 74.666 309.454 75.0063 cv
309.454 75.3462 309.404 75.6343 309.305 75.8691 cv
309.206 76.1045 309.072 76.2944 308.901 76.439 cv
308.731 76.5835 308.533 76.6885 308.306 76.7539 cv
308.08 76.8188 307.838 76.8516 307.583 76.8516 cv
307.328 76.8516 307.091 76.8076 306.873 76.7197 cv
306.655 76.6318 306.466 76.5073 306.308 76.3457 cv
306.149 76.1841 306.023 75.9897 305.929 75.7632 cv
305.836 75.5361 305.786 75.2842 305.78 75.0063 cv
305.775 74.8247 305.765 74.5908 305.751 74.3047 cv
305.736 74.0186 305.736 73.7163 305.751 73.3989 cv
305.765 73.0815 305.803 72.7627 305.866 72.4424 cv
305.928 72.1221 306.033 71.833 306.18 71.5747 cv
306.328 71.3169 306.529 71.1069 306.784 70.9458 cv
307.039 70.7842 307.365 70.7031 307.762 70.7031 cv
308.085 70.7031 308.347 70.7432 308.548 70.8223 cv
308.75 70.9019 308.909 70.998 309.025 71.1113 cv
309.141 71.2251 309.223 71.3467 309.271 71.4771 cv
309.319 71.6074 309.349 71.7266 309.361 71.8345 cv
309.349 71.7266 309.319 71.6074 309.271 71.4771 cv
309.223 71.3467 309.141 71.2251 309.025 71.1113 cv
308.909 70.998 308.75 70.9019 308.548 70.8223 cv
308.347 70.7432 308.085 70.7031 307.762 70.7031 cv
307.365 70.7031 307.039 70.7842 306.784 70.9458 cv
306.529 71.1069 306.328 71.3169 306.18 71.5747 cv
306.033 71.833 305.928 72.1221 305.866 72.4424 cv
305.803 72.7627 305.765 73.0815 305.751 73.3989 cv
305.736 73.7163 305.736 74.0186 305.751 74.3047 cv
305.765 74.5908 305.775 74.8247 305.78 75.0063 cv
305.786 75.2842 305.836 75.5361 305.929 75.7632 cv
306.023 75.9897 306.149 76.1841 306.308 76.3457 cv
306.466 76.5073 306.655 76.6318 306.873 76.7197 cv
307.091 76.8076 307.328 76.8516 307.583 76.8516 cv
307.838 76.8516 308.08 76.8188 308.306 76.7539 cv
308.533 76.6885 308.731 76.5835 308.901 76.439 cv
309.072 76.2944 309.206 76.1045 309.305 75.8691 cv
309.404 75.6343 309.454 75.3462 309.454 75.0063 cv
309.454 74.666 309.404 74.3784 309.305 74.1431 cv
309.206 73.9077 309.072 73.7178 308.901 73.5732 cv
308.731 73.4287 308.533 73.3237 308.306 73.2588 cv
308.08 73.1934 307.838 73.1606 307.583 73.1606 cv
307.328 73.1606 307.09 73.2051 306.869 73.2925 cv
306.648 73.3809 306.457 73.5054 306.295 73.667 cv
306.133 73.8286 306.007 74.0225 305.917 74.2495 cv
305.826 74.4761 305.78 74.7285 305.78 75.0063 cv
305.78 74.7285 305.826 74.4761 305.917 74.2495 cv
cp
@
536.924 264.271 mo
536.924 267.222 li
539.152 270.403 li
536.924 267.222 li
534.696 270.403 li
536.924 267.222 li
536.924 264.271 li
cp
@
531.201 264.271 mo
531.201 270.403 li
531.201 270.142 531.256 269.928 531.367 269.761 cv
531.477 269.593 531.609 269.46 531.762 269.361 cv
531.915 269.262 532.074 269.191 532.238 269.148 cv
532.403 269.106 532.539 269.082 532.646 269.076 cv
532.539 269.082 532.403 269.106 532.238 269.148 cv
532.074 269.191 531.915 269.262 531.762 269.361 cv
531.609 269.46 531.477 269.593 531.367 269.761 cv
531.256 269.928 531.201 270.142 531.201 270.403 cv
531.201 264.271 li
cp
@
187.331 444.972 mo
189.38 448.059 li
187.331 444.972 li
189.38 441.927 li
187.331 444.972 li
185.307 441.927 li
187.331 444.972 li
185.273 448.017 li
187.331 444.972 li
cp
@
192.518 448.059 mo
192.518 447.826 192.558 447.553 192.637 447.237 cv
192.716 446.923 192.824 446.586 192.96 446.226 cv
193.096 445.866 193.252 445.493 193.428 445.108 cv
193.604 444.722 193.791 444.341 193.989 443.964 cv
194.188 443.587 194.392 443.224 194.602 442.876 cv
194.811 442.526 195.015 442.211 195.214 441.927 cv
191.413 441.927 li
195.214 441.927 li
195.015 442.211 194.811 442.526 194.602 442.876 cv
194.392 443.224 194.188 443.587 193.989 443.964 cv
193.791 444.341 193.604 444.722 193.428 445.108 cv
193.252 445.493 193.096 445.866 192.96 446.226 cv
192.824 446.586 192.716 446.923 192.637 447.237 cv
192.558 447.553 192.518 447.826 192.518 448.059 cv
cp
@
531.643 422.086 mo
531.643 419.136 li
529.415 415.954 li
531.643 419.136 li
533.871 415.954 li
531.643 419.136 li
531.643 422.086 li
cp
@
536.813 415.954 mo
536.132 418.999 li
536.251 418.897 536.365 418.805 536.473 418.723 cv
536.58 418.641 536.695 418.572 536.817 418.519 cv
536.939 418.465 537.075 418.423 537.225 418.392 cv
537.375 418.36 537.556 418.345 537.765 418.345 cv
537.975 418.345 538.186 418.38 538.399 418.45 cv
538.611 418.521 538.804 418.63 538.977 418.778 cv
539.15 418.925 539.29 419.109 539.398 419.331 cv
539.506 419.552 539.56 419.81 539.56 420.104 cv
539.56 420.189 539.55 420.299 539.53 420.433 cv
539.51 420.565 539.476 420.707 539.428 420.856 cv
539.379 421.007 539.313 421.156 539.228 421.304 cv
539.143 421.451 539.034 421.585 538.9 421.708 cv
538.767 421.829 538.605 421.927 538.416 422.001 cv
538.226 422.075 538.003 422.111 537.748 422.111 cv
537.368 422.111 537.063 422.063 536.834 421.967 cv
536.604 421.87 536.426 421.751 536.298 421.61 cv
536.171 421.468 536.082 421.317 536.03 421.159 cv
535.979 421.001 535.942 420.858 535.92 420.733 cv
535.942 420.858 535.979 421.001 536.03 421.159 cv
536.082 421.317 536.171 421.468 536.298 421.61 cv
536.426 421.751 536.604 421.87 536.834 421.967 cv
537.063 422.063 537.368 422.111 537.748 422.111 cv
538.003 422.111 538.226 422.075 538.416 422.001 cv
538.605 421.927 538.767 421.829 538.9 421.708 cv
539.034 421.585 539.143 421.451 539.228 421.304 cv
539.313 421.156 539.379 421.007 539.428 420.856 cv
539.476 420.707 539.51 420.565 539.53 420.433 cv
539.55 420.299 539.56 420.189 539.56 420.104 cv
539.56 419.81 539.506 419.552 539.398 419.331 cv
539.29 419.109 539.15 418.925 538.977 418.778 cv
538.804 418.63 538.611 418.521 538.399 418.45 cv
538.186 418.38 537.975 418.345 537.765 418.345 cv
537.556 418.345 537.375 418.36 537.225 418.392 cv
537.075 418.423 536.939 418.465 536.817 418.519 cv
536.695 418.572 536.58 418.641 536.473 418.723 cv
536.365 418.805 536.251 418.897 536.132 418.999 cv
536.813 415.954 li
539.364 415.954 li
536.813 415.954 li
cp
@
531.413 353.777 mo
533.641 350.597 li
531.413 353.777 li
529.185 350.597 li
531.413 353.777 li
531.413 356.728 li
531.413 353.777 li
cp
@
536.09 354.883 mo
536.09 354.605 536.135 354.353 536.226 354.126 cv
536.317 353.899 536.443 353.705 536.604 353.543 cv
536.766 353.382 536.958 353.257 537.179 353.169 cv
537.4 353.082 537.638 353.037 537.893 353.037 cv
538.148 353.037 538.389 353.07 538.616 353.135 cv
538.842 353.2 539.041 353.305 539.211 353.45 cv
539.381 353.594 539.516 353.784 539.615 354.02 cv
539.714 354.255 539.764 354.542 539.764 354.883 cv
539.764 355.223 539.714 355.511 539.615 355.746 cv
539.516 355.981 539.381 356.171 539.211 356.315 cv
539.041 356.46 538.842 356.565 538.616 356.63 cv
538.389 356.695 538.148 356.728 537.893 356.728 cv
537.638 356.728 537.401 356.684 537.183 356.596 cv
536.964 356.508 536.776 356.384 536.617 356.222 cv
536.458 356.061 536.333 355.866 536.239 355.64 cv
536.146 355.413 536.096 355.161 536.09 354.883 cv
536.084 354.701 536.074 354.467 536.061 354.181 cv
536.046 353.895 536.046 353.593 536.061 353.275 cv
536.074 352.958 536.113 352.639 536.175 352.319 cv
536.237 351.999 536.342 351.709 536.49 351.451 cv
536.637 351.193 536.838 350.983 537.094 350.822 cv
537.349 350.661 537.675 350.58 538.071 350.58 cv
538.395 350.58 538.657 350.62 538.858 350.699 cv
539.059 350.778 539.218 350.875 539.334 350.988 cv
539.451 351.102 539.533 351.223 539.581 351.354 cv
539.629 351.484 539.659 351.603 539.67 351.711 cv
539.659 351.603 539.629 351.484 539.581 351.354 cv
539.533 351.223 539.451 351.102 539.334 350.988 cv
539.218 350.875 539.059 350.778 538.858 350.699 cv
538.657 350.62 538.395 350.58 538.071 350.58 cv
537.675 350.58 537.349 350.661 537.094 350.822 cv
536.838 350.983 536.637 351.193 536.49 351.451 cv
536.342 351.709 536.237 351.999 536.175 352.319 cv
536.113 352.639 536.074 352.958 536.061 353.275 cv
536.046 353.593 536.046 353.895 536.061 354.181 cv
536.074 354.467 536.084 354.701 536.09 354.883 cv
536.096 355.161 536.146 355.413 536.239 355.64 cv
536.333 355.866 536.458 356.061 536.617 356.222 cv
536.776 356.384 536.964 356.508 537.183 356.596 cv
537.401 356.684 537.638 356.728 537.893 356.728 cv
538.148 356.728 538.389 356.695 538.616 356.63 cv
538.842 356.565 539.041 356.46 539.211 356.315 cv
539.381 356.171 539.516 355.981 539.615 355.746 cv
539.714 355.511 539.764 355.223 539.764 354.883 cv
539.764 354.542 539.714 354.255 539.615 354.02 cv
539.516 353.784 539.381 353.594 539.211 353.45 cv
539.041 353.305 538.842 353.2 538.616 353.135 cv
538.389 353.07 538.148 353.037 537.893 353.037 cv
537.638 353.037 537.4 353.082 537.179 353.169 cv
536.958 353.257 536.766 353.382 536.604 353.543 cv
536.443 353.705 536.317 353.899 536.226 354.126 cv
536.135 354.353 536.09 354.605 536.09 354.883 cv
cp
@
531.558 81.4189 mo
531.558 78.4683 li
529.33 75.2876 li
531.558 78.4683 li
533.786 75.2876 li
531.558 78.4683 li
531.558 81.4189 li
cp
@
536.94 81.4189 mo
536.94 81.1865 536.98 80.9131 537.06 80.5981 cv
537.139 80.2837 537.247 79.9463 537.383 79.5864 cv
537.519 79.2266 537.675 78.8535 537.851 78.4683 cv
538.026 78.0825 538.213 77.7012 538.412 77.3242 cv
538.61 76.9473 538.814 76.5845 539.024 76.2358 cv
539.233 75.8872 539.438 75.5713 539.636 75.2876 cv
535.835 75.2876 li
539.636 75.2876 li
539.438 75.5713 539.233 75.8872 539.024 76.2358 cv
538.814 76.5845 538.61 76.9473 538.412 77.3242 cv
538.213 77.7012 538.026 78.0825 537.851 78.4683 cv
537.675 78.8535 537.519 79.2266 537.383 79.5864 cv
537.247 79.9463 537.139 80.2837 537.06 80.5981 cv
536.98 80.9131 536.94 81.1865 536.94 81.4189 cv
cp
@
665.023 159.208 mo
667.081 156.164 li
665.057 153.12 li
667.081 156.164 li
669.13 153.12 li
667.081 156.164 li
669.13 159.251 li
667.081 156.164 li
665.023 159.208 li
cp
@
674.606 153.12 mo
672.056 153.12 li
671.375 156.164 li
671.494 156.062 671.607 155.97 671.715 155.888 cv
671.823 155.806 671.938 155.737 672.06 155.684 cv
672.182 155.63 672.318 155.587 672.468 155.556 cv
672.618 155.525 672.798 155.509 673.008 155.509 cv
673.218 155.509 673.429 155.545 673.642 155.616 cv
673.854 155.687 674.047 155.795 674.22 155.943 cv
674.393 156.09 674.533 156.274 674.641 156.496 cv
674.749 156.717 674.802 156.975 674.802 157.27 cv
674.802 157.354 674.792 157.464 674.772 157.597 cv
674.752 157.73 674.719 157.872 674.67 158.022 cv
674.622 158.172 674.556 158.321 674.471 158.469 cv
674.386 158.616 674.276 158.75 674.143 158.873 cv
674.01 158.995 673.848 159.092 673.659 159.166 cv
673.468 159.24 673.246 159.276 672.991 159.276 cv
672.611 159.276 672.306 159.229 672.077 159.132 cv
671.847 159.036 671.668 158.917 671.541 158.775 cv
671.414 158.633 671.324 158.483 671.273 158.324 cv
671.222 158.166 671.185 158.023 671.163 157.899 cv
671.185 158.023 671.222 158.166 671.273 158.324 cv
671.324 158.483 671.414 158.633 671.541 158.775 cv
671.668 158.917 671.847 159.036 672.077 159.132 cv
672.306 159.229 672.611 159.276 672.991 159.276 cv
673.246 159.276 673.468 159.24 673.659 159.166 cv
673.848 159.092 674.01 158.995 674.143 158.873 cv
674.276 158.75 674.386 158.616 674.471 158.469 cv
674.556 158.321 674.622 158.172 674.67 158.022 cv
674.719 157.872 674.752 157.73 674.772 157.597 cv
674.792 157.464 674.802 157.354 674.802 157.27 cv
674.802 156.975 674.749 156.717 674.641 156.496 cv
674.533 156.274 674.393 156.09 674.22 155.943 cv
674.047 155.795 673.854 155.687 673.642 155.616 cv
673.429 155.545 673.218 155.509 673.008 155.509 cv
672.798 155.509 672.618 155.525 672.468 155.556 cv
672.318 155.587 672.182 155.63 672.06 155.684 cv
671.938 155.737 671.823 155.806 671.715 155.888 cv
671.607 155.97 671.494 156.062 671.375 156.164 cv
672.056 153.12 li
674.606 153.12 li
cp
@
680.083 156.096 mo
680.389 156.096 680.651 156.054 680.87 155.968 cv
681.088 155.883 681.265 155.771 681.401 155.632 cv
681.537 155.494 681.636 155.336 681.699 155.161 cv
681.761 154.985 681.79 154.803 681.784 154.616 cv
681.772 154.429 681.733 154.247 681.665 154.068 cv
681.597 153.889 681.493 153.73 681.354 153.592 cv
681.215 153.453 681.042 153.339 680.835 153.251 cv
680.628 153.164 680.383 153.12 680.1 153.12 cv
677.728 153.12 li
677.728 159.251 li
680.338 159.251 li
680.582 159.251 680.809 159.216 681.019 159.145 cv
681.228 159.074 681.411 158.972 681.567 158.838 cv
681.723 158.706 681.846 158.544 681.937 158.354 cv
682.027 158.164 682.073 157.947 682.073 157.703 cv
682.067 157.459 682.015 157.24 681.916 157.044 cv
681.816 156.849 681.68 156.68 681.507 156.538 cv
681.334 156.396 681.126 156.288 680.882 156.211 cv
680.639 156.134 680.372 156.096 680.083 156.096 cv
680.372 156.096 680.639 156.134 680.882 156.211 cv
681.126 156.288 681.334 156.396 681.507 156.538 cv
681.68 156.68 681.816 156.849 681.916 157.044 cv
682.015 157.24 682.067 157.459 682.073 157.703 cv
682.073 157.947 682.027 158.164 681.937 158.354 cv
681.846 158.544 681.723 158.706 681.567 158.838 cv
681.411 158.972 681.228 159.074 681.019 159.145 cv
680.809 159.216 680.582 159.251 680.338 159.251 cv
677.728 159.251 li
677.728 153.12 li
680.1 153.12 li
680.383 153.12 680.628 153.164 680.835 153.251 cv
681.042 153.339 681.215 153.453 681.354 153.592 cv
681.493 153.73 681.597 153.889 681.665 154.068 cv
681.733 154.247 681.772 154.429 681.784 154.616 cv
681.79 154.803 681.761 154.985 681.699 155.161 cv
681.636 155.336 681.537 155.494 681.401 155.632 cv
681.265 155.771 681.088 155.883 680.87 155.968 cv
680.651 156.054 680.389 156.096 680.083 156.096 cv
677.728 156.096 li
680.083 156.096 li
cp
@
343.303 294.552 mo
340.122 292.324 li
343.303 294.552 li
340.122 296.78 li
343.303 294.552 li
346.253 294.552 li
343.303 294.552 li
cp
@
346.253 287.384 mo
340.122 287.384 li
344.621 290.275 li
344.621 286.295 li
344.621 290.275 li
340.122 287.384 li
346.253 287.384 li
cp
@
343.099 283.353 mo
343.099 280.997 li
343.099 280.691 343.056 280.429 342.971 280.21 cv
342.886 279.992 342.774 279.815 342.635 279.679 cv
342.496 279.543 342.339 279.444 342.163 279.381 cv
341.987 279.319 341.806 279.291 341.619 279.296 cv
341.432 279.308 341.249 279.347 341.07 279.415 cv
340.892 279.483 340.733 279.587 340.594 279.726 cv
340.455 279.865 340.342 280.038 340.254 280.245 cv
340.166 280.452 340.122 280.697 340.122 280.98 cv
340.122 283.353 li
346.253 283.353 li
346.253 280.742 li
346.253 280.498 346.218 280.271 346.147 280.062 cv
346.076 279.852 345.974 279.669 345.841 279.513 cv
345.708 279.357 345.546 279.234 345.356 279.143 cv
345.167 279.053 344.95 279.007 344.706 279.007 cv
344.462 279.013 344.242 279.065 344.047 279.165 cv
343.851 279.264 343.683 279.4 343.541 279.573 cv
343.399 279.746 343.29 279.954 343.213 280.198 cv
343.137 280.441 343.099 280.708 343.099 280.997 cv
343.099 280.708 343.137 280.441 343.213 280.198 cv
343.29 279.954 343.399 279.746 343.541 279.573 cv
343.683 279.4 343.851 279.264 344.047 279.165 cv
344.242 279.065 344.462 279.013 344.706 279.007 cv
344.95 279.007 345.167 279.053 345.356 279.143 cv
345.546 279.234 345.708 279.357 345.841 279.513 cv
345.974 279.669 346.076 279.852 346.147 280.062 cv
346.218 280.271 346.253 280.498 346.253 280.742 cv
346.253 283.353 li
340.122 283.353 li
340.122 280.98 li
340.122 280.697 340.166 280.452 340.254 280.245 cv
340.342 280.038 340.455 279.865 340.594 279.726 cv
340.733 279.587 340.892 279.483 341.07 279.415 cv
341.249 279.347 341.432 279.308 341.619 279.296 cv
341.806 279.291 341.987 279.319 342.163 279.381 cv
342.339 279.444 342.496 279.543 342.635 279.679 cv
342.774 279.815 342.886 279.992 342.971 280.21 cv
343.056 280.429 343.099 280.691 343.099 280.997 cv
343.099 283.353 li
cp
@
223.093 230.128 mo
223.093 227.772 li
223.093 227.466 223.05 227.204 222.965 226.986 cv
222.88 226.768 222.768 226.59 222.629 226.454 cv
222.49 226.318 222.333 226.219 222.157 226.157 cv
221.981 226.094 221.8 226.066 221.613 226.072 cv
221.426 226.083 221.243 226.123 221.064 226.19 cv
220.886 226.259 220.727 226.362 220.588 226.501 cv
220.449 226.64 220.336 226.813 220.248 227.02 cv
220.16 227.227 220.116 227.472 220.116 227.755 cv
220.116 230.128 li
226.248 230.128 li
226.248 227.517 li
226.248 227.273 226.212 227.047 226.141 226.837 cv
226.07 226.627 225.968 226.444 225.835 226.289 cv
225.702 226.133 225.541 226.009 225.351 225.918 cv
225.161 225.828 224.944 225.783 224.7 225.783 cv
224.456 225.788 224.236 225.841 224.041 225.94 cv
223.845 226.039 223.677 226.175 223.535 226.348 cv
223.393 226.521 223.284 226.729 223.208 226.973 cv
223.131 227.217 223.093 227.483 223.093 227.772 cv
223.093 227.483 223.131 227.217 223.208 226.973 cv
223.284 226.729 223.393 226.521 223.535 226.348 cv
223.677 226.175 223.845 226.039 224.041 225.94 cv
224.236 225.841 224.456 225.788 224.7 225.783 cv
224.944 225.783 225.161 225.828 225.351 225.918 cv
225.541 226.009 225.702 226.133 225.835 226.289 cv
225.968 226.444 226.07 226.627 226.141 226.837 cv
226.212 227.047 226.248 227.273 226.248 227.517 cv
226.248 230.128 li
220.116 230.128 li
220.116 227.755 li
220.116 227.472 220.16 227.227 220.248 227.02 cv
220.336 226.813 220.449 226.64 220.588 226.501 cv
220.727 226.362 220.886 226.259 221.064 226.19 cv
221.243 226.123 221.426 226.083 221.613 226.072 cv
221.8 226.066 221.981 226.094 222.157 226.157 cv
222.333 226.219 222.49 226.318 222.629 226.454 cv
222.768 226.59 222.88 226.768 222.965 226.986 cv
223.05 227.204 223.093 227.466 223.093 227.772 cv
223.093 230.128 li
cp
@
226.248 222.245 mo
220.116 222.245 li
220.377 222.245 220.591 222.3 220.758 222.411 cv
220.926 222.521 221.059 222.653 221.158 222.806 cv
221.257 222.959 221.328 223.118 221.371 223.282 cv
221.413 223.447 221.437 223.583 221.443 223.69 cv
221.437 223.583 221.413 223.447 221.371 223.282 cv
221.328 223.118 221.257 222.959 221.158 222.806 cv
221.059 222.653 220.926 222.521 220.758 222.411 cv
220.591 222.3 220.377 222.245 220.116 222.245 cv
226.248 222.245 li
cp
@
24.769 463.412 mo
30.9004 467.8 li
30.9004 463.148 li
30.9004 467.8 li
24.769 463.412 li
24.769 467.63 li
24.769 463.412 li
cp
@
30.9004 461.091 mo
30.5889 461.085 30.3262 461.042 30.1138 460.959 cv
29.9014 460.877 29.7153 460.771 29.5566 460.64 cv
29.3979 460.51 29.2593 460.36 29.1401 460.194 cv
29.021 460.026 28.9019 459.853 28.7827 459.671 cv
27.8135 458.216 li
27.7114 458.063 27.5981 457.947 27.4731 457.868 cv
27.3486 457.788 27.2183 457.73 27.082 457.693 cv
26.9463 457.657 26.8057 457.636 26.6611 457.63 cv
26.5166 457.624 26.3735 457.621 26.2319 457.621 cv
26.0898 457.621 25.9312 457.647 25.7554 457.698 cv
25.5801 457.749 25.4155 457.834 25.2622 457.953 cv
25.1094 458.071 24.9805 458.232 24.8755 458.434 cv
24.7705 458.635 24.7183 458.886 24.7183 459.187 cv
24.7183 459.492 24.769 459.75 24.8711 459.96 cv
24.9731 460.169 25.1079 460.341 25.2749 460.474 cv
25.4424 460.607 25.6309 460.704 25.8403 460.764 cv
26.0503 460.823 26.2603 460.853 26.4697 460.853 cv
26.2603 460.853 26.0503 460.823 25.8403 460.764 cv
25.6309 460.704 25.4424 460.607 25.2749 460.474 cv
25.1079 460.341 24.9731 460.169 24.8711 459.96 cv
24.769 459.75 24.7183 459.492 24.7183 459.187 cv
24.7183 458.886 24.7705 458.635 24.8755 458.434 cv
24.9805 458.232 25.1094 458.071 25.2622 457.953 cv
25.4155 457.834 25.5801 457.749 25.7554 457.698 cv
25.9312 457.647 26.0898 457.621 26.2319 457.621 cv
26.3735 457.621 26.5166 457.624 26.6611 457.63 cv
26.8057 457.636 26.9463 457.657 27.082 457.693 cv
27.2183 457.73 27.3486 457.788 27.4731 457.868 cv
27.5981 457.947 27.7114 458.063 27.8135 458.216 cv
28.7827 459.671 li
28.9019 459.853 29.021 460.026 29.1401 460.194 cv
29.2593 460.36 29.3979 460.51 29.5566 460.64 cv
29.7153 460.771 29.9014 460.877 30.1138 460.959 cv
30.3262 461.042 30.5889 461.085 30.9004 461.091 cv
30.9004 457.442 li
30.9004 461.091 li
cp
@
98.9082 437.587 mo
99.2144 437.587 99.4766 437.544 99.6948 437.458 cv
99.9131 437.374 100.09 437.262 100.227 437.122 cv
100.362 436.983 100.461 436.827 100.524 436.651 cv
100.586 436.476 100.615 436.294 100.609 436.106 cv
100.598 435.919 100.558 435.737 100.49 435.558 cv
100.422 435.38 100.318 435.221 100.18 435.082 cv
100.041 434.942 99.8677 434.829 99.6606 434.741 cv
99.4536 434.653 99.2085 434.61 98.9253 434.61 cv
96.5527 434.61 li
96.5527 440.741 li
99.1636 440.741 li
99.4072 440.741 99.6338 440.706 99.8438 440.635 cv
100.053 440.563 100.236 440.462 100.392 440.329 cv
100.548 440.196 100.671 440.034 100.762 439.845 cv
100.853 439.654 100.898 439.438 100.898 439.193 cv
100.893 438.95 100.84 438.729 100.741 438.534 cv
100.642 438.339 100.505 438.171 100.333 438.028 cv
100.16 437.887 99.9512 437.778 99.7075 437.701 cv
99.4639 437.624 99.1973 437.587 98.9082 437.587 cv
99.1973 437.587 99.4639 437.624 99.7075 437.701 cv
99.9512 437.778 100.16 437.887 100.333 438.028 cv
100.505 438.171 100.642 438.339 100.741 438.534 cv
100.84 438.729 100.893 438.95 100.898 439.193 cv
100.898 439.438 100.853 439.654 100.762 439.845 cv
100.671 440.034 100.548 440.196 100.392 440.329 cv
100.236 440.462 100.053 440.563 99.8438 440.635 cv
99.6338 440.706 99.4072 440.741 99.1636 440.741 cv
96.5527 440.741 li
96.5527 434.61 li
98.9253 434.61 li
99.2085 434.61 99.4536 434.653 99.6606 434.741 cv
99.8677 434.829 100.041 434.942 100.18 435.082 cv
100.318 435.221 100.422 435.38 100.49 435.558 cv
100.558 435.737 100.598 435.919 100.609 436.106 cv
100.615 436.294 100.586 436.476 100.524 436.651 cv
100.461 436.827 100.362 436.983 100.227 437.122 cv
100.09 437.262 99.9131 437.374 99.6948 437.458 cv
99.4766 437.544 99.2144 437.587 98.9082 437.587 cv
96.5527 437.587 li
98.9082 437.587 li
cp
@
104.844 440.741 mo
104.47 440.741 104.162 440.661 103.921 440.499 cv
103.68 440.337 103.492 440.119 103.356 439.845 cv
103.22 439.569 103.125 439.246 103.071 438.874 cv
103.017 438.503 102.99 438.104 102.99 437.68 cv
102.99 437.261 103.017 436.864 103.071 436.493 cv
103.125 436.122 103.22 435.798 103.356 435.521 cv
103.492 435.242 103.68 435.022 103.921 434.86 cv
104.162 434.699 104.47 434.618 104.844 434.618 cv
105.218 434.618 105.526 434.699 105.767 434.86 cv
106.008 435.022 106.196 435.242 106.332 435.521 cv
106.468 435.798 106.563 436.122 106.617 436.493 cv
106.671 436.864 106.698 437.261 106.698 437.68 cv
106.698 438.104 106.671 438.503 106.617 438.874 cv
106.563 439.246 106.468 439.569 106.332 439.845 cv
106.196 440.119 106.008 440.337 105.767 440.499 cv
105.526 440.661 105.218 440.741 104.844 440.741 cv
cp
104.844 440.741 mo
104.47 440.741 104.162 440.661 103.921 440.499 cv
103.68 440.337 103.492 440.119 103.356 439.845 cv
103.22 439.569 103.125 439.246 103.071 438.874 cv
103.017 438.503 102.99 438.104 102.99 437.68 cv
102.99 437.261 103.017 436.864 103.071 436.493 cv
103.125 436.122 103.22 435.798 103.356 435.521 cv
103.492 435.242 103.68 435.022 103.921 434.86 cv
104.162 434.699 104.47 434.618 104.844 434.618 cv
105.218 434.618 105.526 434.699 105.767 434.86 cv
106.008 435.022 106.196 435.242 106.332 435.521 cv
106.468 435.798 106.563 436.122 106.617 436.493 cv
106.671 436.864 106.698 437.261 106.698 437.68 cv
106.698 438.104 106.671 438.503 106.617 438.874 cv
106.563 439.246 106.468 439.569 106.332 439.845 cv
106.196 440.119 106.008 440.337 105.767 440.499 cv
105.526 440.661 105.218 440.741 104.844 440.741 cv
cp
@
335.474 537.94 mo
337.532 534.896 li
335.508 531.852 li
337.532 534.896 li
339.581 531.852 li
337.532 534.896 li
339.581 537.983 li
337.532 534.896 li
335.474 537.94 li
cp
@
345.261 537.983 mo
341.613 537.983 li
341.619 537.671 341.663 537.409 341.745 537.196 cv
341.827 536.983 341.934 536.798 342.064 536.64 cv
342.194 536.48 342.343 536.342 342.51 536.223 cv
342.678 536.104 342.852 535.984 343.033 535.865 cv
344.488 534.896 li
344.641 534.794 344.757 534.681 344.836 534.556 cv
344.916 534.431 344.974 534.301 345.011 534.165 cv
345.047 534.028 345.069 533.888 345.074 533.743 cv
345.08 533.599 345.083 533.456 345.083 533.314 cv
345.083 533.173 345.057 533.014 345.006 532.838 cv
344.955 532.663 344.87 532.498 344.751 532.345 cv
344.632 532.192 344.472 532.063 344.271 531.958 cv
344.069 531.853 343.818 531.801 343.518 531.801 cv
343.212 531.801 342.954 531.852 342.744 531.954 cv
342.535 532.056 342.363 532.19 342.23 532.357 cv
342.097 532.524 342 532.714 341.94 532.923 cv
341.881 533.133 341.852 533.343 341.852 533.552 cv
341.852 533.343 341.881 533.133 341.94 532.923 cv
342 532.714 342.097 532.524 342.23 532.357 cv
342.363 532.19 342.535 532.056 342.744 531.954 cv
342.954 531.852 343.212 531.801 343.518 531.801 cv
343.818 531.801 344.069 531.853 344.271 531.958 cv
344.472 532.063 344.632 532.192 344.751 532.345 cv
344.87 532.498 344.955 532.663 345.006 532.838 cv
345.057 533.014 345.083 533.173 345.083 533.314 cv
345.083 533.456 345.08 533.599 345.074 533.743 cv
345.069 533.888 345.047 534.028 345.011 534.165 cv
344.974 534.301 344.916 534.431 344.836 534.556 cv
344.757 534.681 344.641 534.794 344.488 534.896 cv
343.033 535.865 li
342.852 535.984 342.678 536.104 342.51 536.223 cv
342.343 536.342 342.194 536.48 342.064 536.64 cv
341.934 536.798 341.827 536.983 341.745 537.196 cv
341.663 537.409 341.619 537.671 341.613 537.983 cv
345.261 537.983 li
cp
@
1057.2 311.708 mo
1059.25 314.795 li
1057.2 311.708 li
1059.25 308.664 li
1057.2 311.708 li
1055.18 308.664 li
1057.2 311.708 li
1055.15 314.752 li
1057.2 311.708 li
cp
@
1064.18 308.664 mo
1061.28 313.162 li
1065.26 313.162 li
1061.28 313.162 li
1064.18 308.664 li
1064.18 314.795 li
1064.18 308.664 li
cp
@
299.224 202.629 mo
299.224 202.935 299.267 203.197 299.352 203.416 cv
299.437 203.634 299.549 203.811 299.688 203.947 cv
299.827 204.083 299.984 204.182 300.16 204.245 cv
300.335 204.307 300.517 204.335 300.704 204.33 cv
300.891 204.318 301.074 204.279 301.252 204.211 cv
301.431 204.143 301.59 204.039 301.729 203.9 cv
301.868 203.761 301.981 203.588 302.069 203.381 cv
302.157 203.174 302.201 202.929 302.201 202.646 cv
302.201 200.273 li
296.069 200.273 li
296.069 202.884 li
296.069 203.128 296.104 203.354 296.176 203.564 cv
296.247 203.774 296.349 203.957 296.482 204.113 cv
296.615 204.269 296.776 204.392 296.966 204.483 cv
297.156 204.573 297.373 204.619 297.617 204.619 cv
297.861 204.613 298.081 204.561 298.276 204.461 cv
298.472 204.362 298.64 204.226 298.782 204.053 cv
298.924 203.88 299.033 203.672 299.109 203.428 cv
299.186 203.185 299.224 202.918 299.224 202.629 cv
299.224 202.918 299.186 203.185 299.109 203.428 cv
299.033 203.672 298.924 203.88 298.782 204.053 cv
298.64 204.226 298.472 204.362 298.276 204.461 cv
298.081 204.561 297.861 204.613 297.617 204.619 cv
297.373 204.619 297.156 204.573 296.966 204.483 cv
296.776 204.392 296.615 204.269 296.482 204.113 cv
296.349 203.957 296.247 203.774 296.176 203.564 cv
296.104 203.354 296.069 203.128 296.069 202.884 cv
296.069 200.273 li
302.201 200.273 li
302.201 202.646 li
302.201 202.929 302.157 203.174 302.069 203.381 cv
301.981 203.588 301.868 203.761 301.729 203.9 cv
301.59 204.039 301.431 204.143 301.252 204.211 cv
301.074 204.279 300.891 204.318 300.704 204.33 cv
300.517 204.335 300.335 204.307 300.16 204.245 cv
299.984 204.182 299.827 204.083 299.688 203.947 cv
299.549 203.811 299.437 203.634 299.352 203.416 cv
299.267 203.197 299.224 202.935 299.224 202.629 cv
299.224 200.273 li
299.224 202.629 li
cp
@
296.069 210.359 mo
296.069 206.711 li
296.381 206.716 296.644 206.76 296.856 206.843 cv
297.068 206.925 297.254 207.031 297.413 207.162 cv
297.572 207.292 297.71 207.441 297.83 207.608 cv
297.949 207.775 298.068 207.95 298.187 208.131 cv
299.156 209.585 li
299.258 209.738 299.372 209.854 299.497 209.934 cv
299.621 210.013 299.751 210.071 299.888 210.108 cv
300.023 210.145 300.164 210.167 300.309 210.172 cv
300.453 210.178 300.596 210.181 300.738 210.181 cv
300.88 210.181 301.039 210.155 301.214 210.104 cv
301.39 210.053 301.554 209.968 301.708 209.849 cv
301.86 209.73 301.989 209.569 302.094 209.368 cv
302.199 209.167 302.251 208.916 302.251 208.616 cv
302.251 208.31 302.201 208.052 302.099 207.842 cv
301.997 207.632 301.862 207.46 301.695 207.328 cv
301.527 207.194 301.339 207.098 301.129 207.038 cv
300.919 206.979 300.709 206.949 300.5 206.949 cv
300.709 206.949 300.919 206.979 301.129 207.038 cv
301.339 207.098 301.527 207.194 301.695 207.328 cv
301.862 207.46 301.997 207.632 302.099 207.842 cv
302.201 208.052 302.251 208.31 302.251 208.616 cv
302.251 208.916 302.199 209.167 302.094 209.368 cv
301.989 209.569 301.86 209.73 301.708 209.849 cv
301.554 209.968 301.39 210.053 301.214 210.104 cv
301.039 210.155 300.88 210.181 300.738 210.181 cv
300.596 210.181 300.453 210.178 300.309 210.172 cv
300.164 210.167 300.023 210.145 299.888 210.108 cv
299.751 210.071 299.621 210.013 299.497 209.934 cv
299.372 209.854 299.258 209.738 299.156 209.585 cv
298.187 208.131 li
298.068 207.95 297.949 207.775 297.83 207.608 cv
297.71 207.441 297.572 207.292 297.413 207.162 cv
297.254 207.031 297.068 206.925 296.856 206.843 cv
296.644 206.76 296.381 206.716 296.069 206.711 cv
296.069 210.359 li
cp
@
302.201 214.798 mo
296.069 217.238 li
302.201 214.798 li
296.069 212.366 li
302.201 214.798 li
cp
@
265.193 190.265 mo
265.193 190.571 265.235 190.833 265.321 191.051 cv
265.406 191.27 265.518 191.447 265.657 191.583 cv
265.795 191.719 265.953 191.818 266.128 191.88 cv
266.304 191.943 266.486 191.971 266.673 191.965 cv
266.86 191.954 267.042 191.915 267.221 191.847 cv
267.4 191.778 267.559 191.675 267.697 191.536 cv
267.836 191.397 267.95 191.224 268.038 191.017 cv
268.125 190.81 268.169 190.565 268.169 190.282 cv
268.169 187.909 li
262.038 187.909 li
262.038 190.52 li
262.038 190.764 262.073 190.99 262.145 191.2 cv
262.215 191.41 262.317 191.593 262.451 191.749 cv
262.583 191.904 262.745 192.028 262.935 192.119 cv
263.125 192.209 263.342 192.254 263.586 192.254 cv
263.83 192.249 264.049 192.196 264.245 192.097 cv
264.44 191.998 264.609 191.862 264.751 191.689 cv
264.893 191.516 265.001 191.308 265.078 191.064 cv
265.155 190.82 265.193 190.554 265.193 190.265 cv
265.193 190.554 265.155 190.82 265.078 191.064 cv
265.001 191.308 264.893 191.516 264.751 191.689 cv
264.609 191.862 264.44 191.998 264.245 192.097 cv
264.049 192.196 263.83 192.249 263.586 192.254 cv
263.342 192.254 263.125 192.209 262.935 192.119 cv
262.745 192.028 262.583 191.904 262.451 191.749 cv
262.317 191.593 262.215 191.41 262.145 191.2 cv
262.073 190.99 262.038 190.764 262.038 190.52 cv
262.038 187.909 li
268.169 187.909 li
268.169 190.282 li
268.169 190.565 268.125 190.81 268.038 191.017 cv
267.95 191.224 267.836 191.397 267.697 191.536 cv
267.559 191.675 267.4 191.778 267.221 191.847 cv
267.042 191.915 266.86 191.954 266.673 191.965 cv
266.486 191.971 266.304 191.943 266.128 191.88 cv
265.953 191.818 265.795 191.719 265.657 191.583 cv
265.518 191.447 265.406 191.27 265.321 191.051 cv
265.235 190.833 265.193 190.571 265.193 190.265 cv
265.193 187.909 li
265.193 190.265 li
cp
@
262.038 197.238 mo
268.169 197.238 li
263.671 194.347 li
263.671 198.327 li
263.671 194.347 li
268.169 197.238 li
262.038 197.238 li
cp
@
268.169 202.782 mo
262.038 205.223 li
268.169 202.782 li
262.038 200.35 li
268.169 202.782 li
cp
@
181.765 157.314 mo
181.765 159.669 li
181.765 159.976 181.808 160.238 181.893 160.456 cv
181.978 160.674 182.09 160.852 182.229 160.988 cv
182.368 161.124 182.525 161.223 182.701 161.285 cv
182.876 161.348 183.058 161.376 183.245 161.37 cv
183.432 161.359 183.615 161.319 183.793 161.251 cv
183.972 161.183 184.131 161.08 184.27 160.941 cv
184.409 160.802 184.522 160.629 184.61 160.422 cv
184.698 160.215 184.742 159.97 184.742 159.687 cv
184.742 157.314 li
178.61 157.314 li
178.61 159.925 li
178.61 160.168 178.646 160.395 178.717 160.605 cv
178.788 160.814 178.89 160.998 179.023 161.153 cv
179.156 161.309 179.317 161.433 179.507 161.523 cv
179.697 161.614 179.914 161.659 180.158 161.659 cv
180.402 161.654 180.622 161.601 180.817 161.502 cv
181.013 161.403 181.181 161.267 181.323 161.094 cv
181.465 160.921 181.574 160.712 181.65 160.469 cv
181.727 160.225 181.765 159.958 181.765 159.669 cv
181.765 159.958 181.727 160.225 181.65 160.469 cv
181.574 160.712 181.465 160.921 181.323 161.094 cv
181.181 161.267 181.013 161.403 180.817 161.502 cv
180.622 161.601 180.402 161.654 180.158 161.659 cv
179.914 161.659 179.697 161.614 179.507 161.523 cv
179.317 161.433 179.156 161.309 179.023 161.153 cv
178.89 160.998 178.788 160.814 178.717 160.605 cv
178.646 160.395 178.61 160.168 178.61 159.925 cv
178.61 157.314 li
184.742 157.314 li
184.742 159.687 li
184.742 159.97 184.698 160.215 184.61 160.422 cv
184.522 160.629 184.409 160.802 184.27 160.941 cv
184.131 161.08 183.972 161.183 183.793 161.251 cv
183.615 161.319 183.432 161.359 183.245 161.37 cv
183.058 161.376 182.876 161.348 182.701 161.285 cv
182.525 161.223 182.368 161.124 182.229 160.988 cv
182.09 160.852 181.978 160.674 181.893 160.456 cv
181.808 160.238 181.765 159.976 181.765 159.669 cv
181.765 157.314 li
cp
@
180.456 164.151 mo
180.733 164.151 180.986 164.196 181.212 164.287 cv
181.439 164.378 181.633 164.504 181.795 164.666 cv
181.957 164.827 182.081 165.019 182.169 165.24 cv
182.257 165.461 182.301 165.699 182.301 165.954 cv
182.301 166.209 182.269 166.45 182.203 166.677 cv
182.138 166.903 182.033 167.102 181.889 167.272 cv
181.744 167.442 181.554 167.577 181.319 167.676 cv
181.083 167.775 180.796 167.825 180.456 167.825 cv
180.116 167.825 179.828 167.775 179.593 167.676 cv
179.357 167.577 179.167 167.442 179.023 167.272 cv
178.878 167.102 178.773 166.903 178.708 166.677 cv
178.643 166.45 178.61 166.209 178.61 165.954 cv
178.61 165.699 178.654 165.462 178.742 165.244 cv
178.83 165.025 178.955 164.837 179.116 164.678 cv
179.278 164.52 179.472 164.394 179.699 164.3 cv
179.926 164.207 180.178 164.157 180.456 164.151 cv
180.637 164.146 180.871 164.135 181.157 164.122 cv
181.443 164.107 181.746 164.107 182.063 164.122 cv
182.38 164.135 182.699 164.174 183.02 164.236 cv
183.34 164.298 183.629 164.403 183.887 164.551 cv
184.145 164.698 184.355 164.899 184.516 165.155 cv
184.678 165.41 184.759 165.736 184.759 166.132 cv
184.759 166.456 184.719 166.718 184.64 166.919 cv
184.56 167.12 184.464 167.279 184.351 167.396 cv
184.237 167.512 184.115 167.594 183.985 167.642 cv
183.854 167.69 183.735 167.72 183.627 167.731 cv
183.735 167.72 183.854 167.69 183.985 167.642 cv
184.115 167.594 184.237 167.512 184.351 167.396 cv
184.464 167.279 184.56 167.12 184.64 166.919 cv
184.719 166.718 184.759 166.456 184.759 166.132 cv
184.759 165.736 184.678 165.41 184.516 165.155 cv
184.355 164.899 184.145 164.698 183.887 164.551 cv
183.629 164.403 183.34 164.298 183.02 164.236 cv
182.699 164.174 182.38 164.135 182.063 164.122 cv
181.746 164.107 181.443 164.107 181.157 164.122 cv
180.871 164.135 180.637 164.146 180.456 164.151 cv
180.178 164.157 179.926 164.207 179.699 164.3 cv
179.472 164.394 179.278 164.52 179.116 164.678 cv
178.955 164.837 178.83 165.025 178.742 165.244 cv
178.654 165.462 178.61 165.699 178.61 165.954 cv
178.61 166.209 178.643 166.45 178.708 166.677 cv
178.773 166.903 178.878 167.102 179.023 167.272 cv
179.167 167.442 179.357 167.577 179.593 167.676 cv
179.828 167.775 180.116 167.825 180.456 167.825 cv
180.796 167.825 181.083 167.775 181.319 167.676 cv
181.554 167.577 181.744 167.442 181.889 167.272 cv
182.033 167.102 182.138 166.903 182.203 166.677 cv
182.269 166.45 182.301 166.209 182.301 165.954 cv
182.301 165.699 182.257 165.461 182.169 165.24 cv
182.081 165.019 181.957 164.827 181.795 164.666 cv
181.633 164.504 181.439 164.378 181.212 164.287 cv
180.986 164.196 180.733 164.151 180.456 164.151 cv
cp
@
191.833 56.3589 mo
188.789 54.3008 li
185.744 56.3247 li
188.789 54.3008 li
185.744 52.2515 li
188.789 54.3008 li
191.875 52.2515 li
188.789 54.3008 li
191.833 56.3589 li
cp
@
199.018 54.1606 mo
197.419 54.1606 li
197.419 55.751 li
197.419 54.1606 li
195.821 54.1606 li
197.419 54.1606 li
197.419 52.5703 li
197.419 54.1606 li
199.018 54.1606 li
cp
@
197.419 48.501 mo
197.419 45.3203 li
197.419 46.9106 li
@
199.018 78.7021 mo
197.419 78.7021 li
197.419 80.2925 li
197.419 78.7021 li
195.821 78.7021 li
197.419 78.7021 li
197.419 77.1118 li
197.419 78.7021 li
199.018 78.7021 li
cp
@
197.419 73.0425 mo
197.419 69.8618 li
197.419 71.4521 li
@
199.018 102.703 mo
197.419 102.703 li
197.419 104.293 li
197.419 102.703 li
195.821 102.703 li
197.419 102.703 li
197.419 101.112 li
197.419 102.703 li
199.018 102.703 li
cp
@
197.419 97.043 mo
197.419 93.8623 li
197.419 95.4526 li
@
191.875 78.689 mo
188.925 78.689 li
185.744 80.917 li
188.925 78.689 li
185.744 76.4609 li
188.925 78.689 li
191.875 78.689 li
cp
@
185.744 100.256 mo
191.875 104.644 li
191.875 99.9922 li
191.875 104.644 li
185.744 100.256 li
185.744 104.474 li
185.744 100.256 li
cp
@
75.3174 304.963 mo
75.3174 302.608 li
75.3174 302.302 75.2749 302.04 75.1895 301.821 cv
75.1045 301.603 74.9927 301.426 74.8535 301.29 cv
74.7148 301.154 74.5576 301.055 74.3818 300.992 cv
74.2061 300.93 74.0244 300.901 73.8374 300.907 cv
73.6504 300.918 73.4678 300.958 73.2891 301.026 cv
73.1104 301.094 72.9517 301.198 72.813 301.336 cv
72.6738 301.476 72.5605 301.648 72.4727 301.855 cv
72.3848 302.063 72.3408 302.308 72.3408 302.591 cv
72.3408 304.963 li
78.4722 304.963 li
78.4722 302.353 li
78.4722 302.109 78.437 301.882 78.3657 301.672 cv
78.2949 301.463 78.1929 301.28 78.0596 301.124 cv
77.9268 300.968 77.7651 300.845 77.5752 300.754 cv
77.3853 300.664 77.1685 300.618 76.9243 300.618 cv
76.6807 300.624 76.4609 300.676 76.2656 300.775 cv
76.0698 300.875 75.9014 301.011 75.7593 301.184 cv
75.6177 301.356 75.5088 301.565 75.4321 301.809 cv
75.3555 302.052 75.3174 302.319 75.3174 302.608 cv
75.3174 302.319 75.3555 302.052 75.4321 301.809 cv
75.5088 301.565 75.6177 301.356 75.7593 301.184 cv
75.9014 301.011 76.0698 300.875 76.2656 300.775 cv
76.4609 300.676 76.6807 300.624 76.9243 300.618 cv
77.1685 300.618 77.3853 300.664 77.5752 300.754 cv
77.7651 300.845 77.9268 300.968 78.0596 301.124 cv
78.1929 301.28 78.2949 301.463 78.3657 301.672 cv
78.437 301.882 78.4722 302.109 78.4722 302.353 cv
78.4722 304.963 li
72.3408 304.963 li
72.3408 302.591 li
72.3408 302.308 72.3848 302.063 72.4727 301.855 cv
72.5605 301.648 72.6738 301.476 72.813 301.336 cv
72.9517 301.198 73.1104 301.094 73.2891 301.026 cv
73.4678 300.958 73.6504 300.918 73.8374 300.907 cv
74.0244 300.901 74.2061 300.93 74.3818 300.992 cv
74.5576 301.055 74.7148 301.154 74.8535 301.29 cv
74.9927 301.426 75.1045 301.603 75.1895 301.821 cv
75.2749 302.04 75.3174 302.302 75.3174 302.608 cv
75.3174 304.963 li
cp
@
77.5581 298.407 mo
77.748 298.328 77.9111 298.211 78.0469 298.058 cv
78.1831 297.905 78.2881 297.721 78.3618 297.505 cv
78.4355 297.29 78.4722 297.046 78.4722 296.774 cv
78.4722 296.502 78.4424 296.254 78.3828 296.03 cv
78.3232 295.806 78.2314 295.613 78.1064 295.452 cv
77.9819 295.29 77.8203 295.164 77.6216 295.073 cv
77.4233 294.983 77.1826 294.937 76.8989 294.937 cv
76.332 294.937 75.9028 295.109 75.6104 295.452 cv
75.3188 295.795 75.1729 296.337 75.1729 297.08 cv
75.1729 296.712 75.1387 296.403 75.0708 296.153 cv
75.0024 295.904 74.9048 295.704 74.7773 295.554 cv
74.6494 295.404 74.4995 295.296 74.3267 295.23 cv
74.1538 295.166 73.9648 295.133 73.7612 295.133 cv
73.5571 295.133 73.3672 295.161 73.1914 295.218 cv
73.0156 295.274 72.8608 295.364 72.7275 295.486 cv
72.5947 295.608 72.4912 295.77 72.4175 295.971 cv
72.3438 296.172 72.3066 296.417 72.3066 296.706 cv
72.3066 296.995 72.3491 297.246 72.4346 297.458 cv
72.5195 297.671 72.6313 297.847 72.7705 297.986 cv
72.9092 298.125 73.0723 298.229 73.2593 298.301 cv
73.4463 298.372 73.6421 298.407 73.8462 298.407 cv
73.6421 298.407 73.4463 298.372 73.2593 298.301 cv
73.0723 298.229 72.9092 298.125 72.7705 297.986 cv
72.6313 297.847 72.5195 297.671 72.4346 297.458 cv
72.3491 297.246 72.3066 296.995 72.3066 296.706 cv
72.3066 296.417 72.3438 296.172 72.4175 295.971 cv
72.4912 295.77 72.5947 295.608 72.7275 295.486 cv
72.8608 295.364 73.0156 295.274 73.1914 295.218 cv
73.3672 295.161 73.5571 295.133 73.7612 295.133 cv
73.9648 295.133 74.1538 295.166 74.3267 295.23 cv
74.4995 295.296 74.6494 295.404 74.7773 295.554 cv
74.9048 295.704 75.0024 295.904 75.0708 296.153 cv
75.1387 296.403 75.1729 296.712 75.1729 297.08 cv
75.1729 296.337 75.3188 295.795 75.6104 295.452 cv
75.9028 295.109 76.332 294.937 76.8989 294.937 cv
77.1826 294.937 77.4233 294.983 77.6216 295.073 cv
77.8203 295.164 77.9819 295.29 78.1064 295.452 cv
78.2314 295.613 78.3232 295.806 78.3828 296.03 cv
78.4424 296.254 78.4722 296.502 78.4722 296.774 cv
78.4722 297.046 78.4355 297.29 78.3618 297.505 cv
78.2881 297.721 78.1831 297.905 78.0469 298.058 cv
77.9111 298.211 77.748 298.328 77.5581 298.407 cv
77.3682 298.486 77.1597 298.526 76.9331 298.526 cv
77.1597 298.526 77.3682 298.486 77.5581 298.407 cv
cp
@
72.3408 290.499 mo
78.4722 288.058 li
72.3408 290.499 li
78.4722 292.931 li
72.3408 290.499 li
cp
@
157.896 286.287 mo
157.896 288.643 li
157.896 288.949 157.939 289.211 158.024 289.429 cv
158.109 289.647 158.221 289.825 158.36 289.961 cv
158.499 290.097 158.656 290.196 158.832 290.258 cv
159.008 290.321 159.189 290.349 159.376 290.343 cv
159.563 290.332 159.746 290.292 159.925 290.225 cv
160.104 290.156 160.262 290.053 160.401 289.914 cv
160.54 289.775 160.653 289.602 160.741 289.395 cv
160.829 289.188 160.873 288.943 160.873 288.66 cv
160.873 286.287 li
154.742 286.287 li
154.742 288.898 li
154.742 289.142 154.777 289.368 154.848 289.578 cv
154.919 289.788 155.021 289.971 155.154 290.126 cv
155.287 290.282 155.449 290.406 155.639 290.497 cv
155.829 290.587 156.045 290.632 156.29 290.632 cv
156.533 290.627 156.753 290.574 156.948 290.475 cv
157.144 290.376 157.313 290.24 157.455 290.067 cv
157.596 289.894 157.705 289.686 157.782 289.442 cv
157.858 289.198 157.896 288.932 157.896 288.643 cv
157.896 288.932 157.858 289.198 157.782 289.442 cv
157.705 289.686 157.596 289.894 157.455 290.067 cv
157.313 290.24 157.144 290.376 156.948 290.475 cv
156.753 290.574 156.533 290.627 156.29 290.632 cv
156.045 290.632 155.829 290.587 155.639 290.497 cv
155.449 290.406 155.287 290.282 155.154 290.126 cv
155.021 289.971 154.919 289.788 154.848 289.578 cv
154.777 289.368 154.742 289.142 154.742 288.898 cv
154.742 286.287 li
160.873 286.287 li
160.873 288.66 li
160.873 288.943 160.829 289.188 160.741 289.395 cv
160.653 289.602 160.54 289.775 160.401 289.914 cv
160.262 290.053 160.104 290.156 159.925 290.225 cv
159.746 290.292 159.563 290.332 159.376 290.343 cv
159.189 290.349 159.008 290.321 158.832 290.258 cv
158.656 290.196 158.499 290.097 158.36 289.961 cv
158.221 289.825 158.109 289.647 158.024 289.429 cv
157.939 289.211 157.896 288.949 157.896 288.643 cv
157.896 286.287 li
cp
@
156.281 292.725 mo
156.054 292.725 155.846 292.764 155.656 292.844 cv
155.466 292.923 155.303 293.039 155.167 293.192 cv
155.031 293.345 154.926 293.529 154.852 293.745 cv
154.778 293.96 154.742 294.204 154.742 294.477 cv
154.742 294.749 154.771 294.997 154.831 295.221 cv
154.891 295.444 154.982 295.637 155.107 295.799 cv
155.232 295.96 155.394 296.086 155.592 296.177 cv
155.791 296.268 156.031 296.313 156.315 296.313 cv
156.882 296.313 157.311 296.142 157.604 295.799 cv
157.895 295.456 158.041 294.913 158.041 294.17 cv
158.041 294.539 158.075 294.848 158.143 295.097 cv
158.211 295.347 158.309 295.546 158.437 295.697 cv
158.564 295.847 158.714 295.955 158.887 296.02 cv
159.06 296.085 159.249 296.118 159.453 296.118 cv
159.657 296.118 159.847 296.089 160.022 296.033 cv
160.198 295.976 160.353 295.887 160.486 295.765 cv
160.619 295.643 160.723 295.481 160.796 295.28 cv
160.87 295.079 160.907 294.833 160.907 294.544 cv
160.907 294.255 160.865 294.004 160.779 293.792 cv
160.694 293.579 160.583 293.403 160.443 293.265 cv
160.305 293.125 160.142 293.021 159.955 292.95 cv
159.768 292.879 159.572 292.844 159.368 292.844 cv
159.572 292.844 159.768 292.879 159.955 292.95 cv
160.142 293.021 160.305 293.125 160.443 293.265 cv
160.583 293.403 160.694 293.579 160.779 293.792 cv
160.865 294.004 160.907 294.255 160.907 294.544 cv
160.907 294.833 160.87 295.079 160.796 295.28 cv
160.723 295.481 160.619 295.643 160.486 295.765 cv
160.353 295.887 160.198 295.976 160.022 296.033 cv
159.847 296.089 159.657 296.118 159.453 296.118 cv
159.249 296.118 159.06 296.085 158.887 296.02 cv
158.714 295.955 158.564 295.847 158.437 295.697 cv
158.309 295.546 158.211 295.347 158.143 295.097 cv
158.075 294.848 158.041 294.539 158.041 294.17 cv
158.041 294.913 157.895 295.456 157.604 295.799 cv
157.311 296.142 156.882 296.313 156.315 296.313 cv
156.031 296.313 155.791 296.268 155.592 296.177 cv
155.394 296.086 155.232 295.96 155.107 295.799 cv
154.982 295.637 154.891 295.444 154.831 295.221 cv
154.771 294.997 154.742 294.749 154.742 294.477 cv
154.742 294.204 154.778 293.96 154.852 293.745 cv
154.926 293.529 155.031 293.345 155.167 293.192 cv
155.303 293.039 155.466 292.923 155.656 292.844 cv
155.846 292.764 156.054 292.725 156.281 292.725 cv
cp
@
157.896 299.238 mo
157.896 301.594 li
157.896 301.9 157.939 302.162 158.024 302.38 cv
158.109 302.599 158.221 302.776 158.36 302.912 cv
158.499 303.048 158.656 303.147 158.832 303.209 cv
159.008 303.272 159.189 303.3 159.376 303.294 cv
159.563 303.283 159.746 303.244 159.925 303.176 cv
160.104 303.107 160.262 303.004 160.401 302.865 cv
160.54 302.726 160.653 302.553 160.741 302.346 cv
160.829 302.139 160.873 301.894 160.873 301.611 cv
160.873 299.238 li
154.742 299.238 li
154.742 301.849 li
154.742 302.093 154.777 302.319 154.848 302.529 cv
154.919 302.739 155.021 302.922 155.154 303.078 cv
155.287 303.233 155.449 303.357 155.639 303.448 cv
155.829 303.538 156.045 303.583 156.29 303.583 cv
156.533 303.578 156.753 303.525 156.948 303.426 cv
157.144 303.327 157.313 303.191 157.455 303.018 cv
157.596 302.845 157.705 302.637 157.782 302.393 cv
157.858 302.149 157.896 301.883 157.896 301.594 cv
157.896 301.883 157.858 302.149 157.782 302.393 cv
157.705 302.637 157.596 302.845 157.455 303.018 cv
157.313 303.191 157.144 303.327 156.948 303.426 cv
156.753 303.525 156.533 303.578 156.29 303.583 cv
156.045 303.583 155.829 303.538 155.639 303.448 cv
155.449 303.357 155.287 303.233 155.154 303.078 cv
155.021 302.922 154.919 302.739 154.848 302.529 cv
154.777 302.319 154.742 302.093 154.742 301.849 cv
154.742 299.238 li
160.873 299.238 li
160.873 301.611 li
160.873 301.894 160.829 302.139 160.741 302.346 cv
160.653 302.553 160.54 302.726 160.401 302.865 cv
160.262 303.004 160.104 303.107 159.925 303.176 cv
159.746 303.244 159.563 303.283 159.376 303.294 cv
159.189 303.3 159.008 303.272 158.832 303.209 cv
158.656 303.147 158.499 303.048 158.36 302.912 cv
158.221 302.776 158.109 302.599 158.024 302.38 cv
157.939 302.162 157.896 301.9 157.896 301.594 cv
157.896 299.238 li
cp
@
33.9941 341.983 mo
33.9941 339.627 li
33.9941 339.321 33.9517 339.059 33.8662 338.841 cv
33.7813 338.623 33.6694 338.445 33.5303 338.309 cv
33.3916 338.173 33.2344 338.074 33.0586 338.012 cv
32.8828 337.949 32.7012 337.921 32.5142 337.927 cv
32.3271 337.938 32.1445 337.978 31.9658 338.045 cv
31.7871 338.114 31.6284 338.217 31.4897 338.356 cv
31.3506 338.495 31.2373 338.668 31.1494 338.875 cv
31.0615 339.082 31.0176 339.327 31.0176 339.61 cv
31.0176 341.983 li
37.1489 341.983 li
37.1489 339.372 li
37.1489 339.128 37.1138 338.902 37.0425 338.692 cv
36.9717 338.482 36.8696 338.299 36.7363 338.144 cv
36.6035 337.988 36.4419 337.864 36.252 337.773 cv
36.062 337.683 35.8452 337.638 35.6011 337.638 cv
35.3574 337.643 35.1377 337.696 34.9424 337.795 cv
34.7466 337.894 34.5781 338.03 34.436 338.203 cv
34.2944 338.376 34.1855 338.584 34.1089 338.828 cv
34.0322 339.072 33.9941 339.338 33.9941 339.627 cv
33.9941 339.338 34.0322 339.072 34.1089 338.828 cv
34.1855 338.584 34.2944 338.376 34.436 338.203 cv
34.5781 338.03 34.7466 337.894 34.9424 337.795 cv
35.1377 337.696 35.3574 337.643 35.6011 337.638 cv
35.8452 337.638 36.062 337.683 36.252 337.773 cv
36.4419 337.864 36.6035 337.988 36.7363 338.144 cv
36.8696 338.299 36.9717 338.482 37.0425 338.692 cv
37.1138 338.902 37.1489 339.128 37.1489 339.372 cv
37.1489 341.983 li
31.0176 341.983 li
31.0176 339.61 li
31.0176 339.327 31.0615 339.082 31.1494 338.875 cv
31.2373 338.668 31.3506 338.495 31.4897 338.356 cv
31.6284 338.217 31.7871 338.114 31.9658 338.045 cv
32.1445 337.978 32.3271 337.938 32.5142 337.927 cv
32.7012 337.921 32.8828 337.949 33.0586 338.012 cv
33.2344 338.074 33.3916 338.173 33.5303 338.309 cv
33.6694 338.445 33.7813 338.623 33.8662 338.841 cv
33.9517 339.059 33.9941 339.321 33.9941 339.627 cv
33.9941 341.983 li
cp
@
31.0176 332.102 mo
31.0176 334.652 li
34.062 335.333 li
33.96 335.214 33.8677 335.101 33.7856 334.993 cv
33.7036 334.885 33.6353 334.77 33.5815 334.648 cv
33.5278 334.526 33.4854 334.39 33.4541 334.24 cv
33.4229 334.09 33.4072 333.91 33.4072 333.7 cv
33.4072 333.49 33.4429 333.279 33.5137 333.066 cv
33.5845 332.854 33.6934 332.661 33.8408 332.488 cv
33.9883 332.315 34.1724 332.175 34.3936 332.067 cv
34.6147 331.959 34.8726 331.906 35.1675 331.906 cv
35.2524 331.906 35.3618 331.916 35.4951 331.936 cv
35.6284 331.956 35.77 331.989 35.9199 332.038 cv
36.0703 332.086 36.2192 332.152 36.3667 332.237 cv
36.5142 332.322 36.6484 332.432 36.7705 332.565 cv
36.8926 332.698 36.9902 332.86 37.064 333.049 cv
37.1377 333.24 37.1743 333.462 37.1743 333.717 cv
37.1743 334.097 37.1265 334.402 37.0298 334.631 cv
36.9336 334.861 36.8145 335.04 36.6729 335.167 cv
36.5313 335.294 36.3809 335.384 36.2222 335.435 cv
36.0635 335.486 35.9214 335.523 35.7969 335.545 cv
35.9214 335.523 36.0635 335.486 36.2222 335.435 cv
36.3809 335.384 36.5313 335.294 36.6729 335.167 cv
36.8145 335.04 36.9336 334.861 37.0298 334.631 cv
37.1265 334.402 37.1743 334.097 37.1743 333.717 cv
37.1743 333.462 37.1377 333.24 37.064 333.049 cv
36.9902 332.86 36.8926 332.698 36.7705 332.565 cv
36.6484 332.432 36.5142 332.322 36.3667 332.237 cv
36.2192 332.152 36.0703 332.086 35.9199 332.038 cv
35.77 331.989 35.6284 331.956 35.4951 331.936 cv
35.3618 331.916 35.2524 331.906 35.1675 331.906 cv
34.8726 331.906 34.6147 331.959 34.3936 332.067 cv
34.1724 332.175 33.9883 332.315 33.8408 332.488 cv
33.6934 332.661 33.5845 332.854 33.5137 333.066 cv
33.4429 333.279 33.4072 333.49 33.4072 333.7 cv
33.4072 333.91 33.4229 334.09 33.4541 334.24 cv
33.4854 334.39 33.5278 334.526 33.5815 334.648 cv
33.6353 334.77 33.7036 334.885 33.7856 334.993 cv
33.8677 335.101 33.96 335.214 34.062 335.333 cv
31.0176 334.652 li
31.0176 332.102 li
cp
@
228.653 355.995 mo
228.653 358.351 li
228.653 358.657 228.696 358.919 228.781 359.137 cv
228.866 359.355 228.978 359.533 229.117 359.669 cv
229.256 359.805 229.413 359.904 229.589 359.966 cv
229.765 360.029 229.946 360.057 230.133 360.051 cv
230.32 360.04 230.503 360 230.682 359.933 cv
230.86 359.864 231.019 359.761 231.158 359.622 cv
231.297 359.483 231.41 359.31 231.498 359.103 cv
231.586 358.896 231.63 358.651 231.63 358.368 cv
231.63 355.995 li
225.499 355.995 li
225.499 358.606 li
225.499 358.85 225.534 359.076 225.605 359.286 cv
225.676 359.496 225.778 359.679 225.911 359.834 cv
226.044 359.99 226.206 360.114 226.396 360.205 cv
226.585 360.295 226.802 360.34 227.046 360.34 cv
227.29 360.335 227.51 360.282 227.705 360.183 cv
227.901 360.084 228.069 359.948 228.211 359.775 cv
228.353 359.602 228.462 359.394 228.539 359.15 cv
228.615 358.906 228.653 358.64 228.653 358.351 cv
228.653 358.64 228.615 358.906 228.539 359.15 cv
228.462 359.394 228.353 359.602 228.211 359.775 cv
228.069 359.948 227.901 360.084 227.705 360.183 cv
227.51 360.282 227.29 360.335 227.046 360.34 cv
226.802 360.34 226.585 360.295 226.396 360.205 cv
226.206 360.114 226.044 359.99 225.911 359.834 cv
225.778 359.679 225.676 359.496 225.605 359.286 cv
225.534 359.076 225.499 358.85 225.499 358.606 cv
225.499 355.995 li
231.63 355.995 li
231.63 358.368 li
231.63 358.651 231.586 358.896 231.498 359.103 cv
231.41 359.31 231.297 359.483 231.158 359.622 cv
231.019 359.761 230.86 359.864 230.682 359.933 cv
230.503 360 230.32 360.04 230.133 360.051 cv
229.946 360.057 229.765 360.029 229.589 359.966 cv
229.413 359.904 229.256 359.805 229.117 359.669 cv
228.978 359.533 228.866 359.355 228.781 359.137 cv
228.696 358.919 228.653 358.657 228.653 358.351 cv
228.653 355.995 li
cp
@
225.499 362.433 mo
225.81 362.438 226.073 362.482 226.285 362.564 cv
226.498 362.646 226.684 362.753 226.842 362.883 cv
227.001 363.014 227.14 363.163 227.259 363.33 cv
227.378 363.497 227.497 363.671 227.616 363.853 cv
228.585 365.307 li
228.688 365.46 228.801 365.576 228.926 365.656 cv
229.05 365.735 229.181 365.793 229.317 365.83 cv
229.453 365.867 229.593 365.888 229.738 365.894 cv
229.882 365.899 230.025 365.902 230.167 365.902 cv
230.309 365.902 230.468 365.876 230.644 365.826 cv
230.819 365.774 230.983 365.689 231.137 365.57 cv
231.29 365.452 231.418 365.291 231.523 365.09 cv
231.628 364.889 231.681 364.638 231.681 364.337 cv
231.681 364.031 231.63 363.773 231.528 363.563 cv
231.426 363.354 231.291 363.182 231.124 363.049 cv
230.957 362.916 230.768 362.819 230.559 362.76 cv
230.349 362.701 230.139 362.671 229.929 362.671 cv
230.139 362.671 230.349 362.701 230.559 362.76 cv
230.768 362.819 230.957 362.916 231.124 363.049 cv
231.291 363.182 231.426 363.354 231.528 363.563 cv
231.63 363.773 231.681 364.031 231.681 364.337 cv
231.681 364.638 231.628 364.889 231.523 365.09 cv
231.418 365.291 231.29 365.452 231.137 365.57 cv
230.983 365.689 230.819 365.774 230.644 365.826 cv
230.468 365.876 230.309 365.902 230.167 365.902 cv
230.025 365.902 229.882 365.899 229.738 365.894 cv
229.593 365.888 229.453 365.867 229.317 365.83 cv
229.181 365.793 229.05 365.735 228.926 365.656 cv
228.801 365.576 228.688 365.46 228.585 365.307 cv
227.616 363.853 li
227.497 363.671 227.378 363.497 227.259 363.33 cv
227.14 363.163 227.001 363.014 226.842 362.883 cv
226.684 362.753 226.498 362.646 226.285 362.564 cv
226.073 362.482 225.81 362.438 225.499 362.433 cv
225.499 366.081 li
225.499 362.433 li
cp
@
228.653 369.006 mo
228.653 371.361 li
228.653 371.667 228.696 371.93 228.781 372.148 cv
228.866 372.366 228.978 372.543 229.117 372.68 cv
229.256 372.815 229.413 372.915 229.589 372.977 cv
229.765 373.04 229.946 373.068 230.133 373.062 cv
230.32 373.051 230.503 373.011 230.682 372.943 cv
230.86 372.875 231.019 372.771 231.158 372.633 cv
231.297 372.494 231.41 372.321 231.498 372.114 cv
231.586 371.907 231.63 371.662 231.63 371.378 cv
231.63 369.006 li
225.499 369.006 li
225.499 371.617 li
225.499 371.86 225.534 372.087 225.605 372.297 cv
225.676 372.506 225.778 372.689 225.911 372.845 cv
226.044 373.001 226.206 373.125 226.396 373.215 cv
226.585 373.306 226.802 373.351 227.046 373.351 cv
227.29 373.346 227.51 373.293 227.705 373.194 cv
227.901 373.095 228.069 372.958 228.211 372.786 cv
228.353 372.613 228.462 372.404 228.539 372.161 cv
228.615 371.917 228.653 371.65 228.653 371.361 cv
228.653 371.65 228.615 371.917 228.539 372.161 cv
228.462 372.404 228.353 372.613 228.211 372.786 cv
228.069 372.958 227.901 373.095 227.705 373.194 cv
227.51 373.293 227.29 373.346 227.046 373.351 cv
226.802 373.351 226.585 373.306 226.396 373.215 cv
226.206 373.125 226.044 373.001 225.911 372.845 cv
225.778 372.689 225.676 372.506 225.605 372.297 cv
225.534 372.087 225.499 371.86 225.499 371.617 cv
225.499 369.006 li
231.63 369.006 li
231.63 371.378 li
231.63 371.662 231.586 371.907 231.498 372.114 cv
231.41 372.321 231.297 372.494 231.158 372.633 cv
231.019 372.771 230.86 372.875 230.682 372.943 cv
230.503 373.011 230.32 373.051 230.133 373.062 cv
229.946 373.068 229.765 373.04 229.589 372.977 cv
229.413 372.915 229.256 372.815 229.117 372.68 cv
228.978 372.543 228.866 372.366 228.781 372.148 cv
228.696 371.93 228.653 371.667 228.653 371.361 cv
228.653 369.006 li
cp
@
120.357 261.656 mo
120.357 264.012 li
120.357 264.318 120.4 264.58 120.485 264.798 cv
120.57 265.017 120.682 265.194 120.821 265.33 cv
120.96 265.466 121.117 265.565 121.293 265.627 cv
121.469 265.69 121.65 265.718 121.837 265.712 cv
122.024 265.701 122.207 265.662 122.386 265.594 cv
122.564 265.525 122.723 265.422 122.862 265.283 cv
123.001 265.144 123.114 264.971 123.202 264.764 cv
123.29 264.557 123.334 264.312 123.334 264.029 cv
123.334 261.656 li
117.203 261.656 li
117.203 264.267 li
117.203 264.511 117.238 264.737 117.309 264.947 cv
117.38 265.157 117.482 265.34 117.615 265.496 cv
117.748 265.651 117.91 265.775 118.1 265.866 cv
118.29 265.956 118.506 266.001 118.75 266.001 cv
118.994 265.996 119.214 265.943 119.409 265.844 cv
119.605 265.745 119.773 265.609 119.916 265.436 cv
120.057 265.263 120.166 265.055 120.243 264.811 cv
120.319 264.567 120.357 264.301 120.357 264.012 cv
120.357 264.301 120.319 264.567 120.243 264.811 cv
120.166 265.055 120.057 265.263 119.916 265.436 cv
119.773 265.609 119.605 265.745 119.409 265.844 cv
119.214 265.943 118.994 265.996 118.75 266.001 cv
118.506 266.001 118.29 265.956 118.1 265.866 cv
117.91 265.775 117.748 265.651 117.615 265.496 cv
117.482 265.34 117.38 265.157 117.309 264.947 cv
117.238 264.737 117.203 264.511 117.203 264.267 cv
117.203 261.656 li
123.334 261.656 li
123.334 264.029 li
123.334 264.312 123.29 264.557 123.202 264.764 cv
123.114 264.971 123.001 265.144 122.862 265.283 cv
122.723 265.422 122.564 265.525 122.386 265.594 cv
122.207 265.662 122.024 265.701 121.837 265.712 cv
121.65 265.718 121.469 265.69 121.293 265.627 cv
121.117 265.565 120.96 265.466 120.821 265.33 cv
120.682 265.194 120.57 265.017 120.485 264.798 cv
120.4 264.58 120.357 264.318 120.357 264.012 cv
120.357 261.656 li
cp
@
123.334 270.985 mo
118.835 268.094 li
118.835 272.074 li
118.835 268.094 li
123.334 270.985 li
117.203 270.985 li
123.334 270.985 li
cp
@
120.357 275.016 mo
120.357 277.371 li
120.357 277.677 120.4 277.939 120.485 278.158 cv
120.57 278.376 120.682 278.553 120.821 278.689 cv
120.96 278.825 121.117 278.924 121.293 278.987 cv
121.469 279.049 121.65 279.078 121.837 279.072 cv
122.024 279.061 122.207 279.021 122.386 278.953 cv
122.564 278.885 122.723 278.781 122.862 278.643 cv
123.001 278.503 123.114 278.331 123.202 278.124 cv
123.29 277.917 123.334 277.671 123.334 277.388 cv
123.334 275.016 li
117.203 275.016 li
117.203 277.626 li
117.203 277.87 117.238 278.097 117.309 278.307 cv
117.38 278.516 117.482 278.699 117.615 278.855 cv
117.748 279.011 117.91 279.134 118.1 279.225 cv
118.29 279.315 118.506 279.361 118.75 279.361 cv
118.994 279.355 119.214 279.303 119.409 279.204 cv
119.605 279.104 119.773 278.968 119.916 278.795 cv
120.057 278.623 120.166 278.414 120.243 278.17 cv
120.319 277.927 120.357 277.66 120.357 277.371 cv
120.357 277.66 120.319 277.927 120.243 278.17 cv
120.166 278.414 120.057 278.623 119.916 278.795 cv
119.773 278.968 119.605 279.104 119.409 279.204 cv
119.214 279.303 118.994 279.355 118.75 279.361 cv
118.506 279.361 118.29 279.315 118.1 279.225 cv
117.91 279.134 117.748 279.011 117.615 278.855 cv
117.482 278.699 117.38 278.516 117.309 278.307 cv
117.238 278.097 117.203 277.87 117.203 277.626 cv
117.203 275.016 li
123.334 275.016 li
123.334 277.388 li
123.334 277.671 123.29 277.917 123.202 278.124 cv
123.114 278.331 123.001 278.503 122.862 278.643 cv
122.723 278.781 122.564 278.885 122.386 278.953 cv
122.207 279.021 122.024 279.061 121.837 279.072 cv
121.65 279.078 121.469 279.049 121.293 278.987 cv
121.117 278.924 120.96 278.825 120.821 278.689 cv
120.682 278.553 120.57 278.376 120.485 278.158 cv
120.4 277.939 120.357 277.677 120.357 277.371 cv
120.357 275.016 li
cp
@
646.541 92.6685 mo
646.541 111.658 li
@
75.6499 289.181 mo
75.6499 291.723 li
@
298.815 213.531 mo
298.815 216.073 li
@
264.755 201.515 mo
264.755 204.057 li
@
402.515 156.54 mo
399.973 156.54 li
@
726.02 292.632 mo
726.02 295.174 li
@
343.566 391.415 mo
343.566 393.958 li
@
378.441 391.444 mo
378.441 393.987 li
@
218.909 431.87 mo
216.924 431.87 li
@
163.955 431.87 mo
161.97 431.87 li
@
278.154 60.2104 mo
276.169 60.2104 li
@
333.108 60.2104 mo
331.124 60.2104 li
@
655.718 249.023 mo
657.702 249.023 li
@
723.308 249.023 mo
725.292 249.023 li
@
411.443 249.023 mo
413.427 249.023 li
@
343.853 249.023 mo
345.837 249.023 li
@
924.456 86.8906 mo
924.456 84.0557 li
@
924.456 118.762 mo
924.456 121.597 li
@
1193.68 247.21 mo
1193.68 244.375 li
@
1193.68 186.151 mo
1193.68 188.987 li
@
1193.69 352.887 mo
1193.69 355.723 li
@
1193.69 413.946 mo
1193.69 411.11 li
@
724.662 141.409 mo
722.678 141.409 li
@
622.209 141.409 mo
620.225 141.409 li
@
448.908 141.409 mo
446.924 141.409 li
@
344.471 141.409 mo
346.455 141.409 li
@
368.361 363.29 mo
368.361 365.274 li
@
368.362 430.88 mo
368.362 432.864 li
@
700.783 432.864 mo
700.783 430.88 li
@
700.783 363.29 mo
700.783 365.274 li
@
856.655 539.865 mo
859.489 539.865 li
@
925.976 539.865 mo
928.811 539.865 li
@
19.5771 427.054 mo
19.5771 429.038 li
@
19.5771 498.36 mo
19.5771 496.376 li
@
447.795 342.205 mo
449.78 342.205 li
@
619.863 342.205 mo
621.847 342.205 li
@
331.615 363.29 mo
331.615 365.274 li
@
331.615 430.88 mo
331.615 432.864 li
@
737.53 432.864 mo
737.53 430.88 li
@
737.53 363.29 mo
737.53 365.274 li
@
305.141 336.703 mo
305.141 334.718 li
@
313.641 161.138 mo
313.641 163.123 li
@
64.9131 392.59 mo
66.8975 392.59 li
@
153.827 392.59 mo
155.812 392.59 li
@
295.003 543.499 mo
296.988 543.499 li
@
383.917 543.499 mo
385.902 543.499 li
@
163.689 23.4341 mo
161.705 23.4341 li
@
74.7754 23.4341 mo
72.791 23.4341 li
@
127.391 282.777 mo
127.391 280.793 li
@
127.391 133.14 mo
127.391 131.155 li
@
279.593 148.942 mo
279.593 150.926 li
@
271.083 324.506 mo
271.083 322.522 li
@
164.93 307.195 mo
164.93 305.21 li
@
164.93 99.5571 mo
164.93 97.5728 li
@
235.687 378.194 mo
235.687 376.21 li
@
235.687 318.21 mo
235.687 320.194 li
@
60.8901 344.12 mo
60.8901 342.135 li
@
69.3999 168.555 mo
69.3999 170.54 li
@
260.242 23.4341 mo
258.257 23.4341 li
@
349.156 23.4341 mo
347.171 23.4341 li
@
69.2231 485.589 mo
69.2231 487.573 li
@
69.2231 456.429 mo
69.2231 458.413 li
@
105 458.413 mo
105 456.429 li
@
105 485.589 mo
105 487.573 li
@
928.811 27.0669 mo
925.976 27.0669 li
@
859.489 27.0669 mo
856.655 27.0669 li
@
1103.34 539.865 mo
1106.17 539.865 li
@
1014.42 539.865 mo
1017.26 539.865 li
@
1022.61 264.056 mo
1019.77 264.056 li
@
1111.52 264.056 mo
1108.69 264.056 li
@
621.847 388.986 mo
619.863 388.986 li
@
449.78 388.985 mo
447.795 388.985 li
@
489.123 286.299 mo
491.107 286.299 li
@
578.037 286.299 mo
580.021 286.299 li
@
621.847 65.9531 mo
619.863 65.9531 li
@
449.78 65.9531 mo
447.795 65.9531 li
@
929.5 214.052 mo
929.5 211.217 li
@
929.5 169.425 mo
929.5 172.26 li
@
851.29 201.063 mo
851.29 203.898 li
@
851.29 245.69 mo
851.29 242.855 li
@
189.34 504.888 mo
191.324 504.888 li
@
99.9058 504.888 mo
101.89 504.888 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/WBPCOJ+SourceSansPro-Regular*1 uf
/WBPCOJ+SourceSansPro-Regular uf
/SourceSansPro-Regular uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 14.0
%%AI8_CreatorVersion: 14.0.0
%%For: (Tiago) ()
%%Title: (piccolo_v1_parts.eps)
%%CreationDate: 1/26/2014 10:31 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!Q;=*HF1ZKQ_nC\^1+Ci\`WE\KM+%5u%QD(qXi2TZEPm-d'lhgQkoDE8C'\T?'?)@t3[.]HCIUakWf+gX=LVT[4HZi,*ti!Y8K
%rX`ri0Ka$a#sWn5YD7n]ns/!'RsFLZhZqn^JpnmL?O1nn6l<UkGp8qY!5=oV:6'+1F(eD)$+\r+\#V*gNuG<R7N97oBF^Vm$pAX=
%gAYs1X@ABqiB)b\joF*n[mt1"2Fj6"!9/GRkJu,/'"2QsGIuCgS8,E,QNP.BE^^bPe9Z3ji0Xa:^Z*0cF'PlFcc>^GUu9llk]bnq
%osVO=h#olqT:+T[S&sqT,o`MpjKuQ(chHWpBSaAZahn,j$?QGKn$SMpN]q3nd(d#5d'`!75`H8smH2mCihX#pon`GFDu9IB-P-Ut
%#!X1$"=$)p+L7X/pk$46+EB0s_8="oo3.&WmoH1cM.R"5,<2%kN%fncLi<J)b5B2l#Uk:2$:k"8?O4OYIKK7OGU-\4rS`RQ(BH`$
%CkO/UMQkb.=XF)OP(,t2-#tgg=X'cC6Z`'1J7c=KO(%Zfk0`L778iNto"Yea?&m92IbIQ=(&JpO;-8f#$#*l-r*Q<iCIHFh"5qAi
%l3I\%#/FXJ1Kb[q+X*Tm%$LIIgpFL1e6+_jK`dp&0+<RP#nW\9-k\:C*Zt0tJG\hl+lik2$R:mE!g&H#H@`DP),(Sm"NmGH6.U<p
%!%+XCbP?/l79&q'We*[u&,6u2.8n><cR0ki/bC,A6r-qS?\JB=)$utZiBV9_=on'954O^gbQDMO+hsFW[qdrnO>S+8JCQQ.$Wl(C
%o9B9,ScK,;h;,j&n,DF,G^ke/"1\X:=/6uPoZjG`?R4Q\YW%'-[X^c5TZ)/_-bV;iK?F`&lZ>i#"r?lP[pK4/hW\];-Rn2-i44';
%U]:MA<oh$/4-DWU[`A>[1\EXR,AOj\cG=6`YZKoPi2u/C#6eenn-8q(I0T=L*&s1].JngJ1d6Lu%pj94*UOYLEfL'B!"5@iJjhUE
%i@4rFp(F1nb?NCVh&]U)d4PlQ+QDc_QQu`(]Jk*040\&\GgPoM*%?d#9`BPq61:2prfEU('K(+hlt+pu-emH!"su3uOmD+@\H/mh
%#VVkNE\^g8[Kl9\cYc$d]G-M7i5M[>4ds0(!O@;Ko'TQ!4a?S.pE'=jmZ2m3b:Vg=/1?\B^5XJ["6j)5!UKTpkdTdZbWg[`jOA4X
%)?EC`%K?Xrd!E'k**9(/i@oZSHQ5o@*VaV/>0U_#b`@+T?3kHfnH/cVVD4qOZ^I]TS*!24L'-qBoA2%I"`GHqm`hMn!L17TofVtT
%R;Q$%;3V6$b$:G6@GuW(#Q^;RrBd'(Te:S`:A:a5]sg2.%a3\nO12i16(Vbr")?:<[fnFo\[QnW_q&9i!H''3%bUh_gNuFIiXn8D
%Ol5U=NI&MD)'O$Z8FM3X#>)[*da1SbAH7VKhHSF1Q?91(!6(+:6NV:EBS9U$q3LEs<q*tlBu7PB?2h6b5L@>.d]X^+9Lhs0Nnc^G
%kf3orN'H[TGQ2F>Bu(Xb$sS(O,,0g)^dsF85_:>tR;AQ7&N'u.'t'5$IeV!opW>js"a6qrLG/gUa5St`W$C!lZQg=oN]K$#]ki4u
%3M=pr]L1#^_oCsI*YtaBEED#@[WhbWV5N'&#sa#4#,(8ADfTm&)f3_/r28[sGp#8Fjj("0$:o5q1sf%7lf]kors\m6chf_C#0[r+
%!<$\^o,"skmKA'N?NA[rhF?!i%rbq7C]H'7!tKKk$'[_c"Gk#akC:qaG'$gdCC^^54U78O.Y1.jW!?l)c[*60/ba#jT^WccZd.D.
%;7ENCk\a;=rPHq8DH@fgV?-:EV`]*phtb;8i>Tl_!"]+?^p>7n49.[S>:_.Bn7A24L_S^r`C1G.FZGE?7i\h`2uX\>+JEGk%C!q`
%8/1TYgTGbIOY\g1UE07M[O_\fno+\-C^MJ`gT;n\06np35D*:[iQhkB;Vp\NqtC;C1IT&mhLUn1!N#a/2gCrbCXV,BD44,UnW7!#
%bYSOo4;di@!pk(%_2$3]T`=D>i%)"t.gdkB/^dA2[bS>Vn66'Dq?F_5D=AL9%.BgU@<r0M!ItIP'QfG&Og2NJ)8)XBn,jR[+HU!0
%g,*T(J/&I"3(2U?lftb)[mXOqpV.h"V+tZ5!rgC4*T>A92et8N<&@OOUSXGba<W`75GU_."SI8shZ5FqY=]Y!::'A(DKGkpn1aL?
%5<q\i?^DEsSe:XNq4[[bHNjt[_W.$"p?sjmj/8[lXAWdn#,W!ZCbF3s9i7\c<\QJL,%ro<!/hFK3_V'@i%5%/EKB(N_]L:#csrPV
%ZQK0(U@p=G>+5b1n;?!"2-M$2`pgfNU#?2,Ff$2.S%\U_s*.FYJ8qZG8uq@?LRdWR'AM%0Nu6f"M.24LSj<FLBp+6a1`@A:'fNfQ
%;d<*4>b*;>8?j.o=/<!aTkC8&^GEb&66Z2lI^&n-r\GB4NcT6r+1CKbJGB#&Z=n>EJd*(ATjSo+kLBNlFTX\s:[?@,Y,/e'rV[8b
%n,EEOI(ri[rqD4gB%tXMn@k'\Q.in:S+D,ceE/YD[>+?Ef<G8P6\^:"r?4t`k7;?glgNs-Yg>6cVWC$OI%ardj7<F28%0W"p5?*4
%Ytb61ird^WZe_X@CqMn29;=u%%eOq>XtcN^oT(^VOL1ecqC(1XT4(_"AbV8La-o,LVSLuu6"_BCGK)aV@OA[2:=,GYrV_SC/rscM
%^OZoJHgT'u!o@MIV9:i9i*nKUMqYs_J!6+j6'6Nb?k@R5(b5qK/!?Dh%ds\7N%ngs)&?qD*2UJlrem$"E#WCss2@iG%E$h'$p6rI
%W>@OdOC:ZJKgHWGX5OFSGf$[ai%RN'dRB0#MoJ0`72f@j^CQ(sFEn^_Q`K5!C[Ga=+\/!TBJVl5k+n]Uh8'O>Q`Sj1EGBAMRSJ.^
%d(NPBp-7!_p:K]XqV,\kA;,XH@jsLq/Np1-AU^(a<trsbl*;I\4DYJ1,Ikq1r%CqT2I2=[G,$(Fh>MAB>bNRBAGs:j,O-u>Ni8pc
%!cpjkFls/0\4/#dZD5ZOUOA?H'at5<c;9%&^^V!'65;n*QA#c4S*f9LHTW/-oZ!8%gEg7rd=F-5iDp`J,,G)Si-6"1iJH>C323'3
%$Pis<8q?CE@HDqOJpqJnSPpd]$8h!e<oYpLh@O&`A#pa_4$YT];%`rg#AUX!mm_DV`LL+,!E3sdW&_l&B]TW__CJUU'#>]8gtM1L
%%o7%]YqBjUX4$23\?-0</]tW;E,dD9X_fG\'bjoIf"r1SkVbcWZ@0q>'e\jM:lJe:)(-[WX5shQ"FBA52SesJ/a$[o]s;-Zd.T,U
%g;*bMqaQC6HI3ZGRT&rfjQ$;359?prRgGu@E5)YL?ihqMP:dZ3Wti634!_3=]`Lu@<g""%=E,`djT%]D`Xpe"qZBO7iS@*k_o\45
%P#IdZ20bb&#P%EWV6-shKE6n@3n':iW$ds1Z^,9@/8i%UF>h&M-f8TP5[iA;_.XF3(%,Db.eJ1.`u_J1TOa8EOg[TT7]Y'r@<'^,
%O:nYh\JE!ZcZ1rK$ms>!ZL'%Q%!5:^JP\E)aGLOp1:C,>7/AD1MQl7u:7&ls^WL^.pLF_b[>YL$h.Fj61W+6cf'7Fnj9Veo.1&Zn
%`#WT)O`9!J`j?0JG3JUf&ZsXu%aIBIP%>o[X&srZ[2@`28ASgaJ.1S.ctZ9)i^J0EI]E[`(+'L+[ufiqns20SB`;$W"FdXce-;h\
%]YnSg9E_r'%Oq`3KmlU1<l?higZp!9-#7k:UHEW$>@lL'7T4W6Qds-=J;7P0-uCGm)Sl:286Djfa8rd3a;GiUe1gl3aAK`TVpncn
%"L+#.#D?q@df(Z('(n\R<2^P;;Y3TjEW8d"XshU7]WTsKC?jJMF-$/'Qq$Gf#`^>lgB1r=jIg3Fr(F0hW7>cCq4kehFJHriY=`$G
%kQ"j0c=E7&ebT'^Z\QX+>)gPKCsm&T!WJKZ^Ls$gB=\`%NbkKhEQjEe-\lO,=TS3&;X;Zc1L@q@X57GUc:7ph<h\&S]/cOTB!k)Y
%*3,UXiDef-)X\Cqf:Nbu8_I_&)V^AN'AHC:m,'nN=K6f1)F5lSV>$Y%FuS)h[FhNW!4A18c\bLhhUbl`^e+T+3Gp2?KEZ*Sg2&b+
%>MaNibr"PTA1a#q[^N*u0t`WYT_a0F2`6!8RW%l=LY_G9U#%3uB1HfO95_QXo#Q>96S8Pi*^Kjo)K]@bP"9#<Q1bN=rF*[F+(R?N
%-CtE9iHrcVK#uI4dV]EV\(^'7f5@T14?\2l/+Q=D.%;Na0Clnf#CS07S3V`'),jM]FDFLAmnfEK:q]"48_2J$gY$C=WqMh2\'fH*
%f(tWd0B\ge9[#cQXrfH>A6#"qV3%fZ)ijXPj^C;MP=Vo0h2%6JA4g#I#\d])*+6!FXh1edk:hj'ade(uh,;T4*GP0H[%%.G]@^$]
%`H$o(1ZY-`TIEtbTU2_,:5>7S1fQ7^OFAN80Iif<?-sQ2/M+`Vl?N\0hI1]fH,2iNACgiu$W]@]#p]_OI.s=m]*,j@<]`p8U8_k4
%^hD>E7.""9!G;Fa'rEQG7'1_@U8'Fh2OLn@Mr]Z+XF]b93M`J63a2,<f?m^QEuiLo4dU;Q6j#U?akV&k6?d0[Rl2sEe82`oPl\t%
%>=6fDf3f1uXcWjF--"!k-2%^h,--fD/(\mG9<:G&NL"=7dtj696TS\SAOVFZJZK#I>?acT@)#c/NbfUpj>gBC;&-!VbO&_(MDdB&
%J5;VN0+@Z06K0+]ANMg"GE@3!K4&VL/cNg+R-4^<79d?o2!?.e+Y]7qR3h1eVjl@[3?6,&:thV@raajUmYnnD>%=>1X5^J8h3esW
%>VDiCNNlA8\nosaEobp2#MZ)&cl>cfMhrg210XRZ5,G4<,ZMhu:Z2Q6ml+b/551V;]<M03CuB</ii_*$[BC3LJ0l#3)(E!ojcGms
%?>?ILT58,+O,6HRj0?m*E7LgKJ2!3<4@DR8iZ\'pRIU%-Y4R$EgS`6>_nqfIRZE/ms8FVA]s>?Q1q=K))9Y@Y%n1*(cHH)T\s;r1
%Pd(SM76a`@T>G4j](`:s3S20R?n4ub!"GZ(iG2O[k%:6(U!,!ol:,ES`?Di!ol1R4^+?f$?MdI9PL_Z2&EraM4.$Pei037]=.Y_;
%)0blQ52C=M2fpFYUZiA`M1"'JPPc]q@`pD%_cT&"i3PC!c`Sp6.Vil;ZK0DqkZ#cafOQc6JY/7Rr2d?";<+$f'V^of?d[u.1<lmA
%P#aO'r&CQh:!510J3=XJ/7A!f0\6%nV)K(RgA1LXo7kg<O3:A@]:\oIe>/$bJ"en-Eg!Ki4+M>p.iE[)@FOEqlQ(OJ`h+;hDAS^D
%Kc4`Q%)(@^.U.q&ht!p@!1#M'b3qW;,*^mnSFOns4\C[XT*T=Do)ON0#Wg1K>2FmM_3YTV<?h$E&%WV_m7_:4rb6i(Gt2jI_<C5a
%&5<^"(a(6*#sa-&9k?Qci_1'Gbbt5?^.Pl\](02b1nmL)!=*g'B-NI^&\7!#OTG+J(lqD+T*K$f\K1itoh9m)"'T7c>SfU"0&X1Y
%=4iE&UYc-m9Q#[-SKml#J$:$mStoT$DeEtMXo@HQ,O9b)3,ZK!)@tYI\t7/'EjOp!2td%cKr*E>J$1`*$/,nbqtVE'lt$%MFM3e5
%IN)mcha)0s[XOS[Z82^qBUJQ%KjLZ]*auSS]<8$s2+P'9ZVRVYF]_hr9)u95@HVoU-9Iu0H:Wm#Ga+)n%]4?KE]BX#:-r1d-.p?'
%;FVF$'<IjQ()D5WqpU<\nJ+j^YeioQL\N"k'eeVJO#UCibVh5<cBjp._T?@:K4^b:@XgdfJtip@W_t@ELD:g!:#*:;I2-S)W[EeF
%>CFA;5D[cO&Q9s"I#X3kRq66Y/qU8kH"YB#i;"+hKAI@MRq@*V))VRuf@g91B=;I9Mu5aQS$ZPOTg%unSVK[KeI_g@(%Z=p3$L:5
%OWUlt"_c>dVl:=8Rm\NgWV(`$qMUdLg(et.)-B"H![EU%Vc3:L1^`rr.TXUoqLgY%r.:b!r6W6h-F6$&(C4T(mWo,[*Y2TB\.I5]
%pM8s5Hlo6Ob\GV[VH\uH4b-CPEWC9.fCkU\=PTVEo]p=%"g<>X1-oPi_2(j5DItI(6%??O=sW5lh%D6c!J]lPb?%6Z+1kA+J*"]L
%`ETqP0\MB==jjLUpJq!8jc1SM`p3eaL2X;u@.DI%D7;(7MmuJ(lMIcFOcV+Z[g5A\NfB*FgZ.`AYB_Bh+[auoTfM<ZffWs[rc6$$
%q\bLQ'6>:K+'7pqk#WkP4H6/O;XmZ9".FU[J39c513igY9K/"a5Q;ETL,'59Z;+8\W.gfuiBm52ilQLi'+.`0Aup#t:LR8X3Y23`
%1KYBaVWgmAhI?\9l6a;bUQk7,I%EWB5W$?T,Nd7ND4Y=rr!&e[OTtaso/_e\#"1i5'gTCl/,8b-URNrsG75CmK<UUP&43_K8RVn9
%cb33ORHBn)d!^MZ6Vp#q&/okj#UJc&4k$3VA"]N8+Z/\2.@%D<9<m(-%!;P4H8P(^_<[@R4UtZ'PMjc6>"DA@h_n$1KT*YOLd702
%Dgc5k%+77X+WBleaj9FdP9H>#*XuO/ZLe3(A_OmH=Aju(6FZ!idS,;G#GOELK[OQ+9FDa@rJ:^"4;E9u]Rf37JNZtWUMm4?a2RYn
%.D=(1KLUu.oPbBs=GdAR%3*L='etMPe-le3U.GS"?=FId0Z;cZXB'Y_mg0S,#`m!Z:!i3\T/,rddc?$'l1TWEE_D-iRIE)D%YUp@
%E.'N`!umb'DG?uo<:A7f'6"jKqts+ZHCSV$@R`1+b^aE%Tf!:agOjYB',hK'#X)5SLY*qqUg'DTVNA*H/`6lX#bh6RUc1Pcc>/-;
%Vd?`<FEjH^_oQgSbZY#7HXP1\ISt+Hp,or,$rcuDc``&RD#tY$E+gZ34$m/iq1dZFkcK\)*n8`qghfj82IW@ss5906a</=DWK,LE
%aY&UWrEQc,Rh6,Z1F1GQRp8,,*)L-YgoaOj>`?[Z>`7f%[Mm0A?\PWSWRk[1#EEP3Q_1ckhFu9b\-9#]Sf,jqUa'7+9eKsA<K7Z_
%2N2eP&ZuMS4/$3dr)`(^7ok?2N&KEc!-J1t2>>]!o_O])*J4P1YiPucCRc1]SdR<HY&mulGV6'Xa>'\6%ZY_673;$XL\G2n.h>Wh
%k+VbC_jF0S8d8G.4K3R%s6CX8jDV@G=6Ur2blk-KK70888\I2@0+XZ[A1D)S+s)mjQ-`Msgn+jQ4h:--BZ*gZ3ZaB-bS6j3V,1f)
%CSg@a.U[V-9PGR0H_TSBcm2<gK+;c>'JlfJr#PS;!"JB<S9C1!kDDJ7,Zn\4E>\\BJ5<=8EG$1[,0lSU=U_d:i5<L8N3Fb.S#_be
%]KZA7-a1WQO_Pg[N'#d7OFUY%IZ<7cdJkq6(E^XFkj`W5ZG<@C%+kZY5j%7O#oo5Mbg.l*..eG_R31G9a?SU-*fEeF.h#0Q7H@#F
%1PL)Q_o"bH'aC9?F!8:Y_W=?O7+Pe8^KgNipMaeDX(5NTW<Qf"Xe2#a*d\F^Qfhrc]&`41[r3?Uk,edpr>`ieXL@`%MYfG+8Plb:
%;hFu!Vu[fs1CGXh>."7UVmdqg&As[90B`CJYur>V('(Q,18Ts0R)*`CHZ'VC_ttPsM,iBeK9lPhZV8j)>2GO=9U/Ml@<_Nuk^!=@
%ODDE.lKYcR(tsrW3*'B94s"N<D_FjYFQ%$gJMrI7,BamElB>%7adoJ/N\?.9:AMns:XDhHPq7NaD]'5)Zj!Es'XQ1jaZ_m`WP4;p
%4b:cnG`1<ZG.Cra;>A!+%ZH;CDcQp;7l3I2pVdE&3P15uGVNE.TdEW!Cj^t8^triHda]C&V<@ESqE3"sf+AhBJi49]kEB"#>;F[M
%ah9PY4ESAhNjcVa#,:1FKk*_SC3VNbcRTKU2E/\m!GH/:cgC47IQ2Rs#Ml!k;nn`ONDj6nNr+>8%c0DM@RS@8#L2jMDgs4EClnRD
%7kR!#_J=4+5_\'dG"o5*VjiG#^-%f*eAjpaZ,E=%RG%0F-h`\rgEJ:9'Y]98qgcNO1T06S[O#!]0AeR::=k\YEAZhBf9W`Cf?H\Q
%1R.^OVj,PYTbYeH2ckI33M6QHMOFNJ*H0)C5MWR"2[`!ZV3dYPP%@\QHWR@ZZeLS`_b1#@?HaL?!,"\nZ.XPH+bS;UeEZ?`mrS\F
%6@B+%CH'HG;P!^&JO<]Fdl]Pn&%)I\$8[7!a";UL2.G\A@[r"cWE^.hIJTP[U.agq'<q.7ksDOSEl\\be1TY^BO[UgpCFZ4*Co==
%'!"Zo`5mN.#K>Mnch#dEn(RJT+=728\euoD(=reH't4#%KZsfVRJ/tU4=t7<-5l.cZd7<";SjR#h?RV>#:B-4/"#SNYJ=sb5[b^!
%iAZ!H%GF%/R0O7)W7>;FZ1(tTk>ntjD]ghL3A;CnZf]jt]/8=K!.Xn3ktRnbQ")'r2j!e!gW;)=2"T_kH8Ju'`A0NK=jHXkDG*jp
%a:V&.<''Y3IEp(]?f$1&4BNjSNI4[U(9drH^%?JFG<hmZ=ba8Wd+8fBqk.08Z@GpfO$TBXQUH;Nq,TNjGt%Gf0K4@36R>H"%Apld
%F!7%PS/8K1q.o6o&ML%,hOh0&PI0@3eS1:=Km<#.kRN]tAlC2U7a=rk*Ap6Y9Go[4_X9\\"aI#OcoY:^rY%YU(KXCJB-L;+6%/@Z
%O7g$9nc>_Xhnp$*$fI.c9<'d`*<j4l_9+LqH(DNFdHBs?J`RC@[">0l-Hg5]E9m3V9u*lebSo\4d1f\ah?>q7@`_@@KbPudO1E\H
%^X'I1Km_[)s3Lrig&'$ql\WD+e%D&u3rA.d""K&[JC*mP!#r*&c-9E+n-?5O>-J^aqp2J*6bul!;<G\<2qq4O)8;(14Z^'ic(T"u
%4%oGFA]4F(csd9sn1AL'(%/]k98j/S/98_J!t"=S8<Ake:-/>:#<,\fQ)AQI!W@PsU73Cf"6`8qS\1$)D%l^b2L@DK`SQ-M<;]MC
%nVe!'j2mom4L$[M(F<i;JPT4JJ<8F?eIO"\rd6cbY.d/`J]j]PX\`(("em<DUeHKr-9hfQ!,B!`/jh:-3n/O,J9g?9dbFE<VLSkI
%^D^.)@08t62NL$^I6b9M/4No<<lFs\gaF`S/oH^j^iF=0dMS)t]E$OZ_X`m3(!*4D]3i"OCC:Tb+O*X"?>>2&+'FfFq,ll_"9\d@
%kVKOPV='JD_/+o3iQaj4EJ1(H2<pdP.;l6(=N+4\Nb)7lh3Z(+(N>g.Q&kNH/8c3VpC,+cr?/clO`4+6$o`O;o]rr/aLUTN;q?Kq
%3HEpkko5;qP+S+nT>8o1;MBMn[3W.FIS6k%jA*a-CPr@@pYS9n7$=e^Sq-aaHdIF51b+5Lln.\->Fg;!"1MIG`"Q76eU)hXi/pA9
%cu@Xp;Xmc'/i:qOd$i)b&?b-PluPA]KbTJ%Z0t2-5m]t-*7^hO`SQ4gbd2M-NlDr@QYf_>Y.R%C0S?E*W&r>'_o;QTDPXlP[Yh\\
%`S9^,N/Urk@+;B'+mR#7)OZp_674.V=EGV5iULe<ck&bGp0U98?j(APf^).,;F.s<jLg('\34HB3AAVGMas5O(iL/sWB"A[k-6eo
%B&b$)N"IA/Qgb-&k`#R39)L-oFJZe.bT.W7)T8EHajDq=LYX!b1_kWU-3O*Y6Y?6\dqQ&8rp5;*a_WE<Gb:Ft$YE#M?[RK2[2LuD
%qp*XATUf+#=n8QEB,asKTbf(G\:,ejkkBRW)P6?EYH,I.80j8-WP,u\b#KrU_#<E>:/8C+8H=a!W&6\T@+_Vrc9CCQJY4I[3drW4
%M-iao\4M_<6G,!\R$*Y5S=!d)'-l!"N6fnU3$2'B;[t)uJ=_.#6d=jR%ScWPrP6ZJ7&/5qU_P1FN^dXB``pE"^UjMfF3*k@5J"u.
%@!jMQI3'1YK>WS:-hkX2ntX;<:,mu''VoAPk&nFifl,WnS+1mPaZ0sS!O5*t;3871K%g<LmGJ7`fR!TBmcDMSAN9'/h.h^K4S^0c
%WUC`Br;',%k(JuuH363DL[EPmr-9XqU`t+rXRT?:Z1LfNY$NuL%_KjpSn/3uK2sR:-RhobSKPrEb6&\61J-3!-+ND)mm0PWU-?8X
%J?C$PA#$O#2fs&Qq<s)*5-eJV#Mhffa<#P$VYsT#?%;ldKMAT<Ta8;=5K(#+8^JO"4PB,Fd&-a#6k6gcN;WfoJZ")7E:nWDn*Ynm
%)?62P/RX.k^bnosEdL=G[lR,F!Y<uh]WX:I7`[l84Ml4sNrD0'5*nF=JDE1MaSc?)BWVETpQAgXVX@]7Q$nj`!>t@t@4p34R4t/#
%7c1TgO?aLG%rsF7$%:;gIb`'NGVLX6h1s!<Bo4+jCbV\-6/`X@8c,`k3'J##O1r>6ktTUY."']3$+MBIEY[UCj#b<`*tDcAHKd:(
%mC(&C1h;0B*<F&4Ehe6&!&:k\li=qY0[:c!RQkq+/Hm=cBE$!j!NXQ2!c+dCcVG0"!30nhh+-2pp\W&0%=6HqD^?7LpC,KP`T.#G
%q0s'*-D*9,/r*3WcrEhRHS;R'8!LTsV$tu*49T3$BD!;\+ID0qa486GkhA#$.+o4[O#FGI-!.0jIanhMH\>4`W_;iOc<D!A75gX$
%IBSYdrX75!SYcmHDlK?ITAlo6Wm)$05$%`CBSs+Db>WG&=O*54<PSBgjSeXfUWu)@2quFUoUX4sfsoSoL<WBab@]'-hp-*=hU'=,
%To3F/j6^1TZ73N1bb6$%o;MU;aEj/uojqJ^;PQI(DblF2+QTO+7/^+'X25RmNqMKn&tF`ON`Y$#Zd>u_Z(rbsG!%h4pUa\IR.+2`
%FSue&6F_8CZr@DH=c<b)F?S$ni][l]7Ou;\f80kB7>1Mu"&YO334k',U!CmqL-,hq^Zp(EJd&)257/ARRO7jsHo:!-V<'2uV06C)
%Sol2QFRYM=YR%P0*IUu9P#TW5#Cu^`&6f[=P&AV*Cf/CK'<Jjn6/q$8[$cq&eNu;4Y2C]C?%RlE26]>fo_FcB$bNLk']'U*<\Fj?
%e1?up2f]=FSC0PcOc3@m9qRi]j:9a;CWd_BU:V5DX]i9*BO,4<eP(iVh4dBN*N=O_KpG/C!P$b^DdGFT8-;eqC"P5NBGpeUO;l)d
%oG85/UQ%QQeA4"X)"$;.I'!U"g69S(hBS-?Y8GoamEr-?CWld3*(d=MKUN*(+"]G@ljj+@QN85h?JU/2)\-'X@R;!!kb+$"@5[l`
%:SA]Cg[?Jr!8S_E$eW/`-AT_hGq_(`%3X%1oPQbNd4b6Kj5pU'\DYc4fDt+A[G2(Lo[$]!TQ?i;b]ISrk,s;#cg$57g?/SN!DRVB
%hLd2W`6h9d0UF#@q6%<_l1/=4**W8kHV-/M;A&[N3Zd<*"'MO64\*')ku=o^W`P&C<29T$Mj1.)THJ<7%V0?p>`Uh=j[tSq!UCUt
%=A.s*$Ag"W&fb2SM[(CG,V4bP=out/(g:b1c/BDcJM0Fo%r!+:bB]D$^Y'9;R\RX=-i+`<1+bN[89iLQjNO[\BZ$BE&X.3b"a?J-
%mb!'GVD$hW-e5F3i?`O&Jab&__DPsMn.fsj4(Br+FZqgVai2($58!ni9@V!FGi:i[#;KSkFi`WUOlB0Yr;&C)>@.^).H,Z%%5*V5
%jXO_]=!@`s`oqe)-/gLPUMDjV)XYlLLs`V4JlZ57O3r632N=l;DU.IcSd<R;fX%?E"H6L\MgnOhT0PV^5Q53l/)e[)IGnQu\F-,V
%&/7Aq:[_*thH'b/%EU.i,t=B`Wq/C!Hp,0=e#mQ(R=EDK]&$>r?VQl=a_[Z9oQO6j6[TDNYH5"W=!PmsXj[A<UW2Zp@9AXXAS8sm
%)"15O#H`.mT(d`@A?"rFMV*uKcG$DiF;B?>7b\XK(u<GIa64#F0eh2IQI28fq;L7J_SQ%RYOGHpGGIIOBHW.&l2I0D)eR<-8:0Bp
%2+La^VB"J#II_XWi?FC@QNlA`EJ7+=]pu<:Z$hE(=G<fCfAEB$o0<<pnFAruQ[5pi^mk*g0R>^<e7[?po(ZtYUGGb(>563)=T."+
%k!f[CJGL6<RKtD`N>OBpq=-!)le#XO=9lZk6O@PM]Gc.oE``>\MM`A1pZ>5S+ZJ2)puTnlLh>NpE`em;M*J.n2/"mlqTf1q'lFaY
%L[4F%YsKd>Qc3\hI#%/L^0!`4.or$38oe%m(-=p#+oK$d4H]TU.97ut4o)>uIbR9!227[pDboNG\rIu9Lsm8CX(5sn<6)U9=93&p
%oAZ`tV`o/B6t,uW]_Xkk#>a)+_2<C]&`R)q_@6/QC[`4"R?b!OW'M9hb%#kF43YIUitFR7-c=c0GF=$qel%[`i-fmPIXBBY>IC(L
%=<SSpC.A;X=:Qi^W4ldVYQi>_JT)a2J@.>S$JSShU6-CtWHeGVWKE+I/CrfR\>)#aMqdH(ju*2/;a=Fs)MC(fZL=nEf,eCDS7!oX
%fBeY0mA*j"jl]DDCX6j]N&;==Gl"d@'-_%DgWs98oh.gsCY<e<f6WXb/CsZT/4m(OU(\]QH@C&j"g%/fXBGE`b%%RM#.6c@Bp?Tj
%.PJtaGq'94q%RXn.:LJ0*Gc:La'*PR>LT8j`aa^;NCVbA4RNrhG&65YVhF^LHZLPj$<Zn="6V6NVR!MFmCQO(7BGCD<\:(soco9@
%NkV#G<frR%S"ABXTBO2!9,?i$clFTFh3(@a>R;pD!akb,:4B^,2K%e$?HR:j.I,T'B!@;DG0/``7N?[qNHJbm'TlSZ&]]l.lKHE#
%&?G+"C]2ZS432VE!:(jUeND5rcc';jM)Zb_!Lees]4m!2':BnJ(<_S:/H>WSKNR'.Eq.i-C7acX9&Y0sgI#IFg@FGI"!Q[>_E)fp
%'$>D?buVf(O`WdATALemmjZiGKB]XB.KQUcUBE)(#Dl-&_'"cPGU13*hEL(OBWT=!XX9o!;"3A#/^ej%`?qh)%Vm:$h2GL#j0ZYM
%@e<CH48IM,G-H3(!E//2"ZYLU.=''o:-UEmo'q$tDK)>Lqi=i2jWi.$;gI7r@^Xg`?g0#`JAH!LC/Clq(4.gNKpA7lZ219oWq:Ch
%27#LPQ>!0*hHa6i@l>gLrpIU+W@+1`df@rWrd#hc"o?5p;+G,PBlGQ08m&!.I&*CO'dnH6_)cX];X#W&l$Bt&Um2i\@rK22<p=<#
%l^L868l*4,cYhXV&acC17gT"iT",PAs+k'8G0HlV1kcBk_hdBQJCB5emVu2.$EoM,GiXd-;Kt5\iu-%5T_&qqhW*-&;amCrA;`\P
%&5._T;`ik5Y$0nY"pUPt/:Qe5&rkO&N)k9/fig;ll.AVfVeMp(PY0:uV,EC7XGh.Kj]h:T5W&@n1JZ/$jBqZ95Fq>sqGm#AlZTr;
%pV-M@,i'(pgU-(dD"l8_,YL8f*dHiWN[FclAgEt9clZ!A&&?l*6FSc#bOl7V<j&'UHbaQ%+e/!qZIt2Gl3+:JGKai0%kH9Q+,pi+
%k%oU%fk3`[/+!kTGH5poLjG]1)_:D6]1:oj!BE6"F8if)]6kUQ_,<,OJMS!WLdX15,-6h72f#DqJ#N>lOPW=*JVE,-DVWBEp%Q&?
%=A=LK=)&*sL`)tuQ$H6B$B4-DnnFnQoh,cF/^kj%U,sP9maP]#o2qu?e@FbHqBQdKG8IY(Mm^&-;:oDH=F",dhn8--9-(cdO!7WC
%Esc$#`sM[$%gc:Td*-Gt;_,]lLqG&KYp.dd&M*K(V?0se4C!As<5oi*Id&=lKgpq&.rD:B7##m-:^QI2ajccS/d=Q:`3=SfXrZOl
%8XdY@Jb4HAoX2"aBTE-MV*tVd$];i6KM[+3Nkh3p^1Wi[0RCtd_iU0?/91KnT>FlNgkG_mL'I[-(PW'[Gg]?sSA1R5#ienr`Ci$=
%>M)#Nju64*)$TP3!Y5h*&"M',M74fAN.E&3TQaO(9j!(6,U3;Im0<?#H!pW1\cPN0'%@"s5l:9qT)[R^"_/<i3g"o"rj\Q.1kB>$
%J/-B-(]YXi75SOHItt$Wp)3=NbWWa+J2<Bk=g;20:L"Qe5.U5:q@>qk*+iG2J5G-VKKn`E4SlsS&@q57,Ab.<Utd*3,=I#f2<GJ&
%hbT,N8DDL1#)>\RgO7deOrNAGS*BP,:_FeE#8qTS8M=Y8LsZl(LPE1g?An!)]q%4K!?/ZLL!=R8:MU+_OC$jl1=Xq8<o#8SL@M(+
%`1_>$9.YcZgCl$cF6uAZMaFG1bt&lcUaVlZ2o?ggA@E]<<*Z"Xf0Rh08U$8p7t2BHThqj"q=5UJl1,P2EV\]fHU]cC9B+Kjio'Un
%ac9/*E,N#Yi93C9_dc:)m.$XB-]I6lPV+lFg>fKcj-&U$5oq9F5AtR0U(tMdPUXl/:96-so'B\a=sSj8Lss.Ujh03lL*b&?Wjk&f
%*U7O$4LDd1#B:/HHU"g_`d:-15QZgAdNWAa"c2VB(>tSTeM1gQZa>3,])W3m@T?H3JA\,s(kGI8:-@2DG[gklIYlB\VQ)MSn.3ur
%3r49I+CKk3GpiZHLuuk4Qu36-k#C[d2TpF''o#k@iN4om1uhkHfkL!VSkR='Qr7"3E`*12lDK4>N2sQldSq[+reaEAIYNbO`3Pm[
%YGlV>o!F46m]@d(2+>j9M-VDlaZgB4(;1d02Ru#.@\'H%7&D'*aENR.NkR]Fe[-\gK0#5'+R.4cWjQ9dnd'otW+tY_QpZ$RLgCoY
%)RaS%&K(=<G'Hij>.Xj)=MZD:K#0t^[$gTrHTRs9(jtKTEu)1VDauX@F?>t*9I,RVfc1X>'(;.-F9d]o8EuKq%_Inc4>5sn(?K[^
%$1@5Ge7G)qqL4]8Ssf#-kuQ!6"SZ<(kIB!h*#SdTbtGeJ=LE;eJWusa`(nc(d*SOHhOlbFM1iBPWeQmG:XH]#m#7Sb)Y-.e-R,T)
%G)!Mg/Ae!7"9@_DJ7s!&A+Wi/B,qV3(%le94<cUqGE`W!,;s";EhdOBEH'9qmkTt0UV)'MZsg?l=Z2oLNDZl)O]s5]T9(YA#TMUU
%;WuTGX=ahs.A4T:.UOD-UmB8L=hc@]+5t%Mj[Vj[XB\GD/aIuL>f^XEQ@@8J45c.CGN"u&Z;LZrj$Ndg<--lH7o]E]Q#ME'.6Nf#
%15fFXV$h@;AEe6f@[GH"?g.t,GYT(P\ftJI$>uAG/BW/Y248Oi;cJAZl\_Dea9Q`Ga$\[s:Z?Ia5q??9'Z_"<!\cgnHM-3Da\M.n
%1,rl`1h%WFSj\%4o)g.04H4"N$:*(n?9KQjQ5)i+FU*bdGi^>s2Dp(S$MjtT-?*"q6n,QC6*VG9$uM:@8VkXXA@-?<R+]2aqn^?&
%Bmgh_bj8V87uRnZ)cbH][W1s@Rs!p`-4!b>W^_9B:pH2Z_27jEL$L)=I^G`nmSY@EX%F,d"md:Y0o?^>:U3K`HUn\HZU=i+Ij8S!
%lA5_X5SO48E12h$S[,WM2KL$m`0sJiTm>1a@cghpC9ppEW=(n$_/D4P;0'"iP?(k;h<%kP)fh^NQY0g16NcT\Da@2T+^2F!UE`A=
%TZO=QF!WYJ4SZ<mHoQ1jRrkRt;Et^4h195r!BI>)(EFF"]5BqX[iuNBjpYOOTR"gaX$U5>%]J.LVj;#*FlE#s^JcOcO0+nN+5!jX
%O?.`d:m%2F$_b4s-(5dHD5nr=J85h&9;EO%/ZNXD0jENrc&6K:6KogoCV\l@R</P(39eG-CR=KU!GFNiS#-2i"5:In8--6.Y=C4E
%"6'tDZoLhoOKpiCLEcAd&Kj6"7(YNeM=3+gf"?pCo9&,\H2BihBhl'!-,K;M<tOI)fe,r>)7*kH;rj&&N.KmY#^0Jk?!6ZiXI+R9
%dphWd&=OR*$$SIg&m(MTTL\3he.X=m,S"a5#SqT%-g,TDAS.^*itJ<>KoIE%M;bWDL#Fj'5aQ%^8>)WXmk[(E76p,u9o.7DTd6K-
%LnL:TpL6Fn-APPbN_Dm><'QC:2'"lAXE'OdL#'5=XafD`8X-!?;lEnb!baV.1peL:&DC:<^YHIgI5Ac8HK$_!idYKb\rBkqJ1fAA
%@^QC??(IL=TL^;S$JBUVJ8g?o<*,*XgI/pOLn!1GoqT*=A2h20Uqh,I+/?8#SI?h+L`H-/pOfWu/3^I/EVr\'XNSb(7>M5lY=tcE
%4Q&l&AH^I7Y2VJIcu,#&72r^'9%Q,U+iL.aTGl5'E^7HWG4aFZr&1Xh;qP*0H(UB"L\cZ37-@.NF;U\a2+;&e4h!gRTk'*<j3W[$
%>Ye'geR+",Sq8)g1'o_lL%5(0VA'r;AN^sWPMU+,#V)K*2eV7B6YNd<Hr2SOaRi/lo61r1)7l_%e!Gfd+@4"o4qUFGE[shPeBGZq
%I8Z(Pdqf'&%r1EH-X7]#GgK/n.*L/b4OE94e/-)(B/Ii#VoO0.Eh@sHfb@VH7fM[n4sj?'TpCa>CKHkoWRp^sTi4Eu:sLGDQ*9;]
%P:KqOUmt5oQLBhsA`VQc5*!`qC\\)AI9ek*H7e"p=1WWf3M1ULT5^^tWcC;$C+\>6TQK_(E^'/"5%Z>)qJndm>!?Oco(mAjoiaQ9
%<55B%:RhEe>`"+n9h,hU^u/.o"8c*b'<B^VG"Xu"**GOIQMX6W6;AG\\i<^`4a.M]eg?ZF"5L-Ga^<Z+;tupt#GcI*l=>Z5GG>"2
%;qXQ6R9DbH9Zj!I:8&"O/HurL:o.Vi7hMB]&Y9-:/g*:2VkIqcWc2H:GIOp\?0^b<K)30e`/Ys5Fca@!i!?o$QZ^I>"=:g/;G<I8
%]5oq+KH$*&@^iDU>@;ClAmOX`RUp^>nk3Xl>-7-dB;A[I83)`+2bL.;:+O)4=Z9NkOX+#"mA5UU>&U+%Scl78R+UtA"WQRM%Pm>`
%'P$.$),/F`pGt&=9kS<Shf39<SP3ldY+kL(5T>m5VC+];6q&9G-JjQ27^,N*;5)1nMT5QGClE(*;:TYhWqu&/_?VY3j.)RT_,3_=
%MlrL8@$%A>hnY1'6&\II7ZLG!_FY("Dfg+p-1ekM.T8%$>#VAbH*=u[:`q>m@<5iklSRlU%uLgnBLC7In58YA\1e+PPA\3D0hgtE
%%*jF$]_?CPd57j3c6SkI)JJ,T0n!0$kR:q3gdn2f8!fWJP(nj*MO+$KY?&6495Z0GXd-9l6+"pW9j'V4M)S$4`LL-QrnnsqT\#aL
%;``%[OL45*Ti__HP*Varh+D5*.bPK[P'dIRl""9m`DKPbqnmPI!DSI8G4H?BlLG+*.f)oVSq09"CS#/`G/2U"#])Ln>,hD0T*lX=
%45!4ZZ%]/ZCR!FVTRS=Ol<(1ll9%:8W@U[h3U(!7mCOoPq[u!XS@&kuV0h%hFHYamn+(b/+I*9l-4hGeBp\@@G)[R,'@NIu\oh'G
%k+kdX":B;;-<qi5]t'=BqroHX=j`]P2bG('Gs"Wm2m=jur90+kVl_IN7rNeL;;8cPfN_Au7+YN)N8Cd9%Q0*LY1t3]$&m2K]=o=]
%20s>Ami3`T%sLJ7L5cSVHFU$IOXl=:)e%Ao?`fuAoL>Z<81(MR&kGNDONtcP0=s>8"UVf@<b\Wf6b4a%V!fq:OGpneK]+2J!u'dX
%okJlrG">+XX,^]9W^u$;S#@hn34o%F\0MG>7]g!Flku@m$qpL4:-LbC`(rta8k]_s'#.'q-A?3:WZ%ea/7t0sq2)tcM@?Udk9nB:
%#6N@(h2hfT8NGce'2m`=jI)9YMVd'(/+`1HGCGuaA_n;pG"lP>-lJ=(cF\41hF5Pjk?$ff]=?Nu=6A=QPqLpj1/GEBYFK@H)PIsK
%k0Z2uHKmo$Wm!QH]Pm$KD!+g\C!Ot?.e?V_$MEco'g(/S'`LIJVie`s,Q>jQ7KI26,`.Q29)qSq+*:XX]Hc7^Z0<Pg%HJ0TgUB.G
%'g_(tZ@G\8@M`5L$F@FG$L$b"!4m#*M-P%ekH#A5aT9G0W'rW9?<<"AYgO0pl$CR'A7]I'8k[O?*d\\CG0B.i@E,QPl\lYYWR04'
%id@/kQjR]\E[Z'ul<-;Ti[Rm?gUYFPlmUEgSEJlU5e>OA`[N,<d.Q_0,?]ur0cQ[<5CtfEF"jCD%8JKd!fZUo@0uq1e*UcAUm6jK
%8#BA,o9o:"n4b5>I<gtAgJ*T:helC=qsf#c,$E^^^.j_@!-F\S=U=6f,$=p-,^8`U5UmhN.q@UVBVe<^a[/ib$<AI&M77;slZ#Id
%Y/_].@2S>V[5[t).EYRcCUYq=';tG83VXC,jiK.$gDAu-_Y;PWPUH/f'nk647<tWs_eB1nXbu\fBV^D/?g>IepC\>i8P;&3oQs\g
%--j%t8nu!P*d+PbiqK592ehXR8;[%eJ"EjH&9rr&%M-%SCjOMSPa16rJn.tP8HR*"FCam@SUh2>"(]#F71F!5>tb#>3R:rtA8tAU
%.rW[Fcl")a#_c@'gKs>9!"HS@]kIU]<"30>4u>=#1#2!8]tP@iSO!qG1uC&L>3R1-e:?ql7X&tl^qAKq&>Pa:[m*2GZLKBX9'VGN
%;V\-IG1Z4m6;!.Ci:bb!Xmh3NnJ-AYnbqd7@^2Q_rh3A92fL9V75p@P@D-0R'Gm$I8^$N+C1VV/J21/M'=i(-8rLPc$K0p`:R,_W
%?;ds.X=(u9k^m\i\3B.?KrI#O:8n5rVfmdN*"uu>8^$Nc9?P5&%mSpr=:+:a^"BNE7HK9I'K45eAjrf@%s+tW6t)EsZ(J!l[Rd82
%Y$3j%O$9g;J]FaMFo]cN>W7jm5apu!7NLlpj7#Q`&.?D&-WV_/Lr&C0Rj9JYk&[N_pF7)j%Ehq\bB.bkg)7ju&gcA<m,[/*.KL=H
%42"P,'")n&c'.9)23Np$>@+K\f-_h)DgT0hh"7-Z[VJu>k8.dR#)M/Xg:+2?EX,V4G&qE\%\CL:P(V[f5VX-^H:g?.03V3oTdY/8
%H5bSX<O'.'=OBcdfpMA"lNWj/r#`L@-&e$[X83Yi[k-lU4!C]j]0']#=P,"a-*Ugi)]&,r#Dd;%fI&Vf42F4O2_+0Xb:;I++`CH7
%Vse`!WsegsKY)/!fI$g@7`FdJ43U*pYYVF%:E^DBR_h8!I@`Oo&>7bmp;qU3N:snq@@pe)T1BRLVQ`k!Wpc`mjnchX\Z3A*eMFch
%.dU)i$f&=t:JNq?>7ieEm$$b!I%JS_KmduAIH'@6C!N$CYYWYs\ntlJ*2q?2ii<Ia`1Tj<?uAusG6=T(.I>MZ[&XQ2`1VKZ&l#X8
%O6'q]<Ss?ZV:XCSI<%4pdPnWelk9G.AWL)$i6&o#`>ki2(A92g\@4'VP8hs+^M[B1-T=\?3mUM.q_W^s7>dU8fI'0!'NMnb@@u>:
%KUZ9TKmf+n_i&n1M+mf(mSCu\CcP5%j0VWWerBMYCL,u"\,&]_DCCqnQf$f#hrM<4(-f>[r%q(WIAG<("5(F^!DQHD1e[Mlpcr4S
%_s7<1md/IaI4)MuBdNPT?+HkU=0J8mF:_?\>KR?NX?J@CGj76\l6TI"$t5pp1AU>_5@1V<<0=acVhn+L><jcVL@5)R\p-u;3-JSe
%L$IcL>`,9$8FqP%s%/t*o(W0T=bD!Gq;3Lockfsd-QDJ;\c;,];CU#TJ!UB`cas%8b8jQqs6nrn.5ljtS*Fb_s':mU!n;m+OHsj"
%@7p3Y2'0Bp28r;L]eqLXX/h)WEqp`=d#bu15-\7>=`u`opoCH9X--.dPlqrKC\pj_6PKiJVbeFiDX>g`h>3;a+E^$I(g:QDPO6kj
%L.-YYo<D1Y?2:I84rDi%W%ZVd&eDS=f/P;KN)V=g&_n_`$Csn14f8=LlcHH\;i#_t'q@)p@*5LUJ5/A`3fr3[e-:$7;H+&h+@$`C
%g<96ToT2I$dAaV/pRAO\<;V-.g:L4n$XNfi?2#RbG+Y3n!22Dp#r[>iPG]`j2pI?9WKXX5VJ6E+B.J!!fpL#Y%PPmqnkh"lN+q2A
%El[n@/pD-,&rQ"O5\I.8\A-KkM!7%Z`fNb6Kn->_-`3Tmi"uP7ct+L;@fHW6;TVBh0.ds@P1.ZbSQ-@2l`mo\/YN0Z8V?aRY=G/X
%rnV;<HZj:*dWEN1iSA<5b23#>[]+`/]mlrW]&`.kMbAOfp\nIdigt;]hjrm5JiC77mj)M?qm&CGBSm%08VE)KC>ZAdrOY/Sq"E^f
%mtLFG@[RG%5)jl6rRJWl8`3d0e_12W^:6b\rUP/9[poN/P<.tmoFtckT\B-74ntj8UC.+6UtSlg<C_SBYP*Cn3ns)HlMHdH*L0h3
%q#I[7/_+Rd%]n8sX(sQ.@\e5#("_K-;H]&n'N-Z#XfJps8l$Uqol2OBp'KpEXOJ6rD5!_PT!e[0=JoU[Q1aZ;a7@_.UuI3-Z^+3R
%8Z&#MYMsmY.&j/iF+,9tEqfZW9>sUidpf+agA#4I(B&Ci&!"_QVoLm\$O"eX]?PYd&*QNXo=VZhnc&G,+6C$6cu+!+eem8TGcSF1
%X='f^2bM[*K&*."Mc(:6UX2/P2nKJ3oL\_?&`%T=r%_"MSi3k[q0_D[St_%Y4]=%:M=b2H@13'+)4_F:"dU!;;4XE$=,YjTdq=g8
%Nqjs#Oe_XF"*Guk@@(4nB-O&^q9$@[aeDn*7if?,dX"0)@thO`NgRR0?k&S#>6ds.qKmXu.`?71inm96&SKEa7B@9;17Tb$SP!YX
%QujD;C:[);J5oi![l5s2V96Gi.Ihc"k/JmMbd7$D)R]JB*n@FPMdT.WLdCY2l^A[[=Q*p]_c8.81_o_5AZS>P=%<iQ5[u*WTnQB9
%TLTH,c)QSbg:%_b*\5Yti^1T5Vn47D=u*tS8"Z0jY\3j^[@VPoj*Dp_2@<02k2/J=>M![-=>8ON-r*m=o9!WZNfup0AQtcTe&%5F
%'UZPq;tR9g9LoA`b`:+umcnR(m^R&g)V0MEQWi'5._"ujA8Uk5,l4X!SGn1;G-C7-raHd"Gm3jsK_-2!3>?Ru\@@kPDS>5_Dh&EI
%>cNu[4)moCH(77L!B[JI:7MW:-W;(1#$:'6!Ro72Jg8c=K\%1em<HEU]/.mN<;Rr1/go>3dT`&_<XtM^\qql6d5'N<c,1:>/]$D;
%!]OkU^PSkNQTJjSr5`a$FZ;T$VF7fh7n5_]7dh[Kr\iM!4h(4kn[/3G_I/!YZV>Pt6.`%V;)JX%7rG_,&iG[l<R7@HZtE]ph3sX2
%PF'Gn4#<HT:.;up2i#DkYM?'0&2p<#%6`s\c_P2/FB%Lc9M`0%3mX2p"$eNYKE#X3XW?Pfm+M>jGLCh\UbPHo.pho#fdYZs\k]OB
%f-P/Xip4<qn9E,KYHdFk%(oHXj:6Jn]+n1,MF!l60'_"SYt..#^##KX7+&05S,mb%D5l["5Kk)SerB5W;X1)F3]M`c#TtrU2b#`U
%;3DPqEF.i(cu_%W5,)al':hS!gRO<kK+dX'?:cu=auE65oBBlW=XAoN4^Rs\)r2fsHKu1)Q`'877&<XLlOeiG\Y(3FD`sgoH_+S>
%W2gu%h8iZJTiI8S[iSE&@Fm5,qW\[CZ6+1Q,jML%][KsHV+;2honWt0X5Y:n<Onp2Kr87?=DuBDl\s!oKei$[GZg^o1Z^iG=WugM
%PlJXf'hZ>d3p"E8QPD!n[$tB&.+s^[:L.!L'=Rd6>ZN8P=SY`u<d8i5rLWj=/(D]XJDDC[MKUl5*N`8B*Y3ImVcmALiSc5d$?&#=
%4PNVOiLtQ`#"pd!%mp#EL[(RJ>!h-)_F+"N%X$r"BjGt^o2Mc+00J;&!+kJr7)>+'/j)8*hXa3J(uj9[eJ\4B$P1d+4-XkM0"LK@
%ie"K-/j*)A:8$>O<>&]b]C8Yq`e?LFpNpX]Gc3.DH2WGP$.[c?mj(t4>^YMh)9K,7>^.Z-_:'Or8[dHO(ETS0@lg3)K*r4?24q1F
%G34L6$L(@1D21IXk,Je"eap)bg"fi2=Xk4/SlJC'q1XTOk*+S;LNaP6jNCkSW")6[Qu^#sLItBrBA6\q8E6-Ei?:J<?[/MU)D'!]
%])9E4F^In2h0mh-L[)>hhC7(9Sp0.ep4hX&/j**/nJ28=Y.O1"=*`To(ERT3BsM29`p15'_S_;-_"ecfb-7An[R8mk]G-I1o1&.i
%gf&H;aTW3/::n6VKnj[p(VD8W3:.It*ieDMMR">,\aWGoj:NGm?p.h:iSd@S[-4qc8V$U6&h*Ij_m<n-jVK!'1=`SCn1^P^gYpua
%pCs3Erf;F>q5"lKWo%uuU=RW%n5(H:-F!=a1tQ)ZW:LRnCG.eLFh=?<G+/jMeVtZHeo#KdTt9b=S,I<JKnj\KRsZ@Uo&ub-_F&Go
%C:d>U?$N:X"gYp</j*)d%G$ln-$/&(H):A##h7rP*m1DZYdYWFd9M(XTk$;YDEBtCBpW.NW1HD"a50an?!V[!;1#3/]34*Xn@$5m
%@\$u&"`NOMlF?=[rO0U*Y,q8=Ki^%=*K%]Ef3EPK5U1@)iCQ0!dL-SNKRuj`P1G'?TmDhRCStHdiLu'@-at,=#9bb1n5-eh=.<k^
%.FPn>X&lL<n50(l_iqaY9.rD,f+jI1W`38cLJure4K.HN7SQG&89e?hM[7Y_;6Mf#%";-;pZhSRn2JWs6ZnV;Y1cH6?=8@'=^D)a
%ia^8nO9hdsJucd-R5S23d)A=]hAh\]MFtN6;r0mSP/bCX9u<>Qj\QUmeQ$Xu)C*E"nDU_k@FWA3*L%=/cf96'),'lsSFP6Ice2M$
%CpABe)emXr[l]H^W\6B6Y[,hai_.4Le]Q3*XL=_FZ20>_@*L'+"Da9h*NZq]bchS#=CIc:it6WZGALC=e[At[@oFBe%(\62q!'qK
%?bWZXqg,Q]:_]1MBW1mM2F\_W9ntb>_m[69A:\p@lN*<?>2@A9WEsn2bYk"XrnQ_A4EMP:iRfXOctF1FQGq1&aV=8/gWZ_?6eNQd
%eApJ&>hm.2,oViIScAMD-JHq'0#1*r>-/%rSt(Di)I$?a_TWIhGMV^rJSWNocLh$d$Sn.9'r)X7017?^1a0Q,IR'%U0D6,&fI?+=
%m8Ot(hqiLqIF]*5aAart@5b)m`VT1PD]T&%YaF"_+AD^-;\U=kcgR710JpWRaVQMc#n>;\LR>PG\g4=K]So6[)1L8iI&_^)E#IX-
%]0]sH/4P!afl(tZXW:LJS29$b_Hs"\Sk?iV.RrTZko&%R5Jm^tUH@k4)I6.pP0rf8#%J\PL)JPp*2+W*S4j(N*d;/b=EZ^qic&/?
%<30]-cib*S`)@M#C@6&mI%C>13krc7a1OV`%sliO+'B[>bi\GiY>@@8QquV8"2%JtGrFk]e!]m\$%HqM?_]M<r9@n.f),pb+:etX
%aj4l.o*3?>HG-HJe((q::EU/X&Z21WOI^lO"p!#ScQ8X/B;>@j,PrVLjrY/&IQPY8.!tap^a>PKf`uYiHS>G`p96m[VYKB5Ihn3N
%Qur]V#Z)>\*^Fe5"6d0(-NI\c';,0j,C&^86i$,f9?C6W+NKDXR<(O,@gi^Q;RqaIk=uQcfnHAX:[USIAf?6IV1mC:rJ8?<??Gib
%5"V(!UqP^1)_Z%2(RF%"bn.8r(.?VM%hm"MDEjYHQ5^u:=:'=0'n^1/^1?R!RTXpuNc\bdX6$?mA!;++0_REJXB<;3,+IdS++'su
%^EH.br_e+(i+2tF`]XXT'L2KRH+J:6?fq77"pW,%47f"\$-pU.YhTI4Ak%(K+3WOn^L699A8&h4JN'#VM;1`>-5*t:3>WKZ!PlaJ
%E)5R)B<:a@)d:!\prUR)o$];`Z#pV*m5#l?P6.8?^6a8WO)^e2&IT.W`*g^\W:(CAodfcXcRb<Qmf5KhD#qR]<8.-_"n*ad-;n**
%i'[4*lPIW[c9+8PZ_,4gDY19L[H6:$:R-le75]VD$^NPnbgVIBCR[_3e`hOY90qSTaUK"6ZYo\8.jK&^@4PLbm$N>^5[FU*KML#"
%g#9<.=dg6E:<r3/al&l;GN<+^YC8ReO$Rc:NthL<$J*`*2j@Jl(WQS!i2$ooMin=U+>B#!KAn;(ESuBc/1%KO`EL,<[Ub$b(A:n]
%"qtQtE>Q(Z@]-6kTGO7OqljQkSOg<LW1cBGqMW9%()U*r_5eW+??+RLMrcGY/V]'.PsJf0BUo1"&3IaA-^nRL*e8gW"oV,9)ID2f
%^$9FMRY*/(I-c.UlSSP/4i1LPEl=@kL^62IQ0lptD_o`]HVHP%,)O,])QPP9g=H;fZc(_67.*3@`%$O>#t864N*ALF=S>mF_)1@D
%_FN[apISmHZF04f2)Oo3q!cuXG6%#3$n$)`;:_(?[_gm6=17$mbWI<u2lR>Kquo@jn(7/("\u3>T;8\B'E!1Cq-fonC_0Lg,D[3g
%^qS\.K[d::-Fr,hr<4u4]RQ7A#W1egLE@4%CX,"-qtH9"o(<dg50ZDkChDuK:maR&?(lr&-7qU:+_AQLo0LB_nPXms@K@J@HrN@f
%>NuIpR^;-S(1CZ`LC!&hj@767'`+Ea0b;;b?G)*'e$s1<*rpC7jlE:7>'t>Casau35k]mE7,F%4qCI[(*:Xb^^$l<HbEH90-XfK!
%aO88(O`0gSrC25IP3Eft$@$if8&%4^T5uY6qr(tI"77P8O@KnAGd8cK;>tN[`%Vs`p<\q7h1pD_F?U(Lc'uOfiStr"6+YIl-Ro28
%*uu>aO4SXo0;gLa1^jRRa\ic*cp549.7K,Jp8";e\17gfTr[7-T01nI?LBbF%9uUMN=Rq)(=POloE@:>*VI;>&3#%E%UFX7boOC.
%5-V8NmpA;0S*2MWB=LH@l#WH9Vnf!^a4@Gq,@Q@O^.6C&2ojBGb0Nf%??NQoKp4baVXHD[K<mh8[0-(MlAj\dHscCW6uS&/UA7.K
%+6KL:ieTt'-3ie3re0o<SM[T7&tH2d&CBC,nr6d56ugem"'Do.l$t(3pun>'s"?lq_&YS_L8+i*J)TV<(X`?V84WuY@'teEMEg]#
%JAUGsKnfhUBn#Kj*[+SHKUkmF*L)B<iKlg]\Fo";>NJ/3HLEs:e<hD%AGQ+9jG@::n)#]:&\<#,+P9n6n-nu``)*`n=9-U*+ooO_
%H=3E+\1d7Q*D]$m#[ahlkZpZC:8#/F(s%fMP+(V4ZmuB56>ftt@+L;MN5_Wp`<'-Z&HG5+$XkkQ4DPDU(HJN%:=a]c\((jR!PlbD
%C15R.rlTFOJM#en:5CX%ZsiUWW(HD';p&fMiJ]ba"Yc+mhlR1(64[j'3cQN2%Bf5B]P`]c[RN8L^sV@IK9V4Hd9H2rYgQHg,)Y0)
%E9u'N&.o@%I$R0_mbVo\c"UqQlAYrK8A](eC"":A\3tmJ&Z841[C;5Qb*hS(pESc4DL(LhaQ@aH\s75<O"t$%OJ>C0e+BgA^=fU<
%$"EqN"#*n?Ml&m6O2j:`9<Ak;nlN(0]TQ=Z#7G$]*c">.JX#g%B7Jak+)_YSe>/A:WXp-L?7CEE8#(ad->&J*X2W;#(mSJ_-g:bG
%@kAhU*>\H+9r"aFG_)!#2[m@NN:+s6LXAO)?sE^2>]MJhmj.q!ndPp<o:_TJH8\"NP0Q<=s-?5mN2CFF,RO@k3co<tiZgUgCt9/V
%l16tH)/O$oGi^,sEcE)U[G)WbXZ7^N`U=DSLcg4.mLf5=cPIl[&_;W;`:!$C!^'_4%QtbJlXFJ*\&o5FVD*lr!RI-kEa\V<0Ldlm
%4VS2j@po&c^;A/`ODo355F8T$`uY`NcC^3KB?<A&nY'Ct`Q^cD,I[qT-Obe--H,bg/HRtTpEpIkeMN64gTamuON*43)A?(D*0u9(
%&s)qSGT,tuS)Z,cA._AOZ-)eF75LLkARe^/V((HcF@\P3c$XW<'BJ_':99Y;$$IJ[rPC-fEtVN"JMBAY0QLFm1)Z\M`/?;Pgl`.f
%]lR]E+VhsGNDPcUNN_&$&JDsLF;47:)=p3PiuO/T$Za&\2DMR`?pNT[GU2WCC(N@4%DnHJHc"tqq"b[kiZ'TTCI._17qrC'Pj0E>
%4F!N7)gqCbI"h?Q-_Cst)Ug&N*K8tk&*SUnl72iC\I]QX!F6.&F*Os,K,`[b!t;aLZ"eHHpLV"X->X;=EpiB?<Z)^D`7K(2%*&,\
%"!*<>M.-EGM]tu*b#!Nf2RU6l$:F\PWXQ4kkLUlM#T_lPgc]V'_E5jd[,f&on4I]2coRbTKiU5*pq7L>H@>St<TC-C0P%=raX0\A
%G#+R`8k&VuoF<gdlu"'Z\1Kfk&nL'S(er+%MAfIFigkpb0L8"31!`lhi/Z#<LO/%)KRMhC[%H])4VFnk]PNS$/Opi?>C+m,Y&?dO
%SuhlahcJgB`\O`g-PUrj4G]5J7sJT1g.i&L].?u35!%'u#)p$l5i-UW#TT=Wm<ra.J>)Gp$1Lj3%Rq@kSGD`m'Y6n_Z94kf1*VZ8
%^ajc9n3S'Ba[YpR!_mf<6SRae8Jn;*&moQq'e]:j$0N]aFO<idJ]W_@MgMB-ILJOCVkO/`!@SD%;#iCT!pENWiC_B[f=Xa4*[*]X
%2DFFW5"?%=mk[L$@q;?>nth]!5p3&@"9G2uUf1^cOIJBE7`)$'J&J@s1FSLi`G?]Xc%a'gW@.a-S(lp'^%5DrEt`T@F5q]T!jSBe
%gZZ^1==>pt=)gqbALXS4!nSpu;_:d)-*-l;mVq)?'tqhk[aDWBS<atF]Cd\#<5$'sH6$01#ocpm_sLjtq2/L6QC!d:k:1cu>$bTW
%8//bnThj(V_&=me._bOrgo%+4Bqd%,H5B[[m6'>]k"CSh?AFj0e#j3hfms;GK_laM^]I(f^l4ML]Z\5DTNo_E1&+Y\9Z6o7?8)/;
%o&V^s#MPRhL/W:7X8LK,!,Egp9+,8?g;=LV>W`@HmP6+((u>71A%1o"G4AZT0[g0f-6n&QX:)YqdUkTC`FXP122J\-;Ul-JeTLYk
%I,+IcZ*00@8<4"JZd1^@gio@:FpaiDL6>sk3FbB[i)d9c:?Mes@ufCp[M-FeJ[%u/Ad>es\WnL8<'HEn.-D`%F66VBCUO<#f!k23
%![h:/lH1*D-"uUc:3<#0bT/7^o]l$`PW;"(=.`ipbU%rtO$+GNF(Sc$b"kS0gf)C\oIaFW/7,n`@6ut%+kitYcM%h&d)$8VH$g-$
%@i9K%k6.shi<&A?,K>8]m"T+lML\8F+df#;6#dm32&&BO!:V.'MZT8IJ?a7FXPM`OGaHBc#)\GVM:%>rdt#M=?.!]eV;EIc+IV@P
%3Qmt:US:muqIoqa<-G(qcW*#+Pl)l[Cat7u/fJjEDX0/Cbd;J=*gD2L\C)+gJBT&m$=(*Sen:rF+(9=:;Z:7&CH*o`jLZ*_"*uXc
%Y=@^7!Abj8F?R=Ri'#<+CEgXrhUKr'%I-E,fT#mc)boRf`FoY)3Y7%`BR-\kN0`pT(k/k1/VUVPB[X2U[Pf0j*,D<lf@n(/N+&G&
%5knfA&LaE^SV\:-2Be^?ilq<=Xk@(jIW`K1"60K?D.%itYWE:"r/8Z@9G:e&DNR-L@K?tA$ZLOfjLU=?'6XiDcV4\?%D1/b?NTV1
%&46s:C&8C4^;-pX#^cVYGJ=uca(Q5dWBrs<T?m\i0t'mIcoFY]4I=[@FO`7=oHDV:E:iT1lT765TK?P!NfbXk)3`Fekka,#i,>5!
%CQ5g3m^U_k`7$:loDH.q^l"mm6"jNPTBPY%iX.$e4J$3q<nK3t`F=*gF69I7n!hS"#,ec3B]4q>@<ORDc7uMm(FnTCnue@=0Bo@)
%9[9gQ(WL,dc7*j#_5M&U'4sfA1,r*q_<f8^&p_pH&nKmQ-VH\t<bUk.k]PSm<oj^))C>@S1"IdjgnH4l$-h.\5BIZt0A3MY'OdYB
%W@@m,g;k(n0dq4klG4;-5/F15OerIKO-5Q3r1:$6EYP&W:XgS/.M(g]B/.sR`/ua)c6Ic<\(P3(XuUA#EZQ-Fq]@mLciSr.p(8d+
%N5Z\LlGr&':ZPjU8K`Z7d(CLfKKZhW:C1$DG3N:g;rpR)cl,2%VLt/]_M-7gdgV?t-AsQHdfU<3Zm)l"9D&9piPNC\`;Sm%6dL$l
%(4[R.q[a7K?bt.P%#eJ#BNke8o\W$obt\i;1Z66rY6WVXTEiEuIM8D@NX$)$#/J/dL<;=Y?OHn&[.;RWd'5GMHZ@UJFDXoi(s5JH
%/4M/ue6b3HX_Al]Hf@Iba=LUP`]22T1K4P/Z)^^l=dJeR?rF`e+fA>8USR?BMT:Oc04"^%BG]a;VdRpc%QIi41MM1i<H?fWRmVu9
%q+^?`+/$FD5*UB8JP;cE9OOb-4TOOq-]Qn:M,4j%)AaX(::Z5,lTCZ1cq]V&[3a-nG?hhZLnS5;+T\Oq/]f`3+:s\q##P42#_em^
%!.I7A+htOI^3$Ls+GME#PHJLbIbODq<`]ti+Cl!ACq=7='8B*[hd?l)[;B4f$rOOH&X?`hi*fM*bVQ-`3^Jis?qi!L]q-4i0L-N\
%FId$JWbkglbSVR@oCjM"*_&?MAJ5?=Hp!T?^>:4#SD,;tnbX@Sq_StrGtf&>J)?G`rUG`R`Y6r6]eqGU-V0QEHY_D&1MF4;"B#QA
%,428X,nqr&:2YUP]"Q;(U<CYiJJ^[R-dt!ZUlq8N1t<#k'8jVQBc-8u3W"Ag`*m1$"dlA.Fl9FV1kE8TFguZ<E$;i;J)Gb+PS\<G
%>c;W-b'oBfkC/s#<,r(r*V@:2/f:9l2R$DAK6C*6,JV5+8fXT:5SeGd'aC?D&9SDuTZ!H(BK$Dm9ctL+@n8ALkhpjpD?)ZDfamNa
%DXgl$j"S"<fn-:<!3F_1'DC%&(d,kR@-M8+ZKrt%)t60+o&71>97M@5I:G!$$Jo@_[0V*s,jb9S38i2)lp&X,!)5Cl&Z5e;hPL7I
%F)t(ahhKU;o5tZoLJ1"!djW9ooHl#[KEm.0/q>!.pX%6m5cGe-J5!=bjBAgI$9g`[M/qSaK1jT:h(XHLU>+S!iXA3JV714`chR_Q
%%9,-i[oDmkc9Q%qL!?SE+/?\](R&]3>X8T"^cM=k'i=D6pPSbtNd);_dQ;DHUNhU!H`U?eM6"e"@E?X8`[HVSk)Wqe<Wi?"q]YM3
%YFUY<X/$##a/Hl@@"@Ah267D(QCL,gFCMAap-%t>`D4elH<MoaF!]cIjLdA/Di_-E#Q4Ed42AoT!uqq23fC`ZUU+lm#A2<m(iTKP
%S@=4[eV<]D!2sm+7,4NLoc4FqG3bW:bAVejBc#^-Xm_m<j,0sWlXRj.hnShYr^7iZ8h.cILcB#OM+,VD^BDsgfl4aGl_^o>&4:H8
%Sldtcda5K0,Q*P(>6C0k/V-O%)#%,N[L7Lf9*qb#a2E-T)i(gJ"L+E&"W03+MI^ICLTV/><HT-g\HfH)<l>"*#u,R'"MbX0(fCN@
%0o[n;%iG+aF:;ngp*F,(!s.Ip6=cT)#!r_Zb[D=T;P;Y[&poS+K_si34QIImYi::o$j;*Rcjf;^'p:F.i'NUJ*T(@aXob.IE9]$:
%j(K!+IFA85h[<cX.VM9$o`s34ZiHgK"!rcNBQ7XDI!?*SL-uV3L%$"BBrjF3_;@jMY\cVg+;GGn2>H*t$0o@]FiE?sfj6g;6HP$2
%T=T7[mB,W<:ibQPpcLqpMW+r&7ZW3hVe2I(B?,oXLrLSE%GbjH:@`r,4jT6ekDL_HBH2iSF\!nin[+\"3]MKBc\j/S66cdokV5C,
%G^Rkq1?+L<0F5A".$8_<_UjGd&/mGV_$E3u,Jf3W!cfg:#q$h;P%E`!r5;!!4=J6IZl:EP7Ng`W'/A&(*]TJ\'^i;d6P9t5/GJ>-
%cm]F[VsoisrX)"/+[F;u-_KMd\VTONHk0.+]`7QWcQ:Xc:#Za])C=nZpu'@A*^543hi/6pnO,S\"I>LaNK:W!U%t/CB@lV"cfaCD
%kd.c]i4$sX!=4H>Pl-k#q7LeA'H\BU9NY==`Q'T)A:W7GG"e2s\5Ws]g/4!I,V0>:V%A,%#)r<O=_U0<EC]`9%k"'s^EK)4&Da[,
%QE^'XYj<;l6lY@:\AYF%cYPtcMcOB2mHF$A=)g_<=P7BMMnH9VPsWR^K5iGcA*FID3`gD)5t#2S7[-dt%2(5OrAJf1a+gUGO]8kY
%=1JS?MeL>B#2DaF_rtM(_E8puQ;!u":"\'['(Fd:\8VN`\UDF3(D98c:^/SYR*_ORfPHY$J^!Ta4[AuhZtBH1H%U0no=Zs6ZV9H2
%^,/#[(sC"?OQ6SM;F<&_Lkl%C"@Ge24blcf%-#);52M8+$k$=*&u6`o#Y!9>;M&Rg()?^(D.lI:HOe\Kn>?^s`BE9X,_4Ua6h<EG
%%3"G-GKcn^:ont>5_Q+rL\WXJ-esFd8mkQ7^hD)\4s55uLVa2X/)!o'?aCgI[=X_QNkjXp@El?*_4CL$[0n'E%O:Cm;u!$Jj:4e\
%\qLY!+d.31Q(ZfAkM.jun,Ojh\FKUc&H:7hNS2=t0&_GnJ''qDTG(&Xnmo5P;%O/-Y4.B+)t(['!@d">*[(Ss)p/F&6c2CHc-"n<
%K9<<rgAdr8?+V]#M6kUu)2%t9!>=10H[G$1R@B1qJWh*F\-)m7A$?%F[*=O!H'9oE\"A!3,*h:o]6eZ??ju7JHENE1.[<V(?1.J$
%2*V$$7pm5dJ3a/+!K_MZ0!2XE,p<WH_df7OT7<KriJGklo(*s[\Ykf*J,T.,hYKTfkD.so;u]bQSbaU-$a.@7g,ZY5M?X"TO']GL
%j>D8GU3K9#VoKuaJ,5/Vhg4mls7j"Z]_.'R:Odib-Z=J31O`Vehu;_=J'C&nI/LU#B9%kAUa=p*\,R?64?E>rhQQi*mumn3d;&LE
%O(89a0(*6F'A51Fnt1a.5Q7\\$0Dt<deKlh^A`Q[P9bj,mC0icRJWg^`J2AJp;`f^6!&i0BAup<4S[@*4tFeuhiG**^\%nArqQA,
%$fr2D=j.fT]5O$cS"(8bm\snPrcU:R<("F.1)Tp`E`ujrcEnAeX#Vcgr;UGGY%*F&&k@F.Ng/t[39m9jIe;<c55`S7s74S+5Pk-e
%)=_)2_V`'#k4_7<l,Olno$1T+r9u'UrmtN7roA9q4o=a/^HQuBd;*\"poX"7^R)Dor7r_BI/)p)?C8+18O(lKDpq(.Q6`8Oq`i)E
%s7j8\rTG3h^\o7pcbFaNrUuHT"1O!QkqVlRi4e\RnYUQmH_3K5pB_.J=WRb`YP;q5I.^-NJ,#@KJ+fE\s*XjQ;_f@O;TE^)nm1VV
%htbs75Q&nJYC69EYERZ9cf=D"]`"rsI-k.3hgPClZ[_oC>JL%6TAKRm07WTSIFa2!pbN"^4D\0kOM:RlG<Y%+5k,fholoInrlV;1
%Io6/+fHUJ^-a18XO2(\k`uk9ES)Pnjiu]-(3bEe/497YDlPlC=f-MtpG,4lIr9W<0!Ia&K5;0IdhIDCieTTGlrtKsRM0?t)Zp25J
%8s,,C?e*$qB;,`?Ho_deK"Q5M-gSs)q:]##XPtd<<.;gJX8:b>='i@cGl=Zq-e3EirVG.5+5T7=/hPU1roi7r\T@f/EYj/qhPJ3^
%m=4kQetA(Pe),R@dUAge:.s\Ps6_s!,M''/(,TIoYGpCTmLKhAT-pXODqd\9)<NsVki^ejXdPO5oNl8GV.T_i,]DR.+j_n!7mH_p
%$L?fmqrm5"7+Znfcp%=(r/<S)AMp?KQ-NOm4T</M?I>!^T=t4W:cmS3qkoLioogmEa'[W,`Y$&e`m5rf*=l8rMD'D.eioX%jfA.U
%c`:lcP8qs>@2eI\_Z#FgXSD9L5CB3/O\!dWZJb]ZP<6%u^[fD%s2m_0ap(f<02HkF?MisB^Y[)Hr6a!FTCAZ^^Z&TN[_XmO,*qhM
%3!TmMe,I3eo/:0TX7i%?G[d6C-d=IAoV^Z.c1`UCD#a4B[smqh2a>q-k1q,#QTnXCPpY_h5EsufXEbcG@nF5+]DPl/"dANbP2gD.
%aNkM-]3T[Ng/P2[+0GDM"DPO-'??>5hDo/=d9Bu&4S*KhbVOWT&jLg2Bfu@X4!tqBhYQfP^@PlI#`5aDT;PV^SM,H^S)=(FA_Hn?
%X/@L1eBFgtI-7&MGk0X#4n$,^05jT(+2+u9/!C+^RfjA\YJ#g,3h47JIL6bRW>2%6(hVg!^q]a<]u3"/aT3IA*V[>@Q']gciic(k
%nml<mH/iOEIK,O#BBH;keH8rQSp^HD#k8^K9N^lWV]UD['KUF9UO7=`diV@Lr4D.0B>=B'jMSTVp6[4'?CX?;RX&3TSbABTq/At^
%#cUft9RoBD_nlYLQ5B.Dp52)KG!d`&AqF8ET!RXnp>eg]SX2m@oD"RuHVPo5VRmD<kL+VQjLKQ,Xq<A&g+@j<-#)]KSm5J81,l\F
%N5n`oLRiD)fZ11EhLXHF\A#_^&cf[S+Kp3b:<5ooq"VLr'qS4Z$TFmYHM[DkFoK$Brq*8RZL^(ir%BIfVb\D-EN<2(IF[0TSkik^
%`0nWqS6Mm?9lKsq/$Fb`#*&Alou!??k7T?X=E4SBrQf/1)n<EoLhM>qNG(06Qe"4poS_W*Vmj,'?Mj$am`Q]MYPjB.pWg+TJ+r"^
%8UK=(?FrW,;)?Opn`o9OpXeiGV#AWjrbFGcaca"=)TV"]Lf6Rgbl;K%nYJ8iP'67`HL\<<?N.r/e+'%lnX"0[Zk8+,"lqT+>F?(q
%^3h<RRrnS@U)!."M8eR'rOa#)\!T:Z`(h5pD:7sa<BO'JcqG8Upr94PQ)^fZ/_0PR^\]fKikFDIEpf+SLECuHGJ3JEn^[EkpHEiE
%B4&3Kq:2Bmi*1pt5'*N<rUc"gVEHc*lBf6%olTsY>FYH2]$8gd0Adb92dVcarp%rCjo$ZWq<MDfN?3t,rPj.Bo)1],:2dUo:Z)#(
%q0qs3rr%XJ\+BQ3cb02QDu@ZRLVs).X'bl*+6JL1@sb2o1ZWp'qgj5:UJo]j*;b;:*;f/r?cPS6?sZA&i/k>5hlHL=a<-4f&,\;<
%Z=rHOI3N%sp<Na@rNED"C\l5;MheMuc2V,-!hk*,f\D7s#6.]frpCT;%!JuN%`1(%Lm@t'H.NoUf@MBgIWFVbE;oLiJ,%=<nbC^S
%I-p^<05i4UH1_$^7=O"a4tW]+T=f@<G5P\iH2)(*f=pnAf:W!5CLC?Ek"kRZhJBt'i"aKQs,/!!]o)@+J%9HuI^=\Y55so$5L.dI
%:OQ"5msP:Ai+I8&%fR:%%l8Y5gV<WZ?9H"$Vk6HWdq?Gn[D[iJkOJH<l(?u($YU7!s8Ip85k5_8loouf%=,ODmsXmS+Wc.)pt\.o
%&bnfeWSbJa_10b#n9Nk(rcX=a(Uu_G2dC:'].J(hqO:`.Xh-1YE;3XCDlpW'fl-jZf3;&5h3R?5)m?_7`FBWT<T#%c^$g@HJU`=s
%p`Be<nV;Vmm*GT$H10K0rr/[Rn)+06%nQuB,Pgdos2G#HnL2?T.$d2L.7!?9PC;QQ:]C4LViMqUj/hh.CN'46YA\p_]>&geaiElM
%jhDnNcIfc/I/h[a^]!Bh8+u?%*kao=3SpNlkoUu<gXgf9ja1A0]Aq;.pn)d1YJ-U%_k;'5H4>pKGYH$Lr7C\8IJEc%5PX`_'_q3*
%5P`KP:OqX0Q2VH5s2Nsq+8XH9')$esj[]@Kka0%F*e!M]qR7R*hrt))pqkq=8$>%(o^:%3ZM!cRl^rrEr>X,-Ifl/0Da6,W%;<2b
%!R5R&c22GFqP*)kX6\;;?b##D(*"+EH,9ITUYl%<P<XKdhZ"O4>]oams!mL,O)A3OTA^;_)0\SA+f7cMh'f$?*Ie@jW79;.is80B
%g?Eh=Ht^LX_q7nuZLCJDG9Q_NW#t%P*%aC$7URln+nW4Yq_.m'Nuo:@p:[9^0%=-M8ho,O*o]Y'Jo.<qU\2E189^b]quGC7?16:<
%mH7QedV-"imm"Ps&gt`<@Lqj'b@?Y[YS%l\lutTrO7F=97j>1np"Z!e4bZ41]c4X4!R"ah@5&OFe">7(b)PS)8%m@%gKi"XHF_4u
%'`k;]bRKiLA?CoA(PD^7JV3sGrEMRja)RHWrnJEl8%;3W^Kb'E8%a`lS9(5+3"gjZR.X!o\SsbL6NB$=j>dIHF5r1t%Wc\GMY?Tj
%kiR*fr$poAB)_]H\B//to]PjE;GI:BQSK.!_)Uj$bpC<@@L<1Fk_\.a/(8U9I\N++KnHtEd;io\1os^qNU8@+UDhk4.*3S\Ljl(;
%*K<JG86O;1/O'alq'h%N$J3ZkdbR>ABuE/f#=8*2'!YE-LUqpd!nY5_hrV#9Xeb>.F63K;CUQqo-74iCB]0*s94]g5Q"XNfTQU&n
%rH$O96th4e-8[]^q6">of7E%\.(-*=3::fE$D]5m0a%rb7mT^NN2$Z),aF#e*HJMC8di%/CQh((["Vbl7afl.7F-9&oc^HJ;=mDJ
%5[&4R-?Sl9F*]T-n9cK<LC9D0FA5Q+j]VG$:aaPJ[-$m@e1D_3iB$7i?\@K'@XP]i:<Z;JknkJ$&SV'=c1)ZJkg>dp6LQjt>,X1G
%g)-WpBURod^cG#GVfqq8FgR5i[kr70=2@SZT5lpir]3ZA*E?,[Td3]08IqN%3bbLNJmofR&#1(t6BW-WHOtlB)bMW[ohll"4bZYj
%<%hEZW1s>QYN\'GUCbLc(p/IH:b5V9+/&!dcY.oEjAF;qCU"FAG0-EZ6N84NA6GQO;bPLjd(UI8#27>uTo>f7N9gspXHPWmm]'ro
%XWCab[+9S!EtG21_;\Qg>mMB_9C#*)-R#<L2>=\?mYdD4I9_f":Wjjr)ItEQ7B;R=Wi=6\nWl`N'ra=Lh'[FT-/pYaG3kHL6S4>(
%;/.e>84P+]ZK_`OY`;SGQUqnDTK+DF/)+Vn.kN=#(G\31m?Q<`nq]>l8T`sB0S(E[4ijWK$^+3,,FEj8"&$Is/4qqjTLdnCY4mJW
%>mFMu"XG>bTRK$,\t:A(]?>?<rNni_NU[SDIS:bXm6OS@KCF7rRsYch5OUEs'"e&A.(Y@ehPkil*rQ,$'kGVec`_r%F_*&Rc`_r%
%b"oddL3XB,D7IS^?V82Wa<HJ`!sV.:gHO%ojOk#EdWJ&gfaY3;W@^4@Q[o;jBRr<dj9O(l"Bg(][/)IM)__]D'92<+l2?.5Y]K!1
%_k+jdpN<j))X2CW/8n)s@j#'(ibbFMiu%=ATa+t'L&ie(1tW&kNQ>Sh"#+QrXCtBt*e<L2RZEo_*IIkDLoeEW!!bP4d3`uDLBjnP
%3`FL^9\(K],4Tla9GX?-mla4=ECueDYFf/*h9S<6iV%th!,a].b9A9$ZD*uY0W@Xl0l"U&HPJH_K5`(DZA?Ur$QW8l/e>i=O\nQ>
%4:#-rn#uK_L>`Wp59t<2fE<TVTf9t1aGd$L:F&BMW&67I%LP3&HGlN7dPfI^1P60W<MtikA3QA2ZuqgS5=eGOHKUFP6VdN237t:Y
%j]+#Dc#bRc`3oth^(X5GJ0Q=e\Xc#I*6)l%+9IB=bIAG<6/[u-1:TT\K&j@Da&qpH9'SnA%s5T@,P7XYf)a@IHHpV%3YIC&?B#D"
%qEQIr#K^(;p)"!r3XcQ#8QZ4c@gpq-(A=e:VSNto(JEDaK4N(Mi>+uu9o8N8!BB&jg'rd",e\U+-K`F?OW?j@fn7rRq<HU40Xer&
%Oqc@&l!ZEo+Y[)f!'%(O25V?)R`bJkb\L@;h;jd8OgD4E7@!YrZ@I,a!`6k"Zs4+kb.&>;KhReJ;,JZ>aT=Vah`*4q#BuOFcEbY6
%%CVmi_R&8@A@PH3pYIVeAGs'$Y\#RqXC3odbZGioZt5Ooa%h@\WOJGk)nb<ic62e?ba[e2\0i[L9K6SF+2Q!+qQ\t)8\QO&Xk"/;
%kpXGVPN9)*d1MeKHs8=a#)PXNO3&kg'@q;!L]0"u;f'_cD6)9:OsW-s4+>Qg&hE#`VAWmHH5_/5,*M72,kXlTi'mA?)eh5J^oB]U
%aKZ0npDfY&Vf9IOL.-^m'KF`@R%.eXTWZ0QGHTLBT5ueVL\@'B1+WZ9mKn&!P@6W>MGB3jn6qb!2\h*Fi01>-s#/E:*d)>3Z&Q`J
%]"3sU(8-FgSo_BSn_V[Xo,W;MEL/N7d;"pET[?(BH\""]NQ%Uc'1ERKD-uoA:&Y7Y"bfWBU"4ur'"U3Q8`9_>CR$5t8=Y!LM-a"t
%6[f#AI=%Xk6DBQUi4B.:'%166\_1Z'OjbJXfJ#?^7OphoBVG/>b&!D=aAKI-3XRMY)D3%F/c3WadNS:t%npm^U5<XZf+)5UCV=p/
%q]_,[LLD\[k]OMm4Z$GL[JS.&\1^7\IHYr`[<g:5Cl.n26<PBI"o;Nlj[#+gNV.k(X#P:)"H^$IWj%2_OeCuW;Pd[/Qtj!(eML8h
%C1A)=IB7P&0p`=q<R<W96$f<K>fbp4N-FJ!g?-0j"[_MlD/UtL0k.V@!G/<L)Zrp%Kf*,J\1,$*@fRFZ())72R<-DeLUt$i:7F((
%J7=RH@->h@4Wo=VFC\]HCcpp-C"1mI9`%G;gJm+].d70&4?<kIog@eg1O!dm6@[le,CiCOmAR2>5@bW(T$M)8#Om]Sd+VT8>\!`"
%Zg0XVPi"@r(]YHfeo:N6-PI82J>R&i1H#;7\Qp3Li0p02+4SZlK;^T*HRLY@#>qeU<@Kb&$@Hf<&7#tg*`JJd=$]#NS@`na`*l)6
%<DR_XMBb?Ane"DqS(&?;Tulp0+0;7ml=#lZi%pb%Oe2%RePGA9SuRq7Z^nCffF\Ll"?m(UN:@L8RE0#1lN43[_jFiC)5p./T1,li
%M=RpZ)gDY'a4c$iQqAd!L1e72L?d:_(dV!C^5gh_m3,,5W:VON<8[;ph7b2dM?7n?HoDLPfBNBTlLAsnnA7m\Z^J;YYM^R!H0fE%
%*6L2_MM>rZf6,U!XYf$7n'=9_"mabtlm;(!7(cZ"iXQ%h"4&k8)S5O*0<%o+(5;(QU[Z.W"Es6j]+kC,V8eRg:T1p:<lf(nViAjd
%66^5S6>6Wk;dA34\fi`7/"7>5D,Y=3!d:tgAd>>nFC1b4RXB2jhF2IYq/.0FP93@WPoYQ.jp\Gmi<GCnN$9SRSIc3&"[/u!9rOIm
%EU$#tb:(<:fFC$sZP"-qRU!KCLaWcn+S7cR]T+2](MobEZM4I9qV,SON36H$9RRMMfE.%r_V@o+ZmN[r<$R.F-3ISG!/qDu(HeSd
%`f;*=5)*>461N2W`a.e_Ak,q#K$]n@d,7_&E%3&NTntMXh<)h7_S5Y((n5f?mX8qlfTCmIg)h6O=(^uU#-lc"JHe]2]m$m7=Am2l
%3sF-TY3lCO+pMq\5hGe/Hc)4Chf4`TZ*>=YGB@"XMZV/j@5]32e+F^3W<,63'1`[?YGfPD)7.BKYO74a)1?#KLCdZKi_aMVZ[J"i
%gMN'HbBKo\`MhVFGBgHMd0?qPf[;eT;HHWWmSgN%YYIo'_Yefpo1r5K6rF@b]RoL=U+1mh@^&3#e4T%>ctf:^f%Hq&K"?nXC(9KG
%`0162;ce6EM(@V8TiM]1_DW-&a29TlP%f?Vkfs9Bm.2@0UK),87fhgOimo#Ee"WmU/N-,N7KJb*mM[]#4*+0:!7YMSiut1B8_Eh*
%:csEO76iCC!p;%#>9\-jY(Klq1K@N+A<)Ek/8/U;[[RlYaqQ+o7\J,feqFd&)iPj0gL7]ZbAoRM_rHh;&k;%Y"JMj4#bBdGH?79n
%1e7o&P:3"'Ci5CcBh%,>F%DTb(0b)PKM^Jp)B"'\WX>CCc%OA0UI4'>GbD*bLspT\<2>Z'jQP;sX;qd!lZ#%@jRo?!9Y;g^2-s:,
%K[(et\1:4@d!6TXe7NRcH7dDE]a#'sGWGa#0Km--FkGF@h85:n;Op1jnPM`k%2MH.fjHpPJ;X<dR2CZ!><TkERb#JicNZ.emTVh(
%@+*)1NUNMX9k!_=6m5>>W7c/l"KtU]`CZ`KeN],ZOR`eAQ?=WBe"GFqTkd@-ZaL.1[g2EhN.T=QQnYqU>+&t0;#>[3QW$.d)X?*4
%J?#JuWgKhGRN9N<2)_U^`TC^<Ng%KGf(t)0MmAE4.PNn8*\KskkuE.f4R(d3.sf[r_9ngb*=&<d5-hlkE/#TVWUURIYRFFhcO;Al
%;((50,MhLp[=6Wnm.,4,*JB;&I-BdW#p`idU)JUn.&=p*oms6KW\P^*[o*ON$lc,tLRiVT?GodFd7G>pihRf4N>RCOM&HXF@jr,N
%>pa9cgs1ud2?n.n-3XRW>*%Su!UhUjNHQlSiOP0i/,&9qdi;:u0Nd?]iLu:dc9[mOZk>r*$,b%hoN%F3N;U3.'=rcUE7;0d6ChJL
%6AJKuS'8:F^_@lQ307!9KCun)inD4B)gAE@_,_@2dS]OUm&Si:k(aPcB_uSfaoe^rNuH8<`LE(:cH'Z'B;Ak.c!sJ@86q:ec5C7R
%`eLP\@6Z]m,6J-k[pp[%+f1Y2%s)*H#..?Q,lon8\Y/\@FUkKRHq<GLaTC0]NrpNpU:+`_Bbd@p8%kYB_\o@k%Q!T]G4EQ,Bb#-o
%gfkl[Q>,114q-)jNtY)E0fJ.ZCtp)k[r*D.7@i#\J@7+JkSm6+dan8OS+ej(I)p4M0E!TC>=ti(9gYt[,J/E_9BtUe^;g6&F@24r
%@I:rCV74+IE:hVG>oj;rRR>p5pXY+EF3]7&?fD&(GEVp?P2=s]LjN"N^"LS(MBSdD3893HE)1IoaL-D-jUM+u`!J!FU;*`)VFDsc
%lCmj&3,HENLa8[-:T?EP;u]cGg?G>-Ve(ZK]F6GDKgL\2_,$tIBp"`?:36m9/MuV@#=A5G3;\(!<kU\@\idZKSGL$ad+YJ6/2ZM$
%1<6hO48H,.>s._,\DZgmZdNuEff&\C6Z'lW6-"7SF*DaLDm.\<\0ECQg&@Ee)?SJIDm73Jd%K9Jm][ADfNZoYf!2)RVLVCL0':U5
%gh`;dF!?9s]ZjLKi4p!6F]8%f1oHo5PB<QW_*PHDBY)_h$8er.f[mf[$3MlU5+:oJV+`_]1K!l#q(3%_-t'rp@A7Reac9Tl8Y/V8
%DB!KeR,;)XYGCI$)/[4m^Z4m;EfBq`g2]V!T`ScR[;!_!>1n&]oYPsQB&.W7QkKc9pha(XJ[E,Y]1tP3Dk%cM#B/LFh)\kHY?T$9
%hDgP%H>jh">K1PVFj$/]hq:G&`nRtD)/jW[1>_j]Qgreago%dm`\Uc,@Ce)$^"%7l\)A4A@RJnb2)]8m-d/q^S@O!)dNM=S`sW:\
%VhArJb6HsNXWBb?0aeMEqXaT"1iMVL_UCc'8-`CIAauf)8i@kFTECOelALi[9+gkDUb?:HnM!^B2p(Pp9Y(3;Z)Ar-7`-O#<-RpJ
%,):N:5/eHdWMH(9*L%1#ft5&?Vn@>fIgXef+T&bq$[8P>o%jJ/(J^mBi`1^C$)_e=:F?N.U6Ake#;0,*dtGY5@QGQiN$jV;A3Spa
%M!2@"[n_&n"?:?n1?bgiX8:X"7%PUTDkn+k5q!E_!e'Pn>;Y[piA-=5mciI?87U1rU75-VD-][lOdEe.HhnEiUL$TO/6QJi%`bOV
%)1I3QH*$EH9$/r[L:2SICtRr(Nqkl/R=!Cd%E/Il/Wn+-G]^CLjueg.`)of%(YQb[L/!nA#dT5&;ATj3jc6WrM?g--:/Vl=h(\RE
%?tnSj?s=i@>JHUB?,,r2(]5agh=V/%NGSXG\?OAO*8C=/_;/>X,g]S;8>N%c-=e$Voucml-CsLE3`"88$V2-(_MN7KVD,rtB9TrX
%f/e/dS3A6I>h_6#mBd1)aF8ZQJ-Z'jS[`UiP$2Dpl<@Q`.s:R:0BtF!rDR4C:3JD:pYa9MRoThI\;XN+gS^W[T\lYFP,Oc6T\nnW
%1iMR`Z2Ca6&uUEK[tFR?i3Y40ama.jOooFXa!fXJppEPNea#S#22>KL:5TWt*/7pAf-F3?L!ja5JoEG3Ar)i9%Z%qep.h[CQPh.+
%&aDh@j5k#P5CD2c4$jp80@uP.3/aXCHttkg>(#\mjBMa!P;(&;^H41@#3H^A-m2$i,!*fjkA1J1@O[AC^jCU=PTo[@,l#L&$*HVd
%aHoUnM?&<QK6lUJ/G_b"18%4.5Jg"id,*<'Q[c4^-i/\T-<*AT7a1s3XE?W3J3L+N>*iBkr2,"qEI8Y!DI>tt%K"S&%_Hk4Baqm>
%N8h?1Hc.gTOpcusGObG`:e(i\ST3d^VZqFd4m+l@N$poL`rMScT(1Z,C4""$80MK^+S^[IA6d;'R&T=gXlUO2HstZ8MZ+G3;TRY2
%;*m)niXu9";>+N_$Lj)Y[%=eU",'0j-f4AYJK[79I)m167(Qf^pW*c`<[8=8Ac2Jcg'fMf5boG-F2:*Xj4ID`#S5/fcs!nsGS=r=
%;hK&KUDi<sAGAu/Gdu>4q9)<CP9;u5b](DBF,?O,@HgnL.01l&'"fBJAun-"d_[9B]cQ"F\K!rdehJs3jLD?eW]MCeFEBC*Ia#??
%[dN:6818":"@cl]?<`VB3S>?3ECJ]LD8uOmEJ+dKd/c'_B^]1aX\a!)`chA;PYuF?4k0XiBb].d#3&79<T"=NC?"GE&j>=7+nJ7q
%^*NMqcgV^mZEt6L+g;Y7Z`u$:4#PgX(1`2`l)p.LBu4U4cr'rh'21oPbPn??@8A]=%MUQ,^3*+n^ff7b\UU%17DGUckU3B2B'Zgj
%k8;4q:\KoMSMj"!^Kb8m1`)K`lPKK3@CqnZ,;CL!a_![@#NLrD1i.esSXG+F669A\Cm+A(qS<1Xo5pV-m7SL*ge$5P[`30#Z^]^9
%,`6b\1J)n85MJY>NM%6.lt(];gh?S0[P)LYT'#*rDu>3V2jm<J"a.1HQH!Mhor'$?c5c%&:TYpD6Y5WJEO.8YWOYLqhe%VQ&&hj8
%l:,_r2SS9e"3j$t?c%H0Un&hp0A>&q+F&$0eY9+6.Em`TF#_p03p_jcjNhT<Js!MrIq^O*i*+pdR5[fd'AKENWN-^Y3`QkhKEg1/
%'mtT<>@oCMFsPo1'!<QC)k:@)J-hfS!ZlC`?l6g_>`d=h/P)"\Ci&$g[Mt@]\b/f,L5g:q"3ErG9X*Q6B:,eH)\0_hV[51J)^4<3
%1BVBJE,Z^(h:Q,!nU[_EY7lP)YrGKKCE+]1=ZgsJ*<<,sSsJb'_.0_Z+Q)c6&EkfB"<Wd/8dCBE[N6Y23nV0-6iN\0"K^reTQY.q
%Em.%49MT*#=_7fRLW7hZ'mGh/_.g3tj[Wr;>J%,ab6<\pd2;SLPIbL:e^b:Yi=jPG/u:mi>U$Ru*nCB#V%+'n!RQXo$*[<PrZ&E*
%V(_\pZ.6Wr\8l!0ISJQ3<d+)ZoYQ"`>?<j0:%PW6\g*qkW;18IlU@okcNo&knB8-Hi$d0d1:P`3k-3ER)Knq)D#:b;mFI@*_:Bot
%QEBU&;;3Knp,7AeOD^"5ESae[5t$..oqe)d&X`sgC>d(\F-,AWA_49C#&SpS.Cr8![ZV4]Tudj_`H-FG4:/!)5g[F`9%+sa]=.,!
%[0K\fE?I^V;\-29j$4$8_Pue2ZYua:6nCs^_rfI?h25B^4hGP>VNJ+ifI:4]Vf!;i7OrU5VOK,BS.4Xk=bG`M*p\09#K-r*It<6X
%#2/,/X>ZdWFV0s%]@qdTqIQGn8ugmiP.KF.2YaHJb0O]G?fLS%BN'jInU"b`;.Ib)?_PWkj:RY&1+XFC@#bM(FoSO1maHMQ\iI=>
%>[Tok4hX'BB\ehkoH<E)0M36JD/F9odg40]eL_7EX[h1O5Tp!3cri;.OubQ(1B/+k,`4+E(as(u3cf91>!g5J2<q(C&[VcU6?r"=
%$!4]$oWD==ff80:)`Yo8[Jg3NR(%X)K-<a,J4SmZ,Z&[S2fa]N()"*--,SSk4JR;g:5<]7iRL1S;B_/@?KLS;#j=P6OQ[t#ZZ+k`
%)Ln/f[`FSpGdIIX3MZ1+?8Th34QHOrru=WhO&JDBS`SWQkg!AAU"+GP:0nifQiMh3NZeCj8WIdeZ7L^$`=qm-_07dhLR4HFp')p&
%m;pMnTk@4XE8Zo8g9dJZ"oZbS(lO(6.uar4aoZl9=R12qJXr@4:(dD@^eSFG%-fO-_gOM_"!C'1\/h``[SDQh$%lT?m![WT);4B)
%M'c]#OZLgt%Te^R>sJ':=(Y)q'>EK]Con3N:*E]Bn)rUG/(m5NLpetgfH&5U-.i!]SMs6Y^`EQ<=?d#mfpm-<QnVFbQ06dWE9\]9
%B4L;DKt;+/2?a1p;N0`0AX*r;4&$tV/bRUSe.WH-]!8e!(D@e5`NIn*BC+u_T7T(trQ@3E:Xb]l)Sb4m%9$(`s2524MsURQ_Sp]s
%aIG(F8p3\CSp7202g^#7@n+8?kAoUU;R+Z=`M^%(8IFH*GA,bO4ASQ[ROPL6X=O1H7!3Z?KGOLYfpsE;c(OT=m.kZiF\,@KU;];O
%8O&0&BP@^HKLZ"n=e2^Z`3KCgeZ-@=)I/3/dnh^PW:&g3jY:l<a@9;H*(;rBRfJ+P1c!=qCqNB50Le5qL^#Vm_4tBh2@t4!*C.X<
%F8-?dU4.RB&DI6Ue0UI_ktl8$k<%j'Y_I7eSWaV=^+fcV/Tps$EfN;^K$L4_(gsi(FY\,6B8o'WZ<Utcq.7739kI?;d!(qe\B,/6
%?ENZC>of7KEKe7'pjm"6-Hg2f"D)nTR?EQaoc1gYW[$:.l_Y\*E[%h7%J&n%@L`n??mjc@S[4I;Npj37d4"NCcAkE2(c+-15mM7j
%'=`B3c-c5./sITq0K>5?h%";gNT6n.h<qA6gR$l\I:At.f8C3ohDuX:K(WE]M*&F*g-2+q6Q<Q`3I0[)^Yn5`8oTb!*gE&8B7=Z9
%%LqMV[XQj`CCL_C&l#)WLXo%7o-jL_[L[4gNoD%HDgIGf3k9`C`)1b($0T\M`ni[X"=`[7=YJ`rRc8%Yr.f@KT&emmC]&dN2b\b?
%/Al%f6\oe)RWg.%n2WhJBei;6;fW_/,g\6[hn_$3id_i'3D#B3j*Z<g&s>7^%b8:kDfL_d"1G*H33JAaqck4n6IF-Im[lfgot9\5
%Jqq=X+(lD*`,*/iZb,.)[@GiiB`#9YL7PKPD"#90]sg[-i0;0jmOl?aI2Ni07r,X@0<c6a0R^-<7\X%agQ]lRCrWY2XI5.FD7X5D
%7q@C`<7/c'?WrJam#U/'+\R>YWd-=hF,"*.=\c^VMaKK_S)!CUc=r#R41PFA=e4%.S^8X-1"huI;HWZARDF,PSGpa6+nQJfQO8>=
%MFJ@Cp))qLM&b#.bOI\AlW?LoHPWgD34j\Lr(2(E0[.EJ$:VPah1cAm#r0EP#dCQgQ]AHW]0la?<k$`VR]a:]"?(Fd%DdeBG#=dI
%<S"A\FdVp(EKMiWXsma+a+5T'JkaN#l9#,Q50>eHkWpgIm.,_a:5A$^8o/:_PLP.h(6Q!-PRZ8YH9u0\VCooS)(MtC;!Ol@-Me?]
%c;PB6F^KI'Bqj2A_hZ]/896U8Iqg0l@;'p@8Mh%(<uC'X4>kOcX_FN#Y%aWD&#P2b^SbuXU1X:jDP"+XXq*,+A`)?Oj=Z.qnijM\
%gW9[jfC@)XiI\a%.*c!J@3a?'Q03ID1i?%t5n2p:954UO+kSfJ="^CdO`M,<Mc(j5'EpTUW@jmo+h;]L06lZ-!8FtRo#1>+2nEt!
%.K/$,3_LZsBD$KKQGZ<_JN16N<NZ,'Z22huX/>296?fK!aD5VH\!%=Ah9!"*%qkUm1ab=T*2iTmn!P+>NmkEabTYt.D)m:4#R>`H
%lugAR3,n8eB?iNOrC\0f:/aZl[k<<&h:t5jF,C0f/X!Wa=-(PT3%g3X\RBXp/gpH?2Z&h!oSr!DP&L<Cc<KG(M;#o87P$nZ#Rj)U
%\aJ",_0^g@4IbdFLI^=GX1;:Or-<6mMmV9[E4$5.C'9mXb>*[/)_OpKe=\IVe^Znh"nbfo0Q7R%ZE.\,>cf^k&FXIqpHq8l8'fXo
%$Qt5o!jlV,auV@,0"Q##RhJ%b@u\>#KS98Cn3dCmY;;H10\9r'WX+%'6?sQB<=[qa-?[%ccWp$L4uWKFM`^KQWCRn]*RZ"?^^fMr
%23:kn+nZu5cQ<5AU#VI+CW]L501Wc.nWq-0KU5CqAfW2ab7[Cc6B,E;GCJL#Z"tq#s&.Iq:/b6KhRY8]m[Z)qL\[=Xj@(hZl1hh.
%LMLn7j_ru!8P39)"5:JrTl2cI8R(LnG2BMUf=VPqp!5`k]8AW-Z-:1]WPG8)K`KXslCFK\].J[GnWm.Fp25cW9AT(%E_U3q@`E-+
%@K)\IPBp$Q"m;k<F:"*8*Uen5iiQt$D+"Y4&'@R"I173-0c\48j1qrfKUp4@5SteL&(@]taeCj4:0J\=E/5K&_"DJJ$SeSYWh=#`
%(u",)JLGl4/uZ!/]bsEX,mNDa`a1KS4"H(HSjS[^".WO#:3S\8ZPKjd1Y:.hE&N^][DH<T*a)%q=]o)`?YP$1l2YdLs5K<'b9fL\
%9EDJDT+i'0r\06"ZZ-@oq/O43L>`:`B*O]F0]XX7NH-MG6W>)ADW92G;rYp1,ZF<E<JNVkbI\Zn,3N[UK=A5t,8&oE`A)Y3)\hq!
%<^0aa=GAB`o^#TIdT07TD[5>LGU?Oq\:/u/l-tu-^=+>.-&WXEi(JV/a8ulj8ShZDX3#5Zn9)f-*sD\KXJiQ\Oo:EU+rj0P5LZT@
%2GTo-WG!sZ&')=.=sWDg_];h=oEXAchn*%/$n7b-nK6&-H]j:UY44;$DbtIqA=SE5G0,@ra$sa1YG-)WKYm**ifH&Z6Mmk815EoK
%7K)!9p.oOU4'<N]h?=kXlL*n@>*q%_1YjbVcF>LBQ2RG`a4.hP@.)L_"%Ul2bB;a+[l;M:>T%%/_lj>RGZ=2g8I@k6;k3KsNEoF$
%3&ua-]VM6?.g!HO6W_D+&GZjSM5%S0m;6X1@OGmX_^1J0U6FEdZ4lfZ7CO2d@(%_*fGdEBO)Om5a.%>BZSL9MQm:?Rd>#)$Xc702
%n2\!q/^2V5^=D25aNF9Q*RFh)ioN@0P3AktWV&EA!q&.^eq+j-qf4I-dp0QVm9fAUL=ni[SR^.tmYn:>I/uYf3!a>PpAgC&2\7(O
%VTq_8U;>O';>lFmZ6\M2/rlAK#Jp4+9B+r%1*n%E-`d#*C;jFc)@([5dS>;J-!>ip3S%VHW#SEtn2QeZ&GJKikCHP>*0rtmm?GGD
%"gDnaW89&,F+U]4@,M#q!bn1H`[LAC\.8ns3,Hs-jiaIQaUgq6X+4V:KM'.A)_Y@q\=qIXLO8#O=:E^W1iVSlQECX!f\o&K#*!QB
%rktMV'lerMFZ<O`bnd*,0b9jRGrTbaCmGhGk7'*^)T]W<M5p8\e9j8IjUT['m:%l6@&%aW,NsAFU(7nTY%&;u97<8p.<?m6lstg:
%#nlR>0.pHXk&s:_,j.d\:!Xgu4,H&Lq/anQ<Y'j*,qI\SK-a,LOB,cG-?QW?fi+Bj[QX!#<=]sTl2'>Z?K)=_r:&a!rLC5<B9**R
%4-,ak9K>?ONlp4Zr:>H'GRAWk1+^uk'itU?(:?R\%r#\^3H*+?o0]%j\=oYIOV&\a24^-]a+.S\8sMoA=[O,S1_*7W@+D70.MpYZ
%gor@4S?jpA<C0o+mD>MD.3dqUWn?sVd+=_P,69Ii[JK\eJ_>!W!Z6^$H[Ps=S/"gO;2!S;W/;%p[nW.HeC-n3S'lq.nHRsg(LAZ.
%^kYQ<a0c)M]`G@3;I;d\7,@Y6b^]pkM#Lq#4!Y\;_p+7>8]'.+6X_,%@(+gA.TKIB%h\(4h;Cla]O0SimMi@>[n:dcF8HU#aG`!?
%->jYO8nPLArKq*N\r"kA(/Hg.j$0%YpEV,II,c$u]Ob;7f"Ajk,HA\94nBef?<=#.nK<Q.-f+%X9J+(`jpg@9#&L<fguQ$gT[et`
%=r==bOX]/\.V,,D&nk]'NpC35I0fh3H!uic?Jp4<1D:R-@?j.5djE)nCpmL!YORB_.GM4tbW26;ef?qU>:\:n4BrtFKK.LpCYO)2
%f$itp=uk0"2VAJ/1tat,3lQ8:fQH\&qVF,]leqV"DEMCj%I>"CUgX/t)J3H$IneL3ZF`(+Y]"\$elh2T7WPQ<a][s%L'Tf^M+JH;
%CS9DK6>rT@BMC]e$ZWbJEGD8fp?o`694['k`Ii:9<"N7%\qR^+\^Os5r#LtHjfXY(+U'qfhFlK%a/0IVdlAq99/8dXr@,uNW?)1*
%VR%CA.D-POj'[9c-o)7N8QW5!E)**'nk:o[1sS,(k4._hVO9$XNM9!5A4!8.-0I:s.c6!&ZGb]bL)r&Y@i9V9EO%/8"jRr68C,p;
%7Z@7!1[T*/-XK#95WG1m=SAjc:@m$1Sn/UJWTR,tXLRh0NAu!LbaCOXq%[H#,U0ELca2[.6HL:?[DIKP4OAq@g=9$<Lb_1mJNb=o
%15*Ff;M3?SqNWqU1/KSaIP8Ol-$*9Eb'T_2g;9>p`Q"0Q8>=?R"'R%l\u%%`>."kE&`,lYo4V(jH3ttGG#lqk'bjo`kZQ"U"(l&L
%;%t8`3G`Li@\?^\k-tNcbXFRpih$1gECP'tfB`M!H=N=4ocF3HZF&c,i:Wb5jTDH`W?k1@Oirp.(NQFS]o^r,=b<\odb\$[Q^m-I
%?rO-(dd(EcQURA)I7*U2BoW8]QuHdJ7S04&ebY!lJ,*O^>TQmA2dS+tHGLPf0KLu07pId('>G8LPs3o1a2Cf:S^A3Q$E@*tJepsk
%3>pP?e/u]rUTA.%@gE6CS7SNY<0[P34(P([<Ig)SG=20<;T]=VUPh9BqLBhRg4s8YP:Idp>u!'!'KGGIq:2LI#""gL(('8aTT3B]
%aqHG'F*=%t%dGjrR;C.?#>DMXLSe''J<$G+$r8lLd'\-Z'N*>7c2,f_]oGQAd^VIHKa1FB`AH[%H?RA1))n-YJo[Z/ZJ>n%/:s1e
%b6snuMs[0cNZtO<_JZu1Q;A>m2t8?/c&,I&c'(4T23Zqe$Y$Z.,kg=nMPKJH0;lO95'nVi#t$UgSk@l1RO0cPbZ?s.78Y@VX_ds\
%2U+@>'+kDN2@1R&;EoXMVO?B,*obt(l2sB@6?h8A^I<7_kkRX@?mjH&(Z:P.XKgGa,Y"c@SVFS$45&Q6)T/un>k%Fkdh<X`T0`F/
%!9E^]Sf)V]f:jXaEO`@<b3p:5Ob]m827Fn80*0.=HhnEWosPhefj`5e>8IioMoW2AM!eKf%S(^tDY:fMfQGb>LDuW\Ftpg1Sa>q7
%?SM2.fiS<2*1ChWIcf`$=]+RlBZV2kBJrT`[KK?@pr6Ut3882TRr8tMrEBrFSZYT?h?B*&lg=ZtI-FEPCS#EuY5)7u[W,TlXb"J8
%\m]I5:)7Yf(V<]Yc@!<:BhW5^PHfecF(,HFBA/S.ceg$cIP-qnD;S*&gW5hnD*9RmEs$M+)C$4ja"l8XA$>3tRu0)%mF+(E:Y,&N
%G2RtO[k*H2?J/TK\Drn5R6q4L9mXN&3%T8sqeV<_iR]W(^B;R/dtl2Tkk5EXSjV7/Gd6PG:e03-6W4S3H'4*l/ECmW(bM9u#?HP#
%q@[FJGU[m+"'8WNm&c=9XLHm/m7Z77dLg,i=l9W3[kb",,`&V_E4l%(9Ej]K\jj&TBk-%6)OIn`chtFi5':gLO"hjQnhW3cp6KQ$
%JnsN<fE4#7h(3Djlkk0'$_Ili;+j_K7sOl2LNoPo@m'EM#J'\XqK?Gr?Zb6K9\/LSAbIFYb2',55frj1qq1U\N=Qt6a"u>&9E)Zd
%.RUk<"FrKh'a`"FhIs1-'7*3/1e'j\[ph>YErj\h5IdAu:U;6L5j*CMZ%lLJE''E5?q$nA@R/5W-k@*(l,"VY.6+[FC`K4i9].*f
%h*@rY)c.!Cl!t`jm$hdfB(eq0G)`cOW/RP<!PD5)jiFltK>^N(o$4%,kWHKHQbmIHb;EelJ4RuAMc@7@-2<_f+ph*1N2tE19P\_[
%[_;FXO.E87,82VV#1:+D'3gd!,,GdCPb&3(91=``jZ'T*nPWfCe;NJ3M1q]sI+)?b8@uj(a-(^]XdY.5'2ef/gSgs(2R7<;c#c*6
%VS-Dlre@FLpMEDT`XkmU3Nn&]KUZ92>g%A^\dQj!U+XK%B\U"[$_HeGR.%p=GAgT@2/?U3PS-ZD,G%$?L8m;A29GR9N2EFL%-9E/
%#tRV@8)29X;e/>'V$#gM3ECIJr:ro8@r5CLl"Kc_#^:lt<L'R"Yc,XH(n-c2*O4lk@?b4.XC;_+"7@/j`.&4bWedOT-^+"36r"K5
%ofa3$;VV8_,)U\d8/<6D*4[8p<s\G`":ZrlRHfR)7hQ;*(Nc2.\SYlT1T#,QZ%g&LU#+oWB+]:s5k?*A)[Uk%IfRF[6OU@T72'S"
%nt6j4-Y/EXBU%bLDPGBZ.dEOnA.Kpk8ghFZ3.9FRY4jSLX>cRpeQ_>de?beEQXtoX4.=+VUm&#dDbF255>f#!K[Yb4QYYrJk2MP>
%rIUXp\b8j20;R(NlaX-!#tmXU#Tc<p^NA,NR1uft!tj:/kr!HJ)#REDX/S[YMLgEnVYICjZ,?VXCELRX@%,9bM%r?fYcY<tRr$OR
%UTG,+#D5a^Th-LD6tFBsH6B(pOLG^FA30V@(`#(A9]s94_&1&W."bG0Qt-ZZaq6Qdg&eh/"Mg`XV#Y+&klFS@TP?+hWO;eN@m.0i
%U;N;A0$$=]1fn/49=(_]fb&OSe(LE;f2b5&9p%qZITefYdW*4LNqrFb:f7HnOq^<C8MTgf$?ekTQ4*=[jq!Rq7fo1g;G6"aI/f@3
%<4HX<Z:RrbX_H!IFFDq/>U@o?8`Z:>B?Si8k+LVCBiQOinb<W3gn*NdO)+X:a;^FVJL2PR5hcKZY^!As`C)_4W/:SiE#p#K(tcB;
%U^6)SdPB+4j;'t5_EP#?U(P]N5V9NO5rFBA-UC6aU7j11X&TI(5=&.-;)^dVOAd7JfF;,7LuOas-qXc'OcLI6Fr8@CKZr."0,1cg
%_WpSViU`a5EBLuGmOlOBkoC^MU2q-4Z0)DhD%U]27a&$U@$h:T]Z@r!NVh8Y*Ocqj%O&VjXS(<n&[74;iskQOKo$T2!o09HZ%^%.
%TB?F[<Co?1OWlh*KcDDZ7tL\N'f=%M1o"p9Kn%FB.(ni(3@Ut04)BHp-ph@L&+C1UdKcQhQVA*kc9'lc]$>u&YR>d/WPi9m0&_#Y
%asH:;Q9NPYa@dE0XoM*mWBmXlZp,h*V[<k9PJ8)Q(6CclDi96hN@V>sF1sBmV$i;A=Yrm3`tWl'D+JebrEMuLagQZA&i;bj'jVb!
%q*^XNU69i(>.&Bc.Ofd,N'1`QMT%SP-cgCp'KNS5=B/D":ISKYW2dG_H_C4MFnYGVY0Z`$HW%i3Qt@IGmINDEBW&"RDQA"'f(SKA
%_+&UQbP0qH[C97$7hTHU#XO)Qcnc1V?_+q$!9A6Z3-j(!Y0d7&h\k$2/]^q#4X)ZPB>-("6W71K@1uti!sLtfP`rp+&X%P!<25&#
%jQln\="sjr$\DVlZ-*Pc[&sM?PJN"LKNJ_+o,?9?aqrZN=t/eF%m:l,JXdYb?LK,Wo`3Z*!W[4*EPC4JhiS^nFqaTeS@BN0YnKOV
%*X6Tmdf9c)R-1*FXBGTaNYgUn-8$Gu_`'(;#W@nmhThUZ&?oBNJqjFi&h%bNn7#ePU#T66'[tk@R&.;AaQ?h`E[2>]iWMd3/>Yp9
%Gqtbh*<OL%cNNJn=<XU,VB]!tChd7U^@2Op'9I9]%JGM,&.p0K#_uZccA3M%Q@cZ;O\8iDSFq-2'<55@,AE7mp19m+53*C!+B#O)
%IRqVug!0K=1bX%m9e6_G9j"OH_D"Par=$#ei#7^WE/r_;S36A%T=K6*-"^ZQYXXLT'@*j+c+[1)Smt-VIBjOG2RX)#`F>p:;R98C
%f\#m.F_j-2*S]G\Nbrr\rt7!CD<D^9gJN,ciFSEO.'/d%Yn9akftOhUD^6]kI,ejW^7;VqAEc52el*>!I`$KSa90eqUe0Z(a>4&F
%e"8YEBB8Z<c$LI!N.`N_=[0Y2%]%>e#)5L]>kPN>TELL?43^h3N"&mBU!=c+fKF$ZZ#6W6bJL0BJQn':[\R;2#B>9h1)T1;6H1lN
%j;?OZ,)8u>VdteABgrfYZ":+'_Mf613c[uI>+&%QM)..H3[W[[`[bMB;GsB2O`-pYMU>a;i(Oo^&%HFS?3+n0+jC]TN"//Lio:/"
%3;DBq'@)Gi<b-TdJU.(mo;iDHrKF=K2pVZ'")3;7'U_>T*op*hqQP\?rgC(n*I&/nrmG%;3-lZ^H?!if$H?tIQDFL\kJW'H;Vd1[
%9lWU0F34(X_@T!eS,5&u^;P(K#]7-9cmVN7G9)qW32GDj&K[^11<D6Q%^)<R`c5iP0rR&))Mlq12$joq)Ef1FW[HM_,6G#-<>bih
%>sZZh`P'3(AoJ$7I>R9S/?*mWqS<nqje)F4C\f:2c7U1&<61?,]sT_'<&j?k#IknnO&LrOT#[$'4&s**[006mXBUN4O1;9R^*@0X
%qjoJjb"\+PAWjR>e<1R^0iQaH:R!&oNB&BPJ?QG)*O"6'K5E60KgE@o/eFr'buD4$?@Z`*SmO^c=c->M@%4DRmcW&OIpq`3rr;<9
%bpeDOju'j<kBNQ$Vf!\kc)@OXFrVDr,KDTQ.ApJr0mLG5l^ID;o0+sB/J+E.S2C+'1p0FD!c`-tjsKfaF92*CL"O^S@E7ul7GZZM
%@K])%NY=qY[Pj_tY9B\X-rtr!k!^F]2pVlN$-)hG-knVj$\d&`5))**A$(lI7ZIp>o)Zo,;:#3["e=/,oG$!fD=f7%,k]r".-Ycg
%?X*b>nprS5>jqd5")R"<'S`+OM<;#VeY8.,R<t"3e&7RGU<o4sFXTJWTDMiES,%ab"OFIh"nm#Pi'V4Fl@g`3YF2"268^Fl!,Zbu
%#K2@a)<3,E2tICtbIUgjOL:fh80>^Lb[aij>';^::u#&Vn:;7,?:Z/)D5UR+'RH;>PTJ(obWkh<mfDfBqFJ/!3^#uaZqES5>BrXY
%jkSaUh97No<@ISUqFhU5:qU8/26OH-pG::W:n95k&GT/n/:994g)b)BP6+7DT%O\5:O/JP_IGQrAIj79iN.=Xms-nCgF>;4KOoX7
%c-&^RiJ9p5Z.X0-.7'&#RWC='c4:=<Zepqc3JTDa..`U6QhZFX\T,`g[Tt8]ZTm6G;l.rbAhQ&3MVLL*995(':[l/TA;bBJ7UOe(
%+N3\;Stn1CUZDd:8Ig2\KT81Y2st2F1`&,'>#.Jh8W59KP3<Vl^r5)#V"d82iN4#+!0gcacjD-nB:"m7O>2^=THq(YhNAI(T:%n=
%N@4PI?8n$E#S!7F%W+c88-BA.%2Pn]+p<\?N$L9mmKLSS'n!\,Brd*u.EW$JMYF?H\/C=^,Ome4a$BEMX;Z>/iPMV;*BNA*GspUZ
%7bS8`-BP,?j9n<I5ru(PJKf-,jb>Gr\-ms0-,p?-$146q#p52l\q?*:"$Ou+L,9??k2_C^Sr=SqSS<+E$:6EcXY@\>Q6CEb68R!1
%K3oh@)aZRq%n=+3cZRo@39MB<:5bq_4no&K$^sd]?;7s]/R"5];CIcpBVVM!0r&eU,7B=?HfVh_8iZ,O6.8;);&$l'$RZC1.DkW^
%g)?sk*JU_LC:D6QR+>S/W4m5D:1dj';LPI"c689b!V(sXn!+^3k8Zsh`oRh!68u&g`B9>N@JEJ!4/nqiU0PFg')K\si^cYa7a3^i
%HS&*Xb3OCKk*Vr,3$U!k=(.3igc>?23\k3nX.IW5Tmg54T5_aI6[4lm[SoR\/-K$kD<$'bKgB<(pFjQ<CGT\!/4A)8]sD^CKkSlF
%?L>fLB)p-qci0c$I&AuMjBFiioDSq)65pn]FBK(_ceR^iL#&nsCMe<4P*t4,%?J:WBls=K)!/Z*+5lBf*T9ao7sO<M%WV18oPL&C
%G+L6$0l#l(*:rI2p%Ep^`5TgQVi(e?WoKH3_'O#<R$#6LMMY,o2'or94ld*Ec_#>c6aL.nJ>nY&\R[*AE."3Ol*-QMW<]T_p7dTj
%=i=,)?YVd'SYf!Jep<Z"UY3u\9>%:iPLh)%;+YJ?)qmW:'Wk^$QsA-N@ZG*udRNXr)N0!l-W[qaq`/&DoOHPKcf&kl['=b+XZ;:j
%YmqEa<Y1.JNDW@$3n\KKeoGeJA5*p8*cqcU[GILhD)5IN-VJVt:[-Yg0oI7Om_WK&1`*'.(Df3i`A-8*1NRK%&Yp1u@SXK`BtQBs
%pqcb58n]10313)d-S@@';^gI.1P56$m.Rf9M\o@)*Gf8E<m0?H:gj0Z\.?u:]=?hA0$a8F/2$hfXr6asoA;/Q34b#VXp^T/]kNIn
%fQ!]dQJtP1lo4u=r>(aPENkh-<*`tRJS!N+/5>Ij#-EVclLn"Jl?9H[FaFp(l=Ou/:D!ZZc:aUY`G@ic*[%VeUjhS[f1OBPJSj:>
%-?uh[?X"$nG^I>eYV.:uq3FDMY?*\SD.0)B'M'RH/X;4JFl]jXn5=V6DK<IR:fIf0KYP4k*au+\ifRV.)JV.*$IXnTa#P+TBoBSt
%oJ!t4A?X\lK\>Vur^?Q[,?ns&&f8FNUG"I0Vg2LcmheHIAk$i;ZXZPF_Vh+_%0\I.O[J(==<"@I=mDV73ZSkpP4f17^]u_#@g_L0
%11dT8l1WK)TjUh=I%:$,GYGSKXk';t4el`12%+2>j"r+5-AQA+91USAH:DZjI5st08T%Uj[9`BPd%PGnTe!m.ZDtaC=,WDYEWVDH
%HEX&qSTcW@=p\F=3CT'a79<(<$Hj^=^1nBc^9"N%=mU2ai!(rlg8-h\Y572F4V##I?Un_4.@Z+'YTPTap'AcRYri$;Ao\X:i':nY
%3aH=HfB!Y*Mo[`NEM3,8jqf<(OG4Seq'g+YJ^t\1dP==,+)"0t,tUt\QWjt^4#:Ub"]SP-1'VBdOJEdGUUE!/;@@T?MsE1d)<W"J
%)I$nS@6fZ(;(aG#1''9N0W3dVg@;[9Dh>F>)Zl4^!=9RLhBYp@mpWRB<CF5"]a;+2!m8Utq'OT)?t3(%7ucUD%D5AO?r:JpTP09b
%8Zb9QG!^0Y8C^P>KM3eb9!ZjhE8KQ4*OqTe8ONIC-ERa/ZRVra(i:bX.,ZUl#jeUphGiuYNbiYDAD9__jI:tSN`Hl7:SGU-\&d3&
%CFG"A`gQ-qMaPY0D51chjcog/2r_hPM=U&n%T(P#Ss(aoi-;CdP]nSD""rUDVAkkh!``!i3*]c(\8E8CAP>;Gi_JV;?BD16)J<e#
%'J1R4p$O7M&sgaTZD#*\.`M\&^m^g1qd[O'=dJ9j+_Nr,PqE-=LOGXL>UaVEdkjcN[D.b\pH7)Cap*N(gE:I[2%32./Se-MOpaLC
%?)ROZd6kADB.kG\WV*`B?,P8k^[H3g8_q_E*Y%c"p$29m,a7;FR;MC_L+[X2h!>/SW0D#f2FZY!2kdJB&(o.4@(iZD]=Cr=f'F;M
%JVi.@QV)2$lud6h/plF/Oiq)*2WqBt]m[KemnDDGY4%u8gWbj<F+*Aj1tTE\\3>%YUnbLp:=fMZS[uNr9@f*GJ%Ks`a=_Z3*aH#E
%-;,,k=Ed,uKSXqVg<7`XAiG,`-7rAjR[sg6Gug&q2+G89NcM8WOH<C>@:kP&-H!00@\PcaN;74K1ZENds$[]?GZaB@G"F3ldq&3A
%EG?MsWMof,rS50+X,A=7=u=u[C0Ib6obbF>g"3:k)Nk&?Nnr0S>k5"hq0Bl*Z>3E)6JmsEC&aS+TbKBG*oG`tJ`dM$bq"T?"*7)=
%r2cE2commlP$kp,BWa\70VsEn+#_%llQ]SrS0=COd5dq?CbO,.k(;['/P_oD:HrVbo8KtqMX*V13@X-5l&n>=_dJu,IZrsni]D1D
%Q!/Al7[gRoj$&fX7:33#-R796%$u>u:-0J?8_UmhR;41=-CnB,-HF]`rC]8'CT=j4'3XSmfk@hNh1Pao-Wctg.@;@6^78^-1aeW;
%lXt[\PT4bD/C!cA6*?hsCY[uq"&4df9;C0#QQ.sQ*+3fGH9osVMG0'+CfK^Qa),Al?#klae@a%!No@gN.6Em?p1S/c(P_^/>6T)4
%=2DT`iP/3P3F!s+SV\$Pr#0lZg;,&#/MkeE#Z,[jns<oOmYm%q[DH$MH5p(Eb'T_6SC'([*(2nG9F]=a!g`p_[L3T1WX$Tm=ls+!
%?OH#-290qVHl3]?4D*8h!<P3@/=da9dX8iK)WSfJeWdJ007UR/=.`(tQX2WSCq9Tem70-aM;qC54&&BKfmJ/4n4?"^`23pnQYnZ5
%RWWn.c.;h#TDaEqYl#4o+TLC=\g+bQj;L7(o+k%SVp4[D'D.dG']KQY+kC;q9nopH:"_?H`eHC*e"kW7BI:]I5FYR;p9Q'aA`^4)
%!fIL^Q,<[Zju(2(%==KPc+*3/Z8k(pj)TrYo*?"%_lq[N([$o?7DkU+;i%k8+`>L?7ro$7COAaY\'!9Wc7W9GgT3Ho)L&X@l=QZ&
%$f$9fQYYfFk2MM=rQNJ)7$nJ.=Znm/V3ahBU\6'q-!Uph_=rJ@0"V2&7;EJ*$/fJcF84ia*o.)3ZJ"`p`JP$.KQ.9T&uEWWE0Y_[
%6>aehSRAS<+Omd^3l+Ap:=,We/;$ZHM<5M)d^6>L71i^@<Ak\ZPXm3@FZ9`p@5M'u"RAL<iXKk*/R$Pm;=64)<`q/'^5Lqj)X)0S
%j^?lT,j>ER$Y[S,(LJ)2@?(f]8iX@Tf,P!HWdiS+Ka/7-pe`>IZ@N\Bi`i5I$,buTS2+B'X\B"pn!I!4'jKf67Lp3`(q>=/Gt)i.
%JpACQG%YLL"?R'=9RPMMOY-;NbMC\T`?-]\^agn+g4HY/2<N25<=\1R%0<&%Qbu7tZS7e_XMJE@)Qp=Wn)AD;-d1I$B3g$-EbUXL
%MW"K&G7$;`9*u-cRKtk`_Y">9dWM>#3EeqX"rqXKdotOP"-b=B3%d\790rkG^F./V9NGM+emmc0<T6]"_TB85ner>'`>3ZR,,I+[
%-OdNCiM$u*OaTn4&Vdu1P*h5#3Yq==_g=u&`=gX.^5.T7C^N(#&:pCs<RrDP]N)Za/Wq6BiM(q@MIeZ$].D5YMn$$nZ5VE:J]E@i
%m3]]4*S#gbPpfX`LJ/CtTolHGGe$-B=9Ib==bnK]Q`AjjcPbZs]CE;.diAbHq_E*n;qN!7FX#heiTRtTCa;[_&grC%QMO.^M<EB#
%!VO3$^F!3=B7;"Y,>PPJ;=^K<cX<4\e"aF5;eZ;m??gMLh;V!F*7gWA,&+-HnM&C6c#-<$a@^'=i*kEd>>H6$+LcbH(dVf3l5c#>
%Upe\hk),-7/4%F!P6MQX!T]Ck!D/P/GnSh799'8nMQJuOVklR>Og)dS_2$M.NX2p;NDM68\,CRrC$?rT_j>U?TFp-.;3sC2:+FF+
%ieYAfHO5@Xdoqs,86jli_moKKSh)),>gk@'JSTkkG4(/O_6aTtjN=9qdl`c1$,hGkFEkn@>-(@>*/kN?iM,3]XtA2Aa"j2*&YpM@
%!o[O_]=R&0cM(Cb!rm"6d@SG<"Cf3D00Sc[E9-nMB]@-rZh9rI6miNUekl&R&O^Ah97Gps,@C!\^3efG*1%,qM$,1;$\lE5^/uWc
%D_i30!:_^8+$1[g$&!q`jJ"jN_/n@N3=SN:Q-S\+nNBMd*/sWibHXD^jU2f]0V`?03?k.WH#R_j[]-0eS2`KqN\HgRqg_9W(E+%m
%qW@5/L`dc7$:g2UifYP-)4]$s7\6`*)Y``V!f*qQN;iRn.C=fg^@93V$A[N(%7MV[dura5=8a[l=u<^\Iim;?0+\9jXTOaeN:]aY
%+E-D1"lATh.)3HfJ%gpg$hW"eihGmVh)a$q.c0;^#ZBT%Q+)#PRfN+lN@3ep.lH`Q02O:Hj)*Y+YY`h!g2()gCi2;'(RQ3/]Zob=
%c^=NTIs+t3q/ajHQ9Q%b+o(ZX)Ql;?/_9]<fj^^@__%2Oo3P%4:ta5A,nRP,AE#FG[;JL[KGX9$5+O%5m;mJ1CD9).SI_I_e-e*7
%4u^(e1/L!`q9q1I6b;2M%n!g)HAZ!h);F/1RV7%4s!OVrl0WRqOCAk%mT0cF*X96'L_Qj'T%bnM87",nBY38SXW=pfm61Y=gdfIJ
%r1[CK5#1V5qVYbMKC?JjjTJ'U'cuqY][3tk,]mpM?sIU9?X:lYL<i:6Z%9l[,t_"H3ehYNPRBUN'@gtl)7CS/klZ<cAoCK&*]"\8
%UC2RBH*q-FJGZ`\(;&F(U^/EIEUBA:%lUGO?!@QZXM)C5((>19l/EHe;'OB'0/pR("%W46,JFoN]g_A=1(#OG3JcIraq3>UjRN`"
%]QkiX+qEtYJ9/DM7u1dXkG/::HX19+l@1gDNT:)INAGFA%jLn'DEU9D[4%':DGTn3_c*\e$edmo*R?l/Au47ahhNIk5*'a]HL\r&
%Fr^-;\`EK:PFc7'mP=K9#gL6ce!jI9=R@;F8K`+Rl7q\C$9cC+G[@PH?oaA(rb2^_)<Ie@V-?/AO$&*D.CTHCQYs&\P($iCk+)ua
%*VJ],%;PdiL;-SkXR\Na@-^ONJU=ONK&G2g@",c@B08I*><U/9i\GND/:.\,TD+gLp0d/.n)=*&,^]QJ1a;q,J%d.H"4[<eB&rgB
%/MKu4mcSl_Lg.L*f5@G^1&A'o7m(M+5MqSrDVm9Bd"gs1Bh+J%MT-oD$YHYaQ>?1!k+$V'D^-P2-]eOK\L8?`o4uO`),Sg97eW1g
%F\Xk'`7!a'Cmbt>(]+jf<hp-bN!7i]b)mD+mV@LiHq1R$W9AXl(\U7Y#[`!T++Q9o8>YksQq\q;)-\p=5d;WXS(6fZFjU/;Nqre+
%&X_qG@oG,"ep'FSAgcs:"OM1)X[sP'^rB.'-36@Z&#QkpjC['o9sT<BlpQP=E,\3pkWA&?dk?qu2bueV4?VB]al(Y?_+3=IQm;/%
%m"i<a98LTAUSt\GG1D3nBZS<\)(p\h(^-X;$;K;N.icGA<=R/2IN44tY[1XUL4a3NUJrWp>JAhO$CCnT6),f[p&'n35+9A%\B%.I
%YAm2]M78t-;DX8NaH<jB^sL6D!IctTGpPCu;n)jLSloU_[g,_Q!^i*Rp+1WI1au)',;Qj3rfsWFHPX+7UIhOpE8c"o]#N$<p__T+
%[_f#fV#snnOX@qH%VJ$$^o^*/Sckjak6jLqJX.b.P%-=?6FhH6i82%W.HS.o%#8_78l5i1V@47rR;4#i_EmMU&KE+7(#MqfK/spH
%D+[qk;MOTVR4jE-J.g_%do:$k(-B@56]$^,>e^%%f";!Yai):%i".RG&07jB%=g>LFmta6n0C7!]D@XrPO4j*6le)7GK?5!VJs"r
%PBOV#KE[ojUCq3gl@<[Pij=\QMP1d($.e):I#/`1)?q(F&)R$+?T5Kj?]a\REVS#olu'f:q=HC^--"t=)3mR(3;8$rK9g]K1OO_:
%/Wr!.rThQ9:O9<albt0BDjh`C[*)^H&qLu-d!hjUc++E&I"-aAGD=6',4Y`HLqL5jA]Blu*T0K[9Ga^t'*d@_0G61;WJr6e#@L'_
%`EbfEK0%:Oi]<qkT:+bJc](BR3r0I?Eot]Vodr7<g\M]PpGb\(!Vg67^=;fkWs?(@UKEjW+3Q$XmnqT4cUG$TN5/H?s8E3/C?iC0
%UhmL7Fk5$6i7>[=qs11*E.^T@`4rUq^BZ(VA9f3T!7Q5b)lBI$GX?Ls<2^-0l@msN!ni@&7DD68i^3$:gq:'Od2LWerouaO'a%]R
%9:8AoGq3Di(F2e9>&f)E*?T7A\@aU<Md&upioD%qe,6T@^I1O/37R:OEu2Tf^&=\n4*t=;kL7T,`s"\;5og?kaU;<ckLTQQj6S&W
%k$W@?S#t@HS(W3t#iCO"_u\/B3_mm;@=:/HlG&i&i+ZL'enlo>Y(^&(M^t&TgX.`++p=^K&a,Da:o/,\Q0qA[iQ.^T<ss$m79!5]
%Hb0d\m4Jatd7*#KhB](Qdu[0+3Otb"MHJgA0@6[W6C)X[%In\b9TPiQE,\o"73@4k:N<'<Gc^%B8i[))*X/`UZ:EoEeIfEfh<Zs$
%gbnes%hejjk`?Si\G"?2_'CGN$*CT^JaJ'+eJ@#P>i/\\P/J:#(%A&2<0Rgu7q)0jk@m(&kHi):ZsXN&-s.`&K%FjT.F/0>[+O&q
%Q\a<DTL^*3L>-6JKL<kq!QV61+UJ>G?&+&+.B>2Y(O(mtD0^73VG9WiT+KU'Vi`9$BZJ)2?,K+VUlIts9t;m85lrd6M_:C<$Pm>t
%SWbkj,.f)j:]6DeEaUNoK:dO.E_qr+C\E::6B>p1U"9FLBaG&O3'+ZVk.ZKTB:=i1M.n"PZ:%&=5#t0@c_>d@QE<>H4]Y/Gc-$W8
%NN</Ci[re_);\,64SGnM5m4OShD*]!$Tu'5+51^)WD9XUEh/>aE&BPjl!"j0WT-Ygkq&%SR*InR*A&\3<e'Y\?]nSIF):`_E-6$j
%7$lFbZM&3bJ5db\FRS\rFrT23]CFj3^GjA/kF*7;?d<agm:&rnEclI<2;mb\pAhO)AYLN'"iGLCE`ZEMW1ItLMScgB"W`/j)YCp7
%%M/P+>]4hp$67%=jJH=#]/Hgm0fupqQpnFM,iSP1e(uuF'ie&4??3$9HlC<(jW(e.3EbEH^L6151GD^nPfnL[kSu#]Gb,:bjHhW-
%SmSFO<+=W"MZPJ8>ggs65_q4Z)/LB!fjo8`>1m\,)bFJs>4%+-^0F?N1`*c)j,UCFRr/SaGd]9ga?@ei,N&?cS$u&l2!mQ8)%qhh
%P[t35KLJT(hLX%E74qp/YHMC6a"QdKJ9)'=:;c+`Gn;ta%[DITOOkBl!6^8&];0_1;OE]Y\ngYZ7h"1o_m;8BPo]ffqorHfN`fBc
%7OP*%^P]/NY3oNu?$C26Fq(o'*IFHH>RQ/h6X3fN;cI*/p"/q>.,MJn7>Ott(?QN?P'%LE/RD8dKbpFS_Gi1*>hWZNOikURJW``5
%ps8rVPmcpu;$7jUfdB[bioh%cDk`7[WE!gUTNTpI#<:Bed4Kn[;cRHEMCD3QD-"nhWTTe*]J$5ETZhZBL>#me-t:XP-G7K(>RBK3
%&l"FM0'khJblmu&C0m-u*E"b`Rup+j`Altb8[@GdOE)3s33K821Qk$0;\u=Mq3c'Rb["4n'BFG#lQgWo.kPSqM]<.Od,V!qAi?@9
%"E`*$CKo>/R!F!<`)1^2A'R6s,K\5rE\ADN`#s*>i9-N/<Cu+uK4c/Bb1IUiEs1mN`1t?<3G*-!o@C2o3GePBamg&O82]g`Jd@7@
%&jlZX%tmk[8SM)`M3^MZNTUju@`<..7o_-G:Z-J/P1NMqYAj,LT/)9ingPJb5.!g3o0`[ZW<\3C,$(+(.$qY"irhj!TE(J72L$!%
%MO\F51)OV/Y8[C&=&N#>_[4Vg4gDTV5pF0FDu;]jAa0&r>3@qdPttaFB>C>5k18JoZ"f#4\9#>ME#?-6L:)X@-[K]riqa9*,[*WG
%Ca5@4*L.:SM7Q5\<(Q%Q;-AC.UCK3m0*,3s4]QJRCKNMECZA-hIKSrj\2XNSQR52g"))$[O2M?d0C?7m_.Z>jZo2"!$D>HUpKaLp
%iPSJ2[t@PX^1\F4-LB+!;-PdGd)!4o%?tgIB!Ld]'5UDKTrMP+=jrq/XjfAEWn(A$:iR6RCI^7fLlCU[<,(O0ZZ)lJ6bKQ)J3s`F
%?_L.]e_'_qPCXNZi<P:LZqc4"+HLh1UOe]'/=3/7[,-#KH6m71MhjQ>/YQ;NN*!&DlE\_n&![s>?GLV.!gYRl!OE#"HmD*c`:^76
%)HJEcl8MSf5p8se'+B]*9!`"0.D/*Qbq:8dNN*2AH1IV@lsSM;X5Okf.MR2/0DP@*3_pKlf/uRIG(,"N[ZM`FEia-82fOk4oD2,I
%)eSG]Rs8*uhQ1!0d'A.fWH8;j.@Z]JWmTdA3]JIY0+@o%bt^CpF(DT!--\pB\,LXmkWo:Q#80W3PNlZILR]j-R/E:JpCEBK0#aA(
%U,R$g[Pcm@KJUqLmU("rJ[CV/RD%!C9h02MgH-:>WN\kP^RX>-1`(pPitoA@eRZu'L*)MX:!3"K>`Rdiq[G^J]WuPlY+q#o$[[MH
%!sOO0;%g2G0j;,fE_"fU.YWar?U`[!PVBLSV`eem+"A^0oge5%SLFC^gm`E'66T*/-gk?Y-2U)Ma=Ycq2X7Y-f?=-9+\m*=@c@O=
%@rE62;X8q;5&s6f')0di?eW"KRZg+Qm5$D6=cZM2h#o9+G>+Bum^TYmh/RRo]&Wf'p$GBcF\d(9\o2tR\f7.9EcGO8FSo=E43k!X
%\iEk;nmC+t4itYffD#M.Dj^YfF%[ENK[7TjK,i46BIHC/,]t[US/%#*qXLJZHpEPN+qA_%5nCNK+2O-(*H8^=_kmMJBW9%>!-_@J
%]Bl`!$4jh4XH'7MVM5,Wb=-D\Mip;[;$?@m$&P[%a@*n!Eh'p//5Mi:I2CM?[P`aqrL-a7oa9pE#Wt-QMo'@!Ebd_MTNE23p=sm`
%jo`7;G'8)9S^u"5._,]p^pFA(6nN+M_&*S$dKOG?/a;Zci*,WObPAP83P^n^Yn`3QF9W4\qZoa@)*G3A%h@oo5Lod9Eb]Ko$p$MV
%V"j@CW&1WTlT(b=o?+XA?BNd-[(PX!\*5REl#pC^T5KEjqK)&b97=B'J#Q6DTkVi4U1qrUA^d5g1Nd'-D:d0?)mjC.D<7piCX[Lf
%nR(Rk4iPMbhtEJ%\$4buERo@[P1u!Md9#YNRlBm'T`+ff)U2JC*GR#+%%V<]]50AoYEC7=3C=^KTLGMFc&/1RMQ635BpiO$P>_QG
%ls?Q&C/YhNDCVK8Eusr!O"%Y2%pZ=S\PT`k^==W8Q4!e1gRNQt.u0$BoX'7H5^QG;7j(lVLAl"kc(D=c^f%!P8D!+-$*?3I`aTcA
%nA^C'OMkYVY)&q7"NMoMA_O\08o<(CXL:6l,uQ'Dfi<OP_]$=(D0)j7DTIIM9D00oL9%6]Pgerng<PTV/+gJfO<1./=CGUmWS"C)
%dX9K0#T0u&_35g53*]J3e.i%E34Uf4O)nYoS<5KBS#gK($?Ft;3HY-]8"1ip$oB9p[IJ&p4&CXS>iAJ^8^MtT'c6WqXj<-`Na(+!
%gf6*#*`?iIOPm`lNcO3>*IVrhAaXHOS)4K0;mJF#>r%n6,UqM#Tt<448>mmr\$:o1JPp&[jc!lB^3H\ueNX`KfC!+)8M]L3f?b(g
%*R'"]FuRauYX+W4%)juaj0NlPJoC]g!J^?ME98X+;X<">$G,>*#P75Equ'MONTh(rfBLUK4U"6^a<('Ul8n&U>XdIfnVGUFF7po9
%bEG<hMR3tT-'>5YRlrZG^2VT2q1AB4rc_oF0.I2-H!=D7\9,.+D.ZTRB;WM_9DX0uB("o&3'9#R"6XE!UJ_8Fi*O`'QXKBlTh(On
%I972n!jD;@3BO4d4u`WUhB#PjYXZGuR4Log@\?#MQoj`orCBNsGYZD^&lWaSGNbJ<Ci`n5kuH*THFH$-&#)^c4GBi7P>Z4sl$95*
%:m7I]Y(Nlame9d[2r%;6Y@#<_ZMWhd'HVEA[r?Z?D#k0V\f+thkf/-3?J]F!qZPFt\@^1A"R;9*/EX+s1cVCamL?[@j.+D"37Z=3
%H"N4p$8jo6P_.WeU!LCY4rCp[mjJ6%AYGkc9%5KOY'uaU0;20/;KNr1ORAI+NtjtsAO&X8ilt42Iq*\Z6Q[)]XPSIM8NU@reLYZL
%lkSCee4o7Zl),a^eF/+_pO:_a:&4a1p.BL;m?A&Fp1uVRFJuLUl^BW,YSAjPZLO"#Kt]:1bmKF8P=p;28f$(P^r*%ld%:iJL;??=
%7V(FLQF2715C/>X7DmC[_;nI]b)nV_2Q2c^]Z7;5APM>u[LXoGA\-^fZ7X\[QNB4K&"qF,=QX&<=UZKe7KO7Xa4ZqFlfR1Y;d:4K
%,Fo:%4(GF<iiQM[N+G*!fu:V>.Y"u[BKXC7-[2on7@1sZ'lk:.4"2`-*=Ck])Fp*oTK<imd_*?VUej(5b9%GfFNb%j?>;mZV<tj8
%p1_.?FJuh(F;1mQ06,ec+t>Y)(*42q;eRjXbl"%M"Y:Q>"gk.o#YiK41hP"F?6[.Q+Qel!*(Z3'`bEg[2RhVG8c(']B1fHd"AgnS
%pMtp2M(V%mN6)8>.Idn:>X+>n]VtFW0Y.k;",Qc,*nH^dPpW=.!)g!X(7dU&BpBI:)*8VV-VMfkNFTN7:U3NI0qqr6HRWeekW3(s
%0uVU[d;_'t\TL[1=n!TY,"iRSJ#(BIP4>e2Ng%BL_r(Y0aF"=@LfP^dlA6d$n0-nr&-6K4_[cam!1F00#[Cdnb<g75d$Y/C;NOb9
%,t$F`-#TZ>$R!%5#H,EA<%nVtbNc?IlWs(t![Udg1>_!*9>^qeZ:8iRH:Xmi'"NZ+VQn!g;c`P1J]GhBL%%(a)>_GA<;9[@j_kUN
%2:Sga?Pt6r9uJV3+q]B0.!t#Y51Dgbdbn@2r+kda7B+*r:mO-RKmdRt.qotq"lb]N<1Xh^Lm6&7^WiPTn8m4iLJVe%;0roS"Rt:1
%7SqE1-q_u&^a!P%4*(7=\dr\+e<Tij9-sb3YETX\SX:mm"rCWsa!&Vl_Gb>N8-as7o["mM.-LFQ`m)X9g^H99!aPk[i`)%sG-)o&
%Olj67a@+,ujE=ppV9DcCp"cV^#m&-<+p9dgX<9#fLhWSgp_[[>eJ`A+SPT<m,DH_*'F<7RV.oWh/l4=NefB.RH%D^HAh^2PXrQSB
%`q=/nZYb_m^ph"`-Ge8`4Mu]l5[7d:Q$n1UU?2f[Nn`g.O=O1)HY8<Yn&cO*_@TT%CnN5a_.Z&rASOVR>:f#t]6"0L7a>+q=i:1P
%(CLBl3X@@tA.d);g"RGoZ"Horn8!]Wp9km+fnD='M.n/^&oI&eaP_XApS%d"P%H3#bk8Fpqd&7\$UW2k9H,CHN!@E@Q1t.P>-RAP
%$6M6c5h?WDV6I"?ORC0kB*1Bab/5e@+u+W!C<8b=B+7=2@B79=,$^lcUm"Y.XiE@^!b?1lVueH=ZWIqja.\T@A[Ij,74CE2@k..j
%_LeO/lXVX$<NTh1GM!N9Y4(Z&V@ujg'\pI.W=J>AhOgea<U^D,<'\RN9TtYt'=/(0kc*/E'CA=#!OTsL`&3o#g;,\_U,k-r##M"W
%LpVfA_+:_6\;%W[Y[ORR#srZM'BN2l5YFrj#W+D`Ds$'76Q$4ajT67^dAr5<,0Ci9dPSY6rT;hp"X-N]N^Yj1<7d-Kgk7RFclX\#
%S05^@N@C_b6Ib3?N3mEui6_*J5hXMlTl=*?lF3$p.:D,4:C8&6aY'#JcmmXhj2c!'%)P+,Z"Ja^Re71HCr'\-NfPIl)7Dk=,D=NJ
%iOTc3:/PH;+*HFR6Yt0ZhCo;W:U?>hs,iEYFl2]g2SOi\BW1fO1p`Nf5CobVXp;Ii(X@oj`iuIh=q`;'(9\f$,!947qQTUI5k'+q
%!qiDSRKV09U1,!]LrbZC8dj/cj(uDEM(7"njKgm#4?Q,Q77W@i7q]=Q]9Ib,F>Y1H/[Ar\&nYgj9r;o!pVM3]9:mUK(hC#H1`MJ]
%QRO0$f#k\e)IeEX1O'T!7=mfQoK1SR,\cZ<Tu]$_4;8G*R%^5Y$=&f,*mZ,lV]jRC!>S<R>"\FiRAgHd%AK2N!YN"^1tcf+jfLeK
%%/(!u8rhIkI8g`Gb\.bsYEJ1.d:mN-!b(=I>.Z7jcCiJpGfC<8/5GDQ3ZLo%i'0mJO9rud$rilKnlrPiD-u;8jV8;NLE.M!=V/!t
%:cD2Xg]M#h5841CL^;VG'1`maHqSZ::(I>Hb^<,e#F1'7_A=d)'=,Vd/QPV?SP</SClef`%O=_;l=;Mc:m%P#Er@FF3(dS7`RtY;
%c8gL63dV1B0b%f_UH_rq#K\&R\5Ha0"Z:iF@&QXfG,:Tr?%T/fHsni\LFIlF5#h>NjpD<W*>F%DGuR)R0f&3:ofu8D&#VRDk]9>5
%0'47I>_uZi&96u,p+8Df6aDNM)3fjY1Qbq9Gq5))^l@Y7!9tI-$e,u'H^5i6,d)Wop]AD]%Fj(5HC@0?6*cs'Nn9NN>]T>\X;.t:
%CHTsi'8q]aDD'WH#Z:&OfJr%f@;(GLp6M0Em-b>3C5.YcO5+LAkD$:mcE4,j?fVbr"/c\<!c`$XNLXa52T)O)@%N-UXp,5F,/_3\
%5s2^fbZR?:/<f'CF]q'rSj.0fl@FG5aMF7i;dB%&EpiM"gM.UH[`+$<I/bIoplM+\]a577f-J*SZYUCj8r*^IoQn6)_BtD<j"i8S
%4+#q6#h9-d=WDJCg)<X^[gkbcYdO%3Z_`-60M9CukU%&`g_/QWN7N9sq$bLHQs`a*A'?_c)hpW"Gd2EKV`N19iPU?]-=Gru->DY)
%KKkanCA/k_]A]JL0qAPk;&4h)e\UJ5-8E&&C;CgXeC-+9YPs'TF#7ckA:fr)#g$Rc<X2KD8/Dj*iC^78n.pV911uIBA98kIEW3a6
%"t1JudR414nWd&(ZX1s]?iWobZK#.**$_tKV%pU`#prj#SJZ;[_\n>/48G^%>g4-]3&73Z3S/F<prJE#,n"\.?6B5f[nEW=$K.fW
%V(N.ebTY985"&Z."dgF^*QhN>,'k-sNNAKBEl>,(fYKYlb[code,Vp$'VMf;(WlpbBUVjSUR[/NNL.Gh(s7j#U[WZQo4u9%*,@KD
%bJ>0;j)IUU87(;pb]^-&.-j(C9+&s5(1j%VE>MSY`nQp&Bb;R9(5Y!2cD7J_RfCe>>rE0Fk(YK9^/1;4@P4qSm[,C=84Dj7kD#\I
%q\4-<NQIhE8qTnndX%"66U9o&Wm$D]N&#Q%Wr`;2`#8[f@o@_daMA#+&4s^mTR7KNdMb%WRPf]F-t^(6REmU@,5mEiMtEP5V*%W&
%6r;IBCW0(H,sc>#82U\#ThW2tV=cBO..:GFWJa\knkkASj$kIh';`c#.-`6>*+F6sWjp4`MMJ_8!,_>cLh`-`$07Xih?:]=i9:\)
%$LOL/k]*>;7\dbUoEJqf6`FGl2']Eu^]I',WKCDQ\JDR1XO.\A&%FH1er'=go8[11k2kXUI]bjcQ`<QA<u4-'c_[2FN"Qn,Tnl1K
%QU/K!%HWPL5Y60qM/jZF$:bB4-:TP6Jl:^Q5#Q5=r[1f/Gl5BVU9pNQaNVZZ>iVc/Jp;#IDgCVd<"A,.038HWi"V+@kFAo8PVAVs
%U6p`6@"`]"*GCn)F"]mQi4sAdQ_Hii.+!Xr-Vu]T%HUh60Q;=51=7:?7?hJadX#@I3q.9g[4Sft&jdYA:3oa1(]c-"/dBb85R">/
%S@4`Ekn=\U=\>(iC:.[+p$]]4$5[[''f<e8$(j;RI@;JJ)icKo/qE^,Eq$J6QEhlYQNh(o>Vet+&7\rbJ;,L"TUZ<+a/F8\Ksp*3
%Jl*s\Xc^2FaEHL!9#rlFqllc<!n%Qmq:s[bqV<ZZG\!<mkD]r6#,X[B3`EsO=Zd`?Y)jn;NY;1jpe].Z`.m*EFgnb6/*4u]jbPE$
%<@8U._/Aq%E'ohi*5og3L-(&rI6NH'.:PH9j#E^r9a]LF6)6`\@mhgWe>5\^Xp/pO)+,;/=u2ock.dS16bs4?3EE97rVmQ*/j$Zj
%acY5)J:<9[,R4sMEK?2^4j=Fi1E-s[\0D2H@76fI,A<P(lRU6X&g$l1?PfFBP!J&lrV8lO`mquEgmmu<0q%1Hd_M+;BZ<[D_s]/L
%'KQJ3V_XTgc+O*/qF#]]7%mUHflibL)o<M4Vf[),Z=Y3\$jat/nr9k?coO.2/Q6-`$>$mTWB,8mm2N547k^[ZQ7#>bhEt(8*D=kM
%QcV0tA;%/WM7cI_j=;1sG'1Brgss4&5h8T$I`I%,WUnN)/u*)Ho2ad)6H%emVA"&=Jj4sX=FGHbnq7=VRiY%nb6Zt_hOU?3Pfksi
%GMGf=#_OK,<*TeF[pJWq/Dj,[[a^AJ:dl>(3RO%G5d@jG]6VL&$)0Vk]IT\4mR%>P9:GI#df2=I(B/rp2`[[!]?.3Jl6/jjVF37V
%b'Q<`6-WJskg>#i%6dnj]X\Y?&c`Ip!6M5DcUf(&^BKG?Dg7)'+A]*1#3Z95b-31.^]OV@1S(*-P0@:jUM;Z7Y;lQ-6CI\,BLo^@
%S(s8)RRdZ,AKb.%%AtS0*dCK"f!Hfn#*<g^cZG('?'Dhc=)?$0fFIKC,mJiD`GO8?RmOj.4[I?BZ!6?KY!`+PKZ*]*)q/@S\]Z-!
%QP$"\!pNaN;o_Xqa",1[Q`@?jC;,"#Y:S/YY*1dYeQfp,m:CiP2K&rOBf,W;(KB/%jedp*#q7S:k5n^J="ObVM[n?,mTbMA$m#!E
%$jA_`?<'BOEVngZGt]O0-3FLKH!W;J>`QD!aWtFW`rur8ZY=H$Sno@0[:D5+\q!`Q!\$qKq>pF:9rea^'CP$SCK7-kQXT0Y(L)m*
%n3.%r%bkd[RN3cLjb_3sDF*01o]0=C6r1T7#^"gO.B*^J7d5o+OfPs77:n-R@J]3WG';.QU=IKn=5V]]jH^PL&arD.HL6GcfP##B
%1QNLC@_4]pJO72ZjWO/PPCPIpDLO2.&u]gbcnpbl0nj\5,0f\Y-.EkJ3YS&nn=\hf\'oD'acA<<mg%QFho@+k)fR2^X,^<4)X/Cl
%B+Y=0AU.q&"WV19)g/RaK,qULHf"n<!QSFKP:`"!jjk8$$GSK/][>*ls$i>dVOm25]/))EGt0Kh;!anVo[u7c!r]EMS4O0l_HGg:
%VMEt[*!%)@:^=S#cmg`Koq["Q]#=6\@D3oAh;<CDq55*/9CbW9rYDkE`@E;g&,rrea\V-5pB70cRZRq`qJ,LbVGu<eY_gdELL7@m
%#q^UJ<O2nDMQV&_N">o?3\V&`bP.X%ao!$nZnS0Qr7bTXm@XBmJ,8@.rpA&2bCB?d%mU!8O+6acrq,+;m%8e)?OfC3[77%KSFM@(
%7ml5=(0!eCe^GbZDC844G%qge^Y5d1=<LXu?4p>9c1*Q,E5;ZELKDU%4dtg3F9D')j[Sne&o0$dd/`8g;t(n!%6+X7DmM'!L433g
%Q[SpiV-l^*/%Be*B")jk5^=$'>.Oe:r[W.K.`rtRM/>Ud[,dYY2sQgnR8-9t%ESeZ5;EHVWGYE_*$I*b&218<TXE"[7NkU&c!8IX
%8X]W?D)VM&M(ORnpi9S=#Db5U`[_')O8BfY,`qQtLgL8`"kGDZ3;[XsRc\eiq1D)37#66[,#_>^5gafV`466g!S9Q_5+:<U5mA+K
%Nfh8r@c]=hSuB8XX)U&Uj50s@l(A1ES#I3nL&*+!a.3M)BsI+=@a$kUmVdTZfANBTLA0cZp^JrF4O!EXe1HRU!\+K>[bju2P'4Lo
%qCrEuDU^(TE,F4-2Fin9W2%^,j[J^I$P8K=:mMn@\Vij>-Lh[Ll8o<jqbF2SE0CLO\)6fe=RL,OPF7E?R_a\K$a]Tl0eQ`QZrJYd
%RnOBChtNocb'+fllpP8h61n1>9c)u!PMjbrhnmruApKjE/\HaOP^Z_,WY;661`R4VAf\a,nU@aDo%IToA.G.B^SZpH((YhBbtkA)
%d$(+ae[r+J&GIDN'W.A;)gM,`i\6k]9X')Oj&#t$AC,?uV>>Vk[Lk:Q:qE#iR\@4bGo^CDaALR`ABm4fT_b2p<KE%PYYA;_In6%H
%9*VE?m+XE3W%D;UFQBVbO"2Jrnj\&,Og\M8R+'SUa95rrpsOl&r3U84Wa7f\rdjRF:\jOf6u6*i&`#saccsTHg'c<>(Jea?Q8!I3
%Q@/lh)DWCN+\.NHh-Ki6O5+)_;rcU64;3]uH]gg[#ijHO=-=;+lBRcS20AI&/K5CI(r<r\.TuD9"],7B-uV@^mj+ZA-M-#6P?gN"
%i/VE=Cm1/UE\\r*3Ap=>@EW'!-a=$h)(,F33.T$MW,jA;@`Kj0IXgqHo_6lRZ`:ACPh5J\(/>.>ai$BW+Z`H$0mUf,Tb;gHh:!o$
%4A_T6cLbT<-Bs5M#+ADpZ/_\Kq?D)(c9%]ejG(c&4bICLJjQu60>-XF99b2qP2P]DlUIi`bW6&-ZckR]E3:?.8'&g1SF6*GGS*37
%9D#'uGU+^S58E?FZi=dDmd7Pu<Y.I)m$=jI4Xc36OJ4ZpHr%6EU);JaW21mCap`JLRlFTmfuu5=PkP=E&qjk_<N/NM>sbY9`/=pg
%_T+49oGL%h#@qOHIQZ4@`9j<Vn^d<>:&un8\7<hV[4gunmk7F&,ELeUO7#lH;L\1#:oCi9Xh$uB.n5pu(-^UI$,TJm*)ZI(es).V
%(rb.hifNsA\_uc[Vi"Os;!W9[_eFe%VP3b_G"1F.B1*(nd9J;`6=j4`QTgo;nej+@d2i*#O.XBR6.ceXq(4Nn.LVnt$cS`]q'cs>
%b+5G6D<_9Ne410)>Ba[9:[_FEr-]AK=eI$)hu4.ZA;.o6W'-g7&.W#S4".#kd51h0[CfNPb@K\-QaPgL)+o%ZcOieGTI.PRVT!,O
%SCUC1KlZ#PUGs4EH<:%$T.[mYooH2*+Nt&KH`G;#6\dkj56i4%8YLGp=_p_5EMd&'>'T3sF0UCZd7u65c`Grf`NDnI_r6\".sba2
%ci2i)jV#a^Eu-h8Yk+$Ne+`X$Oe3rncp?"hJ<gq1e&%9#6-_l`S.DGGSPjVa:7NaZEo$Dfbh)>n/:EG?:t\BZ[\c=0ja>Z)fk(s#
%Pq$*k4j_\!Lf9GlY5f<$"/t['=G<R81sOf^WeaooUqm4Lck!]-VWWTYc<a+.'da&bdNjUfl$G<b)1HP]P*<t@=^OKjWiY-#@eM++
%MXLt?*gaLFfXY@"3GQ/.<VD`PB_M]Ll9aU=@mA^U<jGu@PJmaGM:7et+`aIoE\Q-2F84meLO`Zu'N<(NEmE"n'4HN9k4iZi;q[l'
%FQe/Ad.I5;CmJWH)aF'%TRI0$9=/@5CG28P&o$>'1tBRVTWu?`abjb$8702-$tG!83-Z#4/N%7>]R$P7B!r4t.+=]lAg[1"iHoH=
%*M/\Vf(2hUo3SJgSfaV5#tN#HYg2a1kkHSNafnO\:[.#:FjCSkbfT=F+$`.%Nh.>cSHb4'IK1sGkM5Z-\ujo<o)k3[l0.mC87p0+
%q#O)&^VfY1e=9D(q#O+eOaDP-d)("I:B?S@Xjc_@:kD9_mfPt:./3TQK]s?Jg`8UEZOkB6j+f%<I!#8dQ%k6X+/6%U#00L_mr6q5
%"31oqFh`aiLHf&T[nhCq]flGh+D>)Rd]mhW[_4jiR">&%q>f&O4h,orb,uf@5"$P#FgujUE_&[/:FOim5-0:FF2[ML8<!0(pAla0
%7dg#]Rnst*me80d<iG6V!@jFe_='`f2Rq]>+Y!p6r&uZt(C@qH;]+IYYD)e#!6LA>rB@0hpbAQ$#7kE,O,MmchG?]2q\1YKH(9=*
%TMtPXp\PqtHV0=UpH@]:\JJK:`G+(Bo4^!,F4Bp\aLC5QqL/.dir:dKO#5*Rme7%4)Z2eI"aQVe+6bA;ST0*Q<G.E*IJ=iijTp;W
%NXPB$RbpV)c^;Q;'8BZZqh4KQINKH83(ga=7g=BJVr'uk8F!,1LSuaJ_=8``:J5ZI&*q_%`5<T[S@2lRS)]9fgH7m`pu*Dn[DXba
%]1>1-NZVCX7e$9h,<]tkcX+5XkD/BY\m"b(&7[,!o_`\$jGk0B5<tWRlgXhnigX$=r,@AP52r.U?cf)'`ts-tqs7%nrB@NbkfMR"
%5MUau"@U!6\#O_`ICQ2Co>BBJ5dPfnp<O=N\T2Zd!+NgXmIoKK92d1KI=TJR]XrTrNAFB/G5H6n+/PKF+0c6u_;i]V%KrW"DBGNl
%jV[q[7-P_QINP6BDg/rl!I82Jd$TJCR`?F5^aOT7*C#'FM;F8b!euL*(PC`QB]H3pFSl,McNL]f0EsobDBGTArFbQl!@kp8me/)H
%q<4O(#Cnl<h<P/BSD`i.!Q=$34+.H&Q`'QAhON>"X!p)XJGP@HV[lWo+@W1=:eESd:7jiSrli4C6cf0Qiq*8I?Gk^o.3=K9?Cq:i
%0m3)F1T.Ub>tFDU!NI@o5,_ap?6;F(L1p)Q!0r6uH@:Ti]oQKl!qm(u8Yao#7*Y$BBJ8-+__U=/b1o16ps%4RK:f.OgtY)DjIY/_
%5,Gf^5Ic+KndP$7(>V/>VsI!kmiuN6Vr*9n;Kn<$I9>pc.h;E(n9u]Gg3t-pdQBY[pQ;).*rJ3Pg_h>c+$b-\(Ap?a`SD7+5!U!<
%E;4kV/A77pmmC&Z+PZ>eYfUd!INLff(?^,g[P/5>dI/:j.Oolh(+4PloDA$b>jnHF-WE5'IDSJY^Q12W%J&HO!NIMsGPn[7Qhm)f
%n\_BM7Bee$fJtCQI\4uDk4b#+.O4_:A>!3+o_T2j\X\*j)1ZLmINKH/V4N\hU5W*5NZT/)3<dG6B7sR&MW74(cK_=f-d4=:r.Ko?
%St@]HKBGber&Pi_Z95L:3.>BaYu?cFIXm<p&KO*A&7%FYIeIgD%NS^(P\'*N+0L)K62-!;0=]6hF;8"TF#uNL>^'`ZRcd1AB75V]
%IUmG"dY3$sA0]I]Z?q%2dr96Ng.OX&Hk+I5:sf]-Sf_cE9$&p9%lZ4<*V]JN\)T2&H@E@QRbp\A5MS</T-`gK?&XHrXrlDnUZ4jf
%F7i_HkD),`pPA&/!BSBfpS$9eeB8t`*uYqP<o!/MD33uU!NL#UoD?n1iIl?gcaJ7rhe1\8dIHhmR/*j)5F:6%#7V\WL:ib-)EP5L
%\`$$f*Eo+&Ahjf9>.U4./tt_F=d3oXL^jl6Nqk)t_kVaDj+<-u:t_aO77YX+D$C^q3SC9LW9=4\h3ak0;\1b-gQe_3"&u#0UP_fT
%VA<12&J^j'`K:j&F:+GgaoHJpSV"hHjKkMQ"-@eKJqd$o1'pFKCZlm"YHWI\6`1@;@i%RU!6WS%7<Al(K[W%PFGOt>La"lF`GTc0
%S\i2B'f:#gd!UZg3qo#ldsTZl.55GW",RpW"_KQ/nm+TfWVr&jBc9%RlR2[hW1a;mAjY"o6!ccYO.q@=;7`<NL(;#<NRB\+jO^42
%%37^H\;V%]7HjX5PgCji[eCC[FH@7md>W2S*TU!1^06cJ!NN6WTV6GqhQ$;]20=Xd>ZXE)*M<j]\6D?+OIQng7#.0OjU6]s%NZ=U
%6kn#L._B=-d4(`j)]r0MFHDel[QYMT5tY8LbQSTLZ4Ko?f.!FmQC`]&L(6IWj[9OuTX$VhL(;@2!f;XA!')Z%%3;*OUf0Sb`A)Z,
%+e_gHO2T@f$(Zs`X0-b/,,)mWlEnO)KFUgU.u=m"8Fi<>(+2Z:0_I@rO&86AK%*N8LJ-j(:g"*06Dm.%N=/RId(t@o'T<Yc5XhIn
%C?XS=b62lS6`36POSfaCd&@Q_@#7`Jk;G-H-aYaQ.O<2_mhRd&J2/G6TqR+rMhfS8FRUJO)0-0,<(A9[eBe4G,_W+i;_L5f71C9M
%8'\ZBTnE2t9Ugq'e<G%YMBY)H.tt=(Leaf+j=I3b%T)!.6V&!9V6e!,F=M@dncI!&FATfmm4!qVYgMN8.u<BhPtQ`XU4Yd$]Zile
%n7kg(EtKGTT[!)XciGP4Ni8WR<5qAVciGVb2c2pITC+gGdEo_Qj]9>hFAPDG`<6bnK%*cS,!*MMYDj_e-ui(%cUDqPS#`m6ia5eV
%rUNe4!@gd?W1m4Shgl"I*MA@C%l-1nOnjf%@trMWMqDT_=E!.>"rSGU8KG)X)T;(kK.#sJE4hT[;06np;Rq];Ur,qEl3B'f*E;nK
%i`cuB_4u#S&qtFX(:)nNN_X.&D3r=+qo6gH1o@$H)5,.SK8pEh4[!OG7L.j/kfO8g3[bZ+_/Cs$K,5p+1L3HT+0DWB+JVl!7cGIE
%3ZMkh9VRIUcqJ1pPgSHsDc_akjOBA$$<P9a+sK4K.&/";;brGZAOO.h%NmKgUPoZu.j9F3)'-GHX;RAPWL);;/u-=m7JQEsUVhPZ
%I3(.)piS3eL^m`8_:)7L#:T9B[YPEd/2ArWNItu0EHR*$@)#kq9'aPF1<0eI3nS9rp9-hO#H11*6kLG'bK?3,:;)n.^,:"CoAih9
%7&MeFRArA87#+te"W3ti%T(Hh6UV/`BSQ2k7<GcYdi#YaFN!0(>^7%2JMk9%RR9JujocIA/YW><K<@p:#Nc2;@u#dK5[Iq@)EK]d
%6j4rOkeOPlCrdcn!u$VPPV/X340;+;^IdXR"ThJlVh>Q(4Ph%u&it^Y^hEEiTgL&gdI3s*;]'Q]nHW.B_/#haUOitQCse#i:0D:H
%jg]mP:kn0R$9Bl<@BXSMSV#3jlEe!N%ZG@hZA8QC0\@>^l(`b=c$da.6ie;j9:L>;kQ'TKA..VjWEKi2*+HIe;a1Kl'cE655DR:G
%C$HTpJ8tDtOWt[h_&95/MN%r+'Y<\*>7q*]E:E-:U_3fP$N8\XS,t`>7Dd%IFE![Q=BW(_%M*g92,4/mSdhs'*<J95$nF%<khm`/
%TSGm"#Nsae=4#:0@@%5WXe,\d,r^F)%Sk/'$4m(T*483O+mS4jV>7UnF6&Rg@P`=#m]')\5Gp2C)B*-`5Gu:#,Q]qk5DM2U\5#-X
%F*M%D*GkR4J9]r'qDiM)oV['Hr#iZ;53-d8_S^>kkO?'&W^;iHk;W]YX65R,1K$C/F*KJh,:i!@'ZNJ;FQho7>pa&3kiVrZRS"*I
%ILb1]14W@i#7.lBLObE[6$kd!FQfnC]c.X3!@/:^/tbS`37m4>TL5&-@U'BHSU5@B&?A/a#H/!J"9fg=QV'N"J50fMBM;Vq#7q1C
%LO`,c\rWoS;a@6WRL+!c;*h*&YHc/0R=\25HM+]]FRC1al*r.7"#-'?5,TMm@]iWmLLBQ;<6m!%HtYf.#7,Sj><IZPPUm=7S:ZB3
%Ti=o$cRFZ`TNYK_cRI4P_Bm^_cRIeQ2:g4JEse:Te/4&=3C*7#5sM9_?Z;i`lK8.IeZ>F96^.t@lf[d#>Y86cVbks$95(uS.UDDe
%6U.K5.]9YUT2RuTDCrrmPbL:M6TtaRb/OV\S5N<n.&uG1biR@".7MPo><<(OkV'Jkc@'6OD't/&i&T4R&+LX4*9'gWVrT:ppU56?
%i>fF0d*=(C\JL$E:-h"H)C,.5/m"`m*RZr57;=/Ak7isO4G%Ybb%.mVQHfNL.u?VSV_J*0j\n2F-$Je2&*]U9aYncj:<@e]=G1`f
%^-jOE&C(=Ak2Y=9&@0O]'SUVr[6f#UU2UT=.Um;S*#+k'<@4570O$"A.CX=ma_LE8i>e*&@.c+B;ja6Wb!A(d+DV-\e=q%[6&K`n
%q@;b[P,e(1UN?uBnWlT1*0`/<?t.hMGa8%F>s&?,&hdE&cN0Ku0o4gLq"_L#lGbtdG`VVI>W`6+ijFqbk7e>MhBkb[*2$9*3j`s#
%19'akSc_s<L-[qWjmqQR`H)BHhfSn.GRb[K*uW%=fU-\S&)oT7KqTO+F&8gTBpj2U.jT[,-D"//K#!f[oc/M)RL8=?"\2j\cjf8#
%GZHqt;*>/&;C[^+kMWt;mU>B@W1l[/8+djpHF"[BF,11R/u[s+:aP@oHk%VO(I0=>K8P#oV9A$%o`.gTcQOceSKOO,F=\0WEVUTe
%Bj,2'ki\U&,)YCV3N0GI)l%il5=Z!)5sL,6,/H-&56llXhE8;s%b`l52V[nGfFdaO7/\*KRbW/mrLDl]U8X[d<2'AfILZSl4\2`J
%K5)`U"6pL/GM#k2U?gu]&.AG$kiZolF3(nB%_bc1J0ppf[]_D6kQ"TqF\pHDd%\iI.d4*5]%3X.:8)b7`FMY.LW]]gJh-%mh2m0G
%.%u8N7R@f@L(6Jk3$&u!.%np+C_Af"Q4t$T31Har5s^9#8\]%;d,E,<hdBF1_+TH-&J]Ca+k<)A"W_J09*OY3It4:6[cTqC#:PT2
%6U@W+%G$/`%Q4[a)7tJ1?6Xj%W1X7"56Q)<7F@qM'm+uKKk$4k.61oKd&T"UR&!KeKFYJ;EY+su%Q8;E(/[C'ccSD99B['r.&Rh+
%FRTp"?47H-!+h^]&it8s"<g8A*>gZ^Al1l"edloe[Y,-,,`W76cm_rBKUXbGkeOoqX8Joh;lJ:L<`YI3TlGjQh\C7O/mL\-#;;3D
%mO4_qP]uIk5R4`p8d>M#*MAS7TH&,_;<OndkeP?k)`n_[.0s0f>)o8Jj&YoJT**8>DHL1/#8")o>X!oROfB&UF,3_b.*C`2+<]An
%5s5IGZ4hh9%Ls;\l*u$LNZbVh\U"b2.M?h>eT6U<DFa@>TWYZ.NB<eE"o0..Pp?Lhj`>[d8h+rCni9+9-Eu1I#)E[)l2j#CWrM;p
%d(p;kJpL]f#ET'gRXbm.QEDH3S04%QQnKrQ!%f].kf@1VbTNR2'/:M^LO]k2B1f[acM^pDi/@^u30Yq7,REUq3[PSC!?I^$BsV^Y
%*V-2*+h)t38P%s-cQO+5etAT:7)IY`4pS4tTqY$TS.E'OpYV3/;lA;3JP9"?AN^B*RL0]\WVV]tBdtp+e3Kk0;feUM.SZIKjr[Qk
%b4H\79EZh>`SHHrPX)&Gg9'baUoDFS+T*!bdT##8b`WG_9r/D0/LQaZY-PB53KjZG>Q@2>%8[dL1+#_$.[.HC1_l&:WailE1dGVT
%NEhqLA9(JbYp,O3JtUIjC.bum'lnG[*m;&MpL^A4Gi7!MeFn&aYOS3WjHE/&PkSLH8HZ>!V==hT#*9+t30f4p)(1WF5mr]WBOoNk
%Pmoi2Bc9a4[!eK:dk6PHE$e;s'b1=$,*Sn_hOef$O\+$#k1fdTU`i>K?XV:^]IgE1Qo+C"3WbKLOA*J]V.jhi7k.6.OZQ%*dPR>[
%4<HPJVPU?pJ<<IQE28ZQ4&BW04=Il7NDpgj,!$O=1dEpFPYl-5N8tk41][.M"-Ef&Pd$?BU]DqlHR.#rG^>$2A42jjG>aLDW#G8)
%.V(X[J:h=;O[mmY)e57,,gl[X0W.I;!@fU`'5;?:bjmCnOTp==?UQ(Id)t#ZR5@/T?V"_U@#7OBc:XH\=;$9$k=h<kcL>s3BfH@h
%4Gbn^=]<BrJOm[1N%q,j8-;gD`goZ<NK),3'5=tlEW(_^)U<La=sVMrXWPZ`>.0r,:8G]g')`k!dU9XWM31?Ha\"2^-IU7GidH2"
%d`BYTm3L+:'6rD&)U;B(NLWPWaj0]&M)7KZU`YFM5UCA*&o$j,/-d+?d^51%Wi8B)c:T]SO[t+=AK%IA6f;45,Z0+_6X,iaEobWP
%=K2`gNs;d/67t/;%?3;a:6A$kL)r@lJOb?b$OJEUBP92_'PK=.-\U)]1`@oBiX^r0)CuN3kgA.11dL`$*dBMH:jBp:4IT;;e?\RW
%nFgZbCiXp_EgBB?i3J\^e(8U]%9LHK1(2C&Od3<)^n\_m8(UQ<qo#@\KZKq)Z6u>SO[hc<@L<0t"sras/F[?J+u0q)8&OUo9I+=/
%XL<D2S45m<.OU./?S,TX^nO,W6;)A8%?F41:*V;.e?;am/$N[e%LF<f//n3tBt9?p"'!4^,)q>T+^q]6s28`I8OfIhFOg,/dV*16
%?hNL-E6;,71%K!S!`QopNs;dbSKd+ATJ@EU(3hZL%#Mc[4;s5:;(`AA)A]n*1`B,8H30X,6dp_$4_Mh)(rqUsdV*/s)X['f$tuQd
%cr=`HAC9m#_h3GLdE$#64/9,q`-Nm^Y\;[rOr>jTB\3bnC^hp6'I];NO[m<a.dp4YNs7"(]UMF/;kYm6N#i(WKVF)hKAE6)aKCXg
%"@oiDUS36G2$oT?BR!o/\L,[:paEfDRn#i@<Y>QQO+r!/DlFtB7ZI^!joc`"PM>qRnn<8?]uipA_1o\rb!]>gf_$,YZro4pDD8V$
%@*uc':_j#GU&dk>fOiOhkB[5?//gcI-[*jM)Z<L3S2;.O9:FNXctIt#OEg8.@"FFHm6$hl.gro?1EI"l3QbtV4;sk]J*Ad.R#)6p
%4D6Q.0[j#(Ns:\N!BZ>HO>LM/d1Bl,S]IR?k*%uR1dE@J6fcY1ChE%`-IT]d(7p6oBjd=OQ$+G$!2WfI6):3^:L6F7dK#P;1JX_H
%_un(-ddX6a:*pE9-G540)B;^e=@OVHO"V'-3g_``l3Q"`R5?l7AYHFIP6T&S@5((r%?=OZ8/6\Ie!PM-O-<.&[')`j!Re6_Ca'<!
%J]oDQM)7UnC+#,J#>Q^%n7_)b&W)-1K/9U)HZ:5=::a/_FW$;G#@bAn%n%>/1^Xa;%?Aq\Shq?nOrhSV1ic!f2:-$:0uG2n#,(+l
%#qR!>%>N5;!fI8]U_8M8)L*I;FKVl^i3)PP?8?dUo952\dV.P@l&r_1ctM>jOXr&G7g$+-,q94^#1+[LMMt&(\[U`l*id@U3R-!Z
%C%pP&OWt]f1]VZ/"WgB,.!nr$P43,bl0q[o9na2\q21;);]4(@qT5M3\:#%AMt(I1m&Y$)+Kik;A6"XPRL7RR8So2e1mOLRV4B^e
%TZRuU4IQW+;4'=4UoDSN>Y6-e!+GrI6):KiIUcu`8>N6GBVfteBn0O,mkQ(]*I>E-M)5t<5*F_Q0PN#2n$4;:g,resRSB>L:8T0a
%H,]oR#,keY4.E,,7ZRA1ZY?FEdZ'Gb"-aUS#FhUM5U'@@!h6(H<j&VDfJF>[$94Jj2GNS=fm0f9JEhI_S#.saH#>"!L8](T!h4om
%<[0!@!0QB]aY]7sYF\NF9l61'/!=Tr:7IQV:rkI.;:TJSB@GYV3jH=.2@WKZO9RU;D+6IAF;ggq&h,l8VD^G/Cd&:>@:M<i#*<G$
%gjC#jOq'/9C%)lUlB+na0@60baU'i4/gHW"U#t2_7"">De,XWt`#1EIpN!d23uBh?KnC!U2&-273,EG$%3Su+D+4uk_s?T?;1f+!
%A3Lhf5g-aeaf*&1Q%`\;RL29?rEM<>pBi*q!sb_.W0rfq42X2kLJaks!#=d-Usr?LdRp*4UXT:,N,_Ul_/":l&LfR;`VbR_)SCe@
%=IW5fb>MfVF)#I;/0tP!VA<E$pMk4g.^]'u>AiBK!#<OGjOBh*8XeS-RS!`GAtLhR9srK*#H+FsV\\-AaJf1i,0>sGKD12*_DsK]
%R.e+TC+>A^8p7:$WWAR38ZA].!XBsH#,n+,"/Q4:(Q*oFC+=oPf*ITZ[Z?4aa"8'D.>RU^W<"JM7$1B"pS\:V;/02VM(:;Q9uXfE
%84.;f%7$)s%n]R8YucNk!i6+"\3)"4#&fYD6)W43WihX%-oLd;\X/AAR`b8bWh/UB)PWt0)(7A--i?pFV$<3OM]eeETSb@6jcg[V
%Y-$fM)PHBT$'Z@$,+ol(20`%Ud0ZMr<(gu:.5e'6bD#BWNSZG@Mq_Z%eFD$>!Ii@HQFhAFiKP7nH;QZF.5e%K>nrK!_`e_CK>=Fb
%mPg#^)P@]t)AtDtpB7;q7LeW-pU*bq_%;j8a%301Wk&Og;T$o-+m5(.Pc4RHUX[f\G79]STV>I*.5`)KoNk$[%4@U?>mcf7c?!E\
%(o;tf!Cq`?C9VMFoQI%[!#7t-T[[@,'%,]0WPP>GWIW9niG4hEa@S7ZcVh_IWfb:p#H*;,,Q*4W;H'QIS_?Z76%q,ueL3<1;O5>+
%MDG:f`"^WqT[[@JT`'@:C@LR<JPZG6SB"C'_(3G+('ui`KtA':2;Fn.B25Jl;XK$4;elXaQ7K@HX(iJ5UP;u91E8hQ:$%)L*%.MY
%1>;ma5E&GA80Us&;1hSK6=p=pVH-ou,GPIH&TtS(Vu\s%aeu*`.U5"'BdtbuEXd\j8nL3m,F_L3Zg/5X&8HaD-9_\m2"#VUmu/1=
%L7GMDW<'q<N/S[,H8Xr?RbF9&'F6QM67&G<*/:-JIrn!d/7#s#1I;OE@ZAbGN#K1<%n7")\S61U%3W3.F%Qn6@M!g\e.BmhACOS[
%-W@4>SPk(bJoVP,V$8:UflW`^K6)k8:/7e)JOS%7"\MKH9t\QGWKd*Qp<C&5J/58M*Fp`"KMuW1dZSMWPT$8`jX`=-!V\'u3i/]s
%ogBgb)Oq4)1<h7*3'W:,Pu2:8aE2Hb;/1&B'qM-kWPOElLkj9TO`U!6JPuYAEplFl%8P?sR;bnq'oB#7E,#@[JL"',l7dWcUX['a
%5bia+C>^YiL>8"3p_AHO*(`#Q;MZp1C+:g(.jh*m'Y#C^,d;#IBJ87m@oeT2O@O.sTZmEW`JFW<"\oaZ"tG@Q'IO)7r&5E>-<4]X
%1pr,QPGlB'jX<kt^C]j<>b%2:*AX6lSCeiSLH%";4^>Ch3\aIAs,60\5h-2IlGQ(b0R8!Yi6ej#>#Zjr;lFC#/C@T(,h`f,T,<SE
%g#Yo"QujNL?T3Dm8duIDlZ[bdTM&bhK0D"eIF?W%a[Iu\FB9h:.^\c>:0a^Zg>;,5KM3^pjGE\:cG-;RHp$To`B[G-e-(X0%9JSQ
%lpZrdV".rsC0IP"kX9u2U-^XH!l[PRh*[&eD<\9`!l^j<'.@Gr9QsSAM?/QmA/$F-_H%>,2A%>A,[hTD:eV@cLlV^j@\CTG%KaTP
%7>NN$'GH`9#m/(4%FZifC]@_+'25#8("->gVGBnSY2kNKqSYXQV53t+nq&2<I\KUH8?Atm:J;ic:Fe%n*2.dGNPBXZ@\R!=4mXf^
%AZ;C^CR4bk[Q:[@8X4*-Y"gO?S2A7ieVVs5UhltjEG3go:+Ye92s.8</7$5G1X<1$V=5U'bSQ+,7Z]"[W/rg4aV2kM=X)uVo#+su
%"aT)])GQf*`b^dm+X0]56b^^&]uq)4oFTC"M$_<;'%DbLel@jRE-5Vjkp]BO.4\S^-;MdAD(<OL:+RoGegO5P.1([%2DIMH9,;O,
%C'!F#S9Q\m;4L`(3>M)R0-$uH'uc$?F@pLL&17Z3"ILT4/1YYH`)\X//;p<^'CU'+WY=h)hrT^hY2JlhZDjeG_W?Wb!HA-rqSM$h
%QmOZr'Q[V;Q!P7T`WiC<]A_pIF-=$q0eZ<n/TQ,Gm]faHMt4gAN27[kSsWaUYgcaK5D'uK'X&o\/B35k&_h%i6UEYY?(Vt4H>nI"
%0i=N0U-A*1"tVCMoSET?^/EQ1#%Y<_eHTAXl@[7n_eKg]PKOX2[R`fjK01kbn_lo^@N&P#1I7ZNkbUl"?([Kl<hX0X-\a59fptO'
%(m'e#$5<S^dHYLC-1`Oq5V_ZHTo$8.bn!0_BX```q,5Zj.MN!X;,R#qZ/DU[:^g>%CI+Z(;W2$VTMS>'[!l"H#h+09L,W0^XsS;S
%!l^GY^-)f6bKZOA*P4XXV;uQcNs@?<.JJmsZ(m(>E?.N^MZUjc\`?83@UAQO9,[tk:Xk)nL^m]9\J#(-ZjA'Ubh$O`T'I$lXLbp"
%4E2AWL#DO?4F)bC0ZXn0ePr>1SsZJC8V)pFW0HQ3`!!!<*kOHf?Y2kEGm#/M$$(#phK51pn\1"B0-pjRBG1Jf_-kY;Y4RoQ@C3R'
%0lKHK&ijV=':hR@^>0kZJ^j1f9e>C4@L&8YEFnfFFjhZA,[*R<9ak]+Ot'N[k$sQ,6$.rdPR'jM/hp_TKg+c7LIqeWip_LbQ^B(T
%.3<SfH"ieO,9[e+EiB8K?;V3ebZpL%@n5$fK.q</5SGK1Y%jD/6S<C=6lu0&#[/).VD-r[QR-_GqkE&;6@pgECWWg5W(S[o]Ej!b
%FGW!k/1l\A&p)&$'e;pc%XUMTOX1LdcX_mM4:SU7/C;[O>FpbR_N88jn$nmaFrp2^Q8-qBLq:O1r5<t^H]<'R@9Lh.pia^kF4KUL
%nXO3I2-"*g6Al0un(miGiFf1/Z6JTr7$Ujio\<5B@TiX%SF!8oZ;J-[nCl'u>RX&$ilVF2;a#%R6?#1Qc]qb@@E[TIEE-IcEP`4r
%Wl3["9bUZ/M7I&4(#Z/4p8([)/kWd#jsWkR]D.bk/2;?rmL2sY(oXrXU+e;2"tn4S9Ise0VTf`^@Q-KF/hr>";%Y]l@[]&=^G]BW
%D=^/$ib]c+?/eYXb\uh>q=a^cp\nM@L.M9:aa&BeNsCQK6,F@#-7-]9a,5NT'<cE:.>@7KBc,aRd-j@[ai+1(@ZD)J@f.MkZJ)NN
%6^c5k@;asu(sMIWes*p=P,[Hg?(m7?.qZ3Hn99>mIV1(FRj5Qp?rj6k]XI!!opYPBZ5]g=(H/iD#`e%%@P9![UW?BG(CJD0-rkpq
%JC;n0QpMlKf8i%kDqIVE!=+Yq#cP.g^L9'mfAparYP$TFrdD'OX;PJ3D_/?rB06*Ef"X0X-<**H,BJp4-G6k#%gM/M/lah+*@N>_
%0ZqkC6<==O<)!9\$OC*.d!"m/0U<Aqg*.6S!H6;I')'^p:^!8+_jo'4E#J/<,8Q4_hP*)Ldul-kD\.+9>!QH3OLrn5S.R+UG14fI
%]*_HnBW(uuBH/I!8n=t4WraMMDA7PL\MQWqo-Gg%h!ELqS2H/W]f/.MOue]e.]118+rSZB7&uhld:-84*'@B)_UQbc#<INaGb\Xe
%M1IkS.[,`Y'GRj6&jX)\<eZMkTuT;g(m;>dJM%ldTnH!TX4/;ekcAF-o4kR04O>5f096a30L8GJltl't:]^r!+6A*RPs=OAFd_o"
%hkV=CZ\5F@gBS(&m#Md(59t(];%VTVrAG5inC\9[/bg^p5o/(mgR.-qZ\7;T/>Da4k9niOcZVQKnW09V-eMe-p@1%;_`lhK_C55)
%)fEka^DM('l_?CCIHu1>p\8P0VP3d`09\23,rs?Mf(2Eed.7q;D]On'!2%Mdl\<`Ga'g,_'d?i=3Z\O?nPNRCZ_&>`!2]Up0+>hG
%N]6Y.#MOU^MC$&dq,(M/X$=@Dh(.BI2(kWbXlELSFZ,s](\OPR,o",s?!(GtRUJM^[Fd7HdIu#WlX!r<7l)\a%mTr>OX']"L5"_8
%I2%49MiUn@=C+2fI3md=,)YLDfa8+GjRVZ[,r+i6h]nrfZW+/p58jRPXn>Oq"Bg3GqBGlq46D+RC@>;0n-\JOD/%H]4+5Yh2/]e8
%om2<&ijis`-VoCt4pkti:h(QFVNF"LBN=iN&%%hbEKn7cM9#=p&7YLhl_%gsO1-hghabqagNe4+1$4>jBZPO;BqNWMQc!IN_ZS@P
%l3k)KB05%+^H]3>72,Bi^,U"Z[KFfqTBuX1J,6)s00MMaMn>nZh"DO`IHsCOW;ui9Ha$f,7mjFr.7J?lFF:YP2agHoXk$=g%<#b@
%JB(=Ghs`Oj,#"F%B4K^NFB5$a^>\c@!,d%N9F&3Ubkt<DV1h,!%>JJ?(o9/0G=aSuDn*=9[B87(Y!*Q/BmdhCH[OSqKQYPq2E+L@
%3J)fW=:LL&bssa\re,EV&*F)HDl)WbJmY9o0H<@1,'J]t2$$!8%l*rpF2PmRo5G2NiG'l23&G&f[_WVP=GqC7WL`81rldqDG5od*
%&LPZ!hPX,?iKb%9!;8PI#R<).*8_DHM0__/2;eZ4DZU(sadjhT*h=EfiSm9/GgC+]$+Q@.cW%E/,`a=H40h!WmpIYt?<Pq[W9dVa
%/dOob&pb_6Ol8D5(_K\hBGm.CV.7=8gmZ$".bX/\;_GDQG"10e4DPo,.:_*$@t:>&2P[Oiloqh2@RYrb^ui:Uh:3ji6CPX`60uuB
%hgbVj5,l1te$n?c5+<)P0I-^GYIldG?kfZt7n8(4DZ\IAcVsoQ7Fd^AHG%IPp;IEUEN1KVZW\n$YS3HCk0'%p1)jaF^t=rE%DKb,
%,O@UDRO,BpT8q*H4<A/nCE\qHC:>K7]Sq$MZX*WS!=@W`@mT9dptg^<)Jub82F)C6%.1R)>A^(Y!u`OBhU+ghp8]MqCc)@7gcnuJ
%3rK>R$N-gGPlb"tEp3Z.%YVqCKHa8l0U(;4Qe!<I(Ijs=oKWOe2k06T4rskN0_K(X_[^HP"fC)0m`M-IijQ3$M'nN\(UeMDXol>]
%Wg+-q4/(YskP8]0UXfW>WSUmb"s5Go9.&^&K9X8(9Lp#h@Wf]iG&U=i:F>?*rAto)pt<6#VD[Z%fDmsuG^t"ii*b8OIWQeEV@jOY
%]6o3l2Jr6Ska8k4CGS0s7G(>[cXO^\:$#4U>WX]M3Au,,2Y9]l2tUUY6g4);h(Un,Vo<:m1W4<XPJoS12X`<_'FKrXPMdCm*/s*r
%qh3?4+Qtf[*FP0u!e;%$J4L3j>0OQ?9Tt>fcuT4IQ%OoAP?@oQ*e)bfZ'VBbD3D')n%gs?1MsQEqGIH]q2&CpoI*9#A2P=5"8@u^
%n#\B-!u)mc4Zf[V*(26_KS^&cMZq#5i=pXhj=r?E.cAQ0;'Z&r9Hdh(>R8SQ*>([S:`8E(^Hr=dc.M2tF?2>dkQRj!NS`Kk6k8KW
%8KA?EVCc<9V!h9-"9>9(&Im<'26c2S:sRR%F\NQAJJ2VH$%,ZZ=L+_fC1Et9EEh#*JlCA+I[OUR"l8sm-aSJ@'83o;[g56/\(.S>
%N[NK?g,/fAK!Lr-f2P.ZQ_QT!B=ST_o`fRMOa;C^79"3eK=`9,QHU06-3KXadBj8"/c_-71_Y5:B"J&'4UX)j62)e+e3C\h,GlZl
%Q`<#bFPXP?)WMZiPtL30j;tXmqV^Q#7N.dZ33qDfeVd7n$u?8_=\jiZGF-2^0XTd>-B*/!(,(R33[@l[Uj,mk;@u-@+^"%7mqLD\
%?5a3kj?+6.IeeY0B#Vn?0CO'2Q/n-gnV5`4c6j2[ULC_6).:')paM120P>bFI(.gRKd:G]3WkYTOc6:GdqC3CMhs&P@&7`%DoZ%?
%T3&]U2K1'X94\*egnj=L%Q<ks3.#]bR/d()6o9/;mQ`oq!tdR0>)BpQ)$Mk05t32Gq#Ec'Tir-eSfH/fAUGhjoKAG%$mg5@FaPF5
%-A=P^<bi77fN,*F@7.$D6Q7EJF7pos.'BYjgO=iq^2%`+q;inKKGcOa-!b`\h7N$8)tXSLa31?)d^f]gr"Mg+jo`=Vp=2ho.)<qn
%me.#q5ph.?S]#DYmVCD@p]/O>Qo>FhBC%r%DgoTPZ_7CU2W0=FLn4p#l+uV9GZHbW*(r7#'(fO5N)rAa)a8V0N90=kcpNo[iQ?&,
%.SZ<tZCt'JT-^_;NM?%*C3e">WOiOq1]D2*W<E&mY%//6\4^"K5rr%(ICCIiWZ07C5S=n@'33Cn6,b&>8'<r76lJ05(.I.=9]IQp
%oZ*:PA`0[%3l0Adb[BfkiM13OK7I?`PlV5_,'*P`:*uV=<W,>c#'\1#g,uAe9"8.Zhl?<AnO^tJ@`6oJ_MiRLG_jo[qkb1qG2>__
%on#&b.te_DP5Be/26NUfK>S,PVG.Mc!S>.V)J@k[Q,Es+AI<LW+.X/`3$RD*qeI)Z02hZFkp:nnKM/aVP:k7$]&>8*>&W"Ai4)tE
%I;j2\"s#J0%&S1EQggTp#__WQ*T"WB:i,o/<Xs@-6Mkn4^bAg%V5["9IM(3h64nqYXW,.,ca)e+N[*N4^"uIo&SN38Bp,tpA\.*>
%lo)cN0HCSk?;=ipY\[*Y,30HHgg5[pLi-WDrK_7Fs&rZu?G5ifmkAXa;_1=#SZja`roo6'XD<Mcc\1ToJdJ'p_c&57:T)doCsR%G
%H@bqfFt?n+p@.J-Z2cMD$23eJ2t]-JPYI>1IL0@`DVLIuUK4/,VG%2g!)FN#R+"KD2=WJ2AAM4^a]UWfW*X+GLtJ!W1;f)<Rb#;X
%1Ht@.@FZ(3-%0)9e4G$YA^-j`98qS1;c^4;hs_rf5-9EIQ/Ej>4+hr+Qa:8fX9BUWaA);!2Z:7,Sq6GLk`+2L^@"0mgLBIhF$[7_
%g<SK'(Zbj<$hI@?hnA\eO[b!FICSB?F.'^:om)R*7ckVhk6/;YlJ+)Bd;mOfMp@&+:a]2@pkO(@3KS$9AHK&3bEMT1l6aD:+-A+m
%V^ZNk*?IeE?5=8G)"`#Ior[`nGk"1,2#>DSY34Il,_sa>\[W>XTNLM4i,+fl7k"kd6WTd/m<4YEVtfYl9t>c4m$5$1@#)@g$/ENo
%hWIkE,>?Fcom+*F*l,E[X(VhRSC>uTPNM]%@I$+Pj?5aX%C6rS<&d.9VPAo+hdl(GMC5h_mm?S!haP<RBO^s0JX913CpU'P=\!?/
%WbGIcK+0PHSRgEVMKh^kVUWpMDUelToB>%P29R0%gGijVmrmD0nsY`<KZDt)qR/=2:..'[UL8rZ'KbG`-%cNOQED_oS%Q3L*5(]]
%F4Ug1gpra+\';c-ZPJ_SmIsIj#a`!^9'<*+&n96W^Ol+YDET!$N(UF"AiT*CXBP-O2G7@N>UR!]_YD"7>\(p0ER+?8KqP^3l`k>@
%-Yi@j(F\(,A`ce\hUU2Pgip+8W90JlTB.\Q62>gZ6`X`,!PKTp#9"t\KY5V)1'cg$4Zd2KXWBe/EL'u\':]DRA*]*=QV:hL%X._9
%U&h;X8-_99)bSZP74IK0:IRB^J98$%")KfCZ(9+Q7X%KdHF18Mqi3;]1:#@-ntYGQ>o<9rP:?DOlhV@Z>]IJ8\``t^5]O!S`PDC/
%APLQ;3m3+&aL?FO;gLm[Gjjk-E/D0PW@[`V]Os?o9pB_S"5k53?oHi=dG<=eNWc\F[p_J)mY-M9-JsJ2#!',[-E=12?BM*nn^(tt
%(lW;7`\(A8c$C<"!,$$8SbhFm-r[^,6'\hOnsE_t43p\ZI]h#NY<\-RF7a9O/+k:;YW[^R%':-U%FhSQ\YNY[!\N.L;L[kI(a(eY
%mkW)i0r+^dQW;,5Jphk3/,NktbSV#&m-^@Q1eN#`7fJ8qqn7NsCWl@+a*J91@B&5Lb0VB=&7(IOG*7\I\`3M0'`2`fdnUinJEql4
%IAL4V/;4(B1U[+X0sr5cWD9YT0bh+A5e!]c[3QAt_FqO9ZqF)*TY8mh0/Jb*W/Jl0CPQUrY[*rPmSWr`$`u)`[k5I:.qM1K"C;q<
%X[U,CO[#q4YECS[&/#BC2ID1LRgXB?^WU7(bU7Q9/?M+EogJ<iZqPMPZ\]sPUnMpb0a`gRI<2mV[V-%rZU"D,'3,3dn(m#1/(T08
%EnN_H$+$aQ)CD*]e&/[)<4X#g_e8"^`pAk$\#[@Si`W7\5;p)TZQ:kGn6)'8fB.KVi<a@Q'OV8h@]b\_Pl=]R&VUIsemRug*<\FY
%XPm:`r=57?/UcGDm1WgT/%\>riOKthhDMKbcCmqD9W9(l>;#e_$2J6f(K_M$V2_Bs-KE`*K=jPVdE\8@mN28@d?1a9-q+1@S\g6e
%g+<#ca2#+D`[L5u*D(?J-3L6biK[UPC1`gIH5acN!XDYbp(f9/YV;HZ>gKqtVi6HiCHbDf0\d,pc.p!A'NN!*0PqL!La?T)ac,ZH
%e4L;Tg_d44`]oOS?_IAO.4*KG60nqr'K@s@B;sWW6#R7KCUW/nJUpHXN(NuZ6Nc*]??5nK3$a)g6Y0@el-99tap9UGY"VN'B"g]T
%AcQ\NgM\%Z.p1i#c*&-\;&f?1\JWSdk4$&ek"\](5J@r?Y?^,X]f1g*UlXuH&6GilcUDaAmH1_#AL?s$+.p^ZH-ab7$P^7odN8,[
%f;K(+#4r61914,t:F"d<^$_"`r=#\ikQ_G2oPHnq]a_$U92R<O,*,&#:=t<-51$FSO6mVD-(n<LVaQD*+R3QSopb]$_JS@/-?VKs
%ChJ7%>6[Vd2KJleJTDp@_WerXcTq6DK)(rBA>@<Vog7I$^mn$ZWhBt%Y/4knOQ6X?FZKUVh;&eq0Qcb\6::BgSA`E*V!)_$epH&a
%GsUp'3j)s%p]%ZSr</.$GiMZt':fb>bM)cOc6`GrI,'uLl&=Io!NiKjeVVDrd:d\p.2P%TZ5Ph4mYT&t+1/Tm9mKM;AL-op=ROA_
%9MVA'jUjFJOO4)OF870,gT%lq_:pFqCjE@0cV29D\_<NXKAA'1D#fFrOJ&VW4t%s%DUL!K^(>EVKbZu>UDlb3(CFP^:P>IM=s$8)
%JP6=1C+"=&9KtOcJ]>Z;Qgfkfje8d>5C;P9-iu^%oZ'hfn&G^;`B]pbWscg^@XSpp3=<9ZV(WB(g;L%8_JnqkPMJU%115tL$#H@l
%,BltY.iT_0WrkA7/.QU(^a=2n+aYbAWP(jJ5_IUNg7djj'SW/n<^GL4LT=NKKT.I#T95T'Dn+-^dr4Ae\;R=PfV?Lgo8HJ4(6u[&
%dYe\1gP:afJ7IhuLYo]WVA4-hYSXM0n0h;qh!9]]3!g`q5He@K"SD8Z>W;D5(:bmm8[s9V>K(f+<P?_=E-rQ5R,fL,J@@"GjoX*0
%'-5Zi%%PEt7Z_;f$L.jfTKJLDG/\>Q1XmUoNI69sdeZGtSjo0]V-?<a*[eXo'4/]F[C?Gd]s2'_[\CnY'dT=9J;=5"SK>X#3KF27
%%1^7oY0R,)MZmI%C`42C;a=i6'3'P`m/!TkN53*\Dht:Ul_C$.@@03SNu,=M>b2&VC\Y1L21u@P]Ei;qd+bj'f=0q2!DF#^\=Dq)
%)R+m4>SODL2LL:pn_/"[S4IKG8WS]]%FuT<KgMj6b-(Y^^^Lc!>kL@t90Z0hJM.I(^UVam71D4NhC!&kQa@id1&*Fu#A#kgYuRLh
%?WKBTc".9&n(EF*Mrq\acI0g(0]UaZY^2tUes1:YYrei]/`1fV[YQp&=*]GV:]Xq!R;K5:<@n,?`m?WT-8@F;mZb=EidFn3$%"A2
%cm%WFmd?A(P7J&[A6(8d;OLpS%jQDcYNJN3-kqth%+)3*f'6a!ht%c^^)ut-.hm!l/^-G(Go/U)lOG7WUX(o1oDtCG)H_(ICn4Z4
%`-9K<ena`.Qh^FIO1LZ<k4r4TnC+Il0(at='ER$]D;sQJLUsF,`T7N;,)`19GqWgSB?2ao^2>)Z\p'lMYr4r^2u;T$j><J0QXsE+
%1#-Z*q/"rl:qQFa]qNrZ^q+HsGJ>5\3_2Ec\B!Fm^ED`MHkP*D^EJK];`\sf6n8;_]l0.%Uq@?0%>9X2eSCDKVBiWiec8[4>loCR
%9@.E><\t<EI:.G4[>gUZ7Ko5K5[t`X\@I?Qd`gH6TsbHXid41Y@kg7F<OYQLMP.L,+*Ug<!.%C%Z*fIRRd>39)h7<)b[L1]s1Cq5
%<0$7PQD"(2jAI/:a:-gQiGD*[)22hsGa8ODlE\M=U1X[5l2see,QkLNF&+->7jVn\T+#ISU$[_ZgXUI(-oYI"Mg!e%N"G\;[3@`o
%$=%*A&^JA>3i"N'>h0KojQdf29UUV:ZAu!;)5tL*"*G\V7L"*r+VOR;'uSs/Re$;Q%JCa%HXm/c&PPP(c+2J;@2Ys6QuK3?EWa%s
%Mnk$Z$$4GN)Jn_O\c=)dK!LOXZ\0hmiV<'D$kM;]"h/A2%@'eoiNT'GJ6/j[C"=PGA$X6("j-H%HfqpVd=_;+)]3N+%N6T=h:*WO
%[OCN[>rKC#,mcj;['s64/+5MImEMtAU4UmD-LGXY+)9F?MPA5hAfBc?"SuE$QK]+53DC?lbhS&toudSOPJri[_D1\9_(bRSZ^^e3
%`l_of7ji\LCHdNp="k=i_Dt'e<\K:-`KaYQ7nhI=2LHSid07V#[_hMYYPX(G4kliniT9FA'\^,M&aq*[pYelM.a,PZc>KjS%:0b$
%[n]2]P46#D)8p(.o5K"0F'.0d2Dd'9%kTBf(npLDO1V''gUUs!p`khIV1sbZ?SUUo^e5G)[DF2VNi&fL4D0N&3QiiSB<p7/(R!s4
%%'N,qAU>hLDJi7VZlU/$)>2d2,m/\BPVkPSm[9q'^3cp&Tc]WLopj@I?C1!JXMg":(s1l%eClFZj?EBmX3]Wc>/,g`<RMOm>_YrU
%T/Ic>kqetq\c'K(a_WBDe>BGR0i14]Jk\n*;giZ[^_Y^R"i)EI#ttueB2@Q2OrPIW7WH\r]+!j6mpN4n?(RYBl,iTl3)a5:=g1%j
%59X@00#iFFQ&MQU:&GF#*#8HtB^'XlY9-\g&l*d2Rc8.Y[(nm$KZ=!(m_b'FHh[:BDPBMmfU7btpE99bj_88@.fjO2g,dNflC(<=
%!Q=1d@YkH0P52-P-D"`]^QsZYn+f@h*`L,I<C\Ch20Vqq)@]%*S7,9*ZG^4Rd$;K[(>$T,G%qgJ;ohSD&<:>^b\`dVqYGL6(qsNo
%,IOUIC77e#TWTiVo!WPW:;9%uO+nKI]0LGj>8qu0KZ>Q+5]j77C/3kuqL&AhfnW&,s."N50D@+3%)\PfR-J5#1$OE@kAF*g91>Z'
%c\DniQU)An:Z#)dMN\XM#iGO%Ydbp8o]dK!L8M1],D9"rjaB#3/<gPYZjE'9B-*r$'=:ZEF]m-+"07qjksdFeQg9PgYBgdOP`5Bj
%j>Q[')jXk8$c4Tb=6<KY@hf/",#CqWKPQokhH"A<o]2qR\jJ3GHh3W.,o%FeKV>],B*dsP+M)YK#,H?$OV>`'rd4aKc9i3Z#[DJ<
%#&Mm^Kd9@fD?Q&J)+dS['Q,>P.UA7Dl4XdmALle=Ec3.7_Wjfd$c\cj1O48nQXgMtbQGO-%sT4u.DT-.hunGA&NAF1IuIG>G(TtW
%KTAEr^&:G#F@uPdptG+gS+Z-%GcO/EG?TK!%q(2S[hN%f=lTTB)ZNY;@[TZf/&%(tL*RN_ed`RH35s0]@J9NC05$Fj%"P[T!:(U1
%NCm1),P46O@t01f@df%1`j$*?(C!Y0QoN7*VoLO&gF8*=d&(feLE;7Mj*jfqW_`Crl`,p;/rQ%2)ZEC^P=D_;PJ$?1!O-usPD_eZ
%X+*d-!(DHs`C?,uNE%=[ejVk0VnkeP!qXAEZm^;QE'VBljXXcYQ(Y4=@Eeqts#?=rHCI#!M#`R4\C-gl0&+U0_@"4-*iV$lD9$h8
%e/4%gL96(`rT1Tcr8#\E9>:Ajn#gT\\%hs`hu0JPmEbe0gY`%':f[I`qgY9o%_6;`/Jf<47uW>%(h2'8eU5"/M;S<(:ZMGJh8S4I
%C6^dFJNsMU62ul=#T`jIS*g0THiCf\G*\DVhKOa\meO$MKn's5V-ZO%kWgTZ05)"[iLiVIQH>tNs)IT$AL/%a.Gff"n<MlqjGhPp
%G$d&<OBNH_Plof2bJfg9nK&u%GRXLeMCp6QoD0e*p&G[9B0P+o-n[.@re3FPBTA[#nM$%?nQ`.%_I0%b6\_B^FW'$TK((<V3V@;`
%:b?2u&-nr4SqPc(rujXGZ33Z^LocC5Yo9F;mJ&rI&8;no1A^lN,eXdTs0+nGfA2CDW_;X!9N/?lTt8Z(4!2fWBb[5e;D$!2,V[=0
%K:5Hh<Oe9XNa!35o#,&OVusKA)P0s9mX2UXKGmbRmC2V;c5P;M<p:TQHpeE1jnj\2C8[\`e#o7%E47'4G^BC9Rj3o*pPW!^Oe-74
%&ef>ZV.d=2#<KesI_;d*ecsNt8'MBmC.PFd?NFY'i[!M""/T[\C`HOi1<a5id_<M:mq?d8K2ma+'@>*m]7ei*qe^>3m#&dPZp,ap
%^&>ceSF4CR@sU(E)#h.lj%Lo3A]Zt`"56.Yrg83^(L\T.\QY(pE6NB("!l_!=9/arpGg^?C/H*M2`WJ-aoYNi<EOs*P4!e#=H4H'
%>G:i28EWTigSJq9H*!G<)=5a6`sQ&7<p93]ND%]C4BCm%4&=XL*ij[>Os!fM@n.q=o-'X9#Hg1/<rH%q;o*9>9-=%05t9o;ja2?>
%_#i+bo9<Q,2st(tU\_J.!b&0j*\Ua/-<\-nH^5D>9\V7?p9kN`de/P+FBMXPTQL1,9pnf1:i3,=1IF21M:"4^h^(NuIl57?L:8af
%!-QDiB,)Y."lVe[?<Kc\FcNZb-j((o/X4j:hDV\*JQJ2&mZ,l3YbNFt.%/EFDCf)3E=$)SW%as.($1!UX^"YdT(qh,Ja/enq!i2T
%%:t:6RK7!bR,]])\5$<#*+'+)QTYp"#BoYaN>pR`BU,DW1c`o0<=%F@kg>YH!BkFE4&?,1*(-NBTC;"a:6fiNr>^+X1>3hj-q,Y*
%00;W[Cucc*5tjrUQ&+!5Q5oJ1Oq@;ejs$#<_FQlR,4mR,"7TCGSQ"'0U#=.3j@;Yt]q_[8/ZT"o'mj6#fE7=V^C**!-$Wp^"pV$4
%/"k(;lSa8<V=!QD6j(e=h4LRTOb*?U"E,a>4G__&T$^u#_*efu#rU!@d,bhu38[2rlRP277TH,8c];1#j$1;&n`m<M9nRsS*6lf!
%"F?^)G'fi01u*;gX9>=Jn"BluCt9T-Brfl3:FDh5"pUB@HnS=B&a=/MTV#LGD+C8lUWnXEoZmWi^-#&mIQu_%A)s_Z%B&eJD!7Es
%XFp.]*#m0n48R#_gAGGEI/g1)2ZIQDG#MW,(T4Xn0;'8rSFc,O44;G>"in=8m:K^RKe,g-Ks&B]cc/X@[6>oW:cEH>-]ueoa"HgW
%TXEiNk<Df]-q=S-W/e@_!'G#YK/J+2O6bhQI1@66j7DAG7\<o=i!25,Nnj<U!_/)<BR:WD[_h*i6TB=TEQ[hkJ:;t9BTFHsD$+lA
%r2gtEdk3c;SEO9A[=96rp>oG/p&"PC)^B"?CcItm@70M]@ND:Xj61_OgX/Lig#gWVn6=5JXI38;%1Xd2*08&V?:9lLNcdHCd0D[u
%HmD7<'Cj]q5VPS'p:6;F_<ffrZ<Aa@#/qSQ]f\3ZU*dh]<EY!]"It/!F,-N"%"*%b`Lt)!9BY=SE5&'oH$jM/EY3c-$j8Ot]:Foe
%'\B2E%d3&\g3O(Gb%r^m(NHM.\_c("S9om:n%"Kme!sX&[Gn_[=c8nVRJ"i1.Udit$.eG*gMDP5'sk_uIY80Co7Ln=SrMdjq.N;@
%qa[E2b_UbX.2THQYMl`Gqpueq\UXF[k^+i!rP9HFfLigHO);p!lI_iD;ig=i#Jc2M?o^i`EHSq<LYu#a+0P,QHt4=kla,M_)P8`S
%1]$HqH^oZMH><\SCU:_@>fNmTkDF38E:+50^#r.b9lk25er&VpAM&@KB%B$cW#YDh'!0^2\(M$I.qXFur!46dk6K`a4WDEGo\#<a
%p<Q3XcA:A$`r1hN@T;,/i>YEc7;agkHI#e(YRnN'iu#Y?j=V[".U>tP+*UI[1a[/92E#g?Fedc%*KdLbCro*5Vc$MU`*Y9rq;=pg
%F2L*YdiDeb&o[KmnE>5c\JNM[K%:@\C>]<U[YV"qX#&[GXL&HA+rRGBV_8K`3fCuu;P)3L8:n\SXL(.gpd-M,d2l>L8)o$)Zj_N8
%aWdAj@`+Y//D^@oXY<bU9,2XgPm49D%m(VDRU(]"oi`4[O;X95XBRKdK/hJ<-<(jgpCMef-7XTOLr%;B%T6*>noT0G'Q'+NmPMT?
%aX"!?YgVg/%i,PZ93bt>6g^OZaX@0e`sZ%=#$f;G9$ccF>Y-91$R@e!SsAQE\LWX>H"H[M*E#?6]^<Gkl=l].bZ.(4941P)3]^jL
%CcLT0L"=)cJkEi]D*"KNB5XE.Gbmn)ZIfNp*qGUP4MoWqGA:&hBHA#:[Src;2SdkB:ZulVWnf)qp=gW2<'8,OTk?mK_s'AA5^Y:L
%?s`T7bEtS8^qpD=#g+78iCtK5r%T(ni+KGDpWP'cn_'j91\f`WC3i+7_1biI?RRpqc,g@d!)4U)f%*G</EH*P]11AXj&oU3c>n=n
%4)<fufhpl0o^RK=o[+L^MmMM/gA,;g-k[-g=;[.>3d'boT=Y,2G3]TH=2um$UJMV8N\:]6%5@DrHldg0+M+i=93PiaVPe4`,F9D6
%TNXU$Oc)sip1MFZ'#euJoChId$S/6_da5:f:l@d]?jTpNepCULpR&.9-Aqoia:!T5m`4V@M?_1O!G=)CI4@)&YKIV$Zo>E;?I]u)
%3ia:S%m_PZr:MbC%^@L`g*&Yu"baH(*aKP4lI3=Z<c,^V*mgUV9j,;BH%Dh"jaVjL'cmC2BFpKBMoaW'W(/R^if4C27!A0+p@88/
%%7G(.jf[`rhA,uMX?+H)7PGV)392DGopm<1ILe%m*q[.d'A*U4V\+Y$W;1;!,T"3coon?T8*=hrejapaU1;g_Lkns6;q`#="KL-u
%(>.][<@)#0RQEK<579h$=a6bZ%&9MVCoCA9('[L7mmi@Ye8"3kj#$)Bdi+_J/G`8Ld76>PPtlbWg7CLCd#*9/7s6uUBY0=[[WQ5,
%%T?BWO/2l)9O60iI9)a6;\uJ4@O<"ocWYq><#t[.6>Vtp(ki/B=4il6e&\V,EUKN:E,\F?cPF<)_?,`a[<\3SoBbSZ_`$#iOth>p
%'05>dA*pA)5C@pSQ$g#qe`(8SO+rraqc-9Rp$<6P]auSRS(O3,)^F#HZ>r.^ThNJqad!^ZXC)\2<bfnD#m\Ub9Rs`_\X7bDGa*af
%+/Q-bT%GncNX:'^/";.q*jSp&7-f6-Be8LOC6c$<ZN`stOf43TCV-2J+1@(::#HaG>3hqpF\3glE5r1E?bn)8<Niag="m%;eAkWU
%c\Z,Ga&arZ3C5H]YLq0UYLpgKYODl=?f@7Z?]h"V6$9s6;6ENP6C3?8T!)Kf^cj:6:ECThAKKa4Da.Fjfr3WYUN`uRnH$#!dFt@_
%+K(pjM;jCUbHpqWALX&o`>isAG'b!kl%oiOM$3LV%B(rP![m9g;76Q`<<hnuIF%1%inEn(QJE#q(Y*fL&_.sT&puRIo%3S'02'fX
%R"l5Ss'L<8pQ0M4Q,iAD6s4S>3blV^CPFmj046n"_@_g37?$jU*;H4=^a:Wgq*QZa,O31i>C7RrrMjMn+Q]-?!<W,,lsUW"4*m9S
%2GtZ,+WJ[Of7L.dIN;>SQpD*Z6E]oDB-D-&$kYI^P-uW4)Q4$VMP1K!RtPI?]6Wu:^gq%:QPr,Q:@7"s3$9i@H#BAbH-[@l$Ih+M
%P&$#tjo\k_>]BT^mWhs;ik*Rlf<\W\=+a.1I_gUJK8?MeCG@TO\TYjjeCFtD\<oFn52(@YB*VcVhY-;DkeKnthB2]3+HdIbpQ@:<
%g/mJm'V;0#>BWeLFU#3ka($F1_1#P%qjNH4P;I))[,lR`MHr-?;>!c'd_O)rlihroB=XR!1ko0S3\Ts'>cTJ4WEjg8p#Ygn<#=Dt
%<*Q-D)X)3j<n8?U5"nU4gHaYG2V4^8D=b,@lNl[Dr>Z3$!bta<n+CnS$MaU$lGr$!?ahtT=N92[qUcYep>uD3jtU`7[`no=\Sf$4
%m2Za61@_fdGC]-oZBBS'TQGui_=nEfopSdED\Mk7IF!-1=DehQS]69PNT(=&QE[iZppRkc`1$)l,C[Vg5N3LJr?F/EhEGC1md27-
%\SiRpHhR.Fd(_a11n,2W"anN$[oJK'iHFTC/_gOok/Dd-c3l<"Ql'.b@qKt6pWNmikkV/[X(S\LfH+%3,P\5*IPuYDQ[:QAfAUDK
%O66,GA_Zo5Q$n9Kk,4secJ9J*I0br^QIK;\g[HQBYh],a\.I8%he&t5[*@7sD.otFJ"(<1aO(5QUN>Im1<d$bfZ&mr<aH$g\PL_`
%mT@?_]&VQ=efAP7p[7ekHgcu%]_CjH3d^IY/\/@Tf]jD=VjD8WkOeUNgZe2q*:sAVSVnFNHusm;'A$M#<\`[[ea59M_)ibsb;<&b
%dJ:HZ@"t80L5TV++%TGbeJFR\aa\"s)o+(p19sBWM)3G)R0+BaZc5M]*Hj]M`rg0QS:<h0!Lp$`m@[8%NQ&OeB0>Kg[i)MW?8St=
%WRhT`k]5Sp?.'!tcf3)PIUN4U14ml<Bb!nR&etl.[4EMl\)p".,jdR<^(F:tE&+%8lSf!]cDN=0P&uCZ,(hsVaQQfL="n$E!<]tD
%qeT-5RB!&`_5pOH!q1<_i3jSriT\:^VHn(4>RVS"YChu@Lm2pEm_EqA_\N8E!A=4/n?D;D+bJEM#SUNK9a3B6?C"[ESON^J,&CA7
%?+Q)FN$3IEm`fcZFq3kjoK,@<_PR?s!fJuE53qV_FD[,o`qN=jL1Z'KB]Pame@1a"`,"7D$l,"8<]8PE@k)i)EZ3^.$oLmRR"l'[
%h2POo33qM=07LRFP,5%i6>eR"iJJU@]%Xk5"Y9`_n<NYfO\\o]-XCl@4A`O6OZDG"m0XDDei2`n6U)H6`]29p%!_ET-5+)PbO$od
%!)D$E$_V2e,$-20DkMJ$6LERS^K3#&gO8$r*54,.EOI!a4dsp==&63&0-Xg2L-DgPV@D8hOd]'"H`<T%7j`/>IoHMM,J*K\CYn:R
%%pu#,">,0@=Dhq_fD7HW5#uapKaVRVC*5@S(\6"V%r_OA),i(h'4;npJ44SfE:O2a_p[9!p>)W'JuW?8!4M3ZEGpB7pci1[bnpi)
%Pgr0^nWcoRb;hd;fN5$Grg^\R`r5]-^,4Tmd8CM]OK!F\CL=990J%:p=7FVP-q#QU%Nd4b0'"NB5tIb5`m,Ca;1oJ&0AosGs/F2k
%PYL@nK](3S$m@ql0f3?b+JC4TE?^]lDt_YCi*eG2)_]!#[DiRqGG)mPYIu]9dCA'g$IQ!XJlZ1KF&s2t\Lq)fPH$I1:Lj-]mYXG#
%d[:F?Nb[JV88k,0S\rA8$bbW-4hMiJiBCGtg4$4W]OL.:U[N3?oW'N83-WI&^-<Su&F)BPO%OR*K>0Y/\Mk3<,"qVCDB_9K_S,4Y
%s$C&&[X0Q:O_/!*]5)/,H;230Ko4A,C5H3m7N&F6G_kW>=[`$fR0?'SW,5U>8M^NbE4&hFpE@AmoDtF*`_d$"b_>8*-#uJ6FgX^C
%-V6[+DuUehR%W0TnaT/M+^%HJ92/?c31H3&B.)J][i%#0_4cKaLrc`H!@*XrnlL,\?bjb9A(F0f4C>n/O>&B'J3sM)pk!N;V:-(=
%9W._9+LS2lp:\!I%C<[+CXnB\ZJFjQgMj]-/T\(ck*q6&8^:Q/bPa,h=,iaj8l!TJCbPF,g_2WI(.>)X7)"B_4<OrcDNXJJm`CBJ
%P**+:LgES7HBBVi8$2O7nIp,oYrQtbcF3U`C$c"Z($;Y-LZ-Tc@`-7^'X/:$S501?Bm-+E&TE,%IG)oD2RS[CN:SJ>:Z:Bl'G<X&
%d`Xk66K70,Gk@94&^R@sl!JVrFF+iJm,JPgr5@j>M^IQue4kCf&^_gADsaVJX%Bf%[bXDoN`>iBqpa4</kOCYq^;j+$f?^D2%r4f
%!F8=VfkXI6gc[c;AtqC0eOqO#r3^D@?oV$BKWEBVpq%j[^Yug=Hd?\gZjB_=p'H-AdQcmn`8R3S5\e'>QOu+7&bYK$qn_<aInn7X
%YQn=s"<Bj:=F662F4ARi(Jk"8>*k=&SQ!#@^n0;,7)gHSZnZ-HYP^7^+eULU_gQl;/)f(kb7s#8^VRJdL:.AN-@&>DM5]ue#u<>^
%SZDh-`gC^6GTj[He$RH;#sJ0fgXHf=G`NIK[\glBp-OKkCeEm>WXkBSJDY<>nIc1[PY1[C]j^'c<LelkqMA44';s7#-Ue69B_WN_
%R7$Zq5B2!#LSVD`V`jMOn<,-7iR64!cjRI%$eX,?5Wk\,e`&Q\m^;.9TC/!.32$,RFdu8%)CO^snluadq/ig3a8%PC_=;mk?mI\3
%e#BD<04!AhkF.r213nmeD-b^Fi\HadkHuh`7`H]g1JnZ;m0a2bj/4P6h%G6`;b)DV^?j"=CA\06$h$^MO/KU>B.P!9MYtn5<s7P=
%=jueR6Xo&\gR.9[^us0c3`3!L.(`cNeDmJ6fT"rLSb3Ig+(+8DT5ERF3?%C^[;B:-It:R*d7c,iN/6YO1i)[1hGk&pWleYH,$EAT
%Hr![HhKoO9O,(d$r>1Au4)[cnaP&Jm:i0=fIV6r4b9%62c"M'^m,R'+7i&to=m>Eppqg<UClM_WUZjr\g.`fM,(P>b2=iZ?\0\:d
%>4+WISI\4ugd5Ec:3IKV#7RfV&9FQ(&nr**ItA(:pTAA*F%JuI,Y/c<^hP$W:5&>7IW$N3'A?hJX'L)%/nm&-[+H"$Tkd)l!f)!7
%O?p5a`A=0r:ot3uqo5i77%*?CLZU@T_bG0G/7_Z/>SXnN-#<7<(gq]!K4YY%c>aG2j.KD_m($Q7T7#?YP<oVE@FVZ#=bjct\l>IB
%+-T2pfQ-rK_lKjjoGnc0,TW_GlpXn(+D:A;"3L']"*0*#J`mikM6KFG1%_GR,i]Se3)gP+r@QDL&8lF>i?:fWP[ZSbS1qZhLqJS^
%FEg!Y?bPmfX=RQ(37c!/io%f"S0D[;G/>leSdj4&`\!3N"`=cR&RB;rBWFf8KHM+=S+jgV-En5)QON&8&*mL3jN5+%]&"qHCLjG\
%M"rGI(OS>L1qEN]m]<jU*OUE&=*K4$YB"kKI\7L*1ksWABXuH4[cM-$AM?3':iCM3p[[Ce,k``Yff?3&rLj,CYP%f3$F/=u'V6A^
%G1f;?=\F*hc%'/2I!cBff6gTT]lcHNqt;Gl#Js>t4_g!Lmt]p>L6?%nKR+VtpX.F?#=u]tdhH9ZGtk]J2D"^7cEmk,a[6O?`t,E:
%>B4*5rIC0WS33+5F^[)#TJ+1HG0OqeRbEoT#C6_:%rbBs]i'7,5YL&W%Qp#i&WCE_r^^O.9E)SW'f6GM9@:Bp&2<j961W]lfC'HH
%WoZn#IG'(aKBY/]k:jHDA=EdLItJ1l7+a'4E\mVjdrBuJ6ah>eHm[U&SlV?;E$I(n$"SRf<!CTj*d&/7oE3?!KFe9s#P^H4(H&ki
%Ai?),7[?Tj6P%(tJUs"/0eCu92IukP'Tq+(OD(*>`>!%*,/7qu5pcZ)F0W_$B,0e7L!.M"m.\;cSn79?/FrQ2$u(bG.0>535(l31
%&E!ZncdC5S_@(39*8Hrd2aSqRhDtUdh\qAW!e6?VqMHtEerc<B?c+^$P9(LCd)PKO1DWhZi9'NQ_F:a?D`C,BI7glK^$3>>;GsO3
%rWV1T<'PN?`uAR@aIti2[cdCWLj;/cRIbh>k_NTK(K,HajFPq%5irK_3QPUc94%Te!CJ-N]`1h69G31tVJ]cX%f6.ukn,I7-&#e'
%RA<"G#2o[&E\P<Zf3&`[IoMftV<72J(;$CMAs+db6^D^6:G3J!r1m12N/45/+(8O13tn,imGmG(n!hV._1e*VG"587IRsS_X7u4"
%=CnO\P^UN4'sC29gG]u7h:GEr'>F$bHFM!np27^A-6MXR;hOGod\GAKE0AQQnmcJQd%PC4[@Q]:$\3\/9V=8d,!!F`LU:'3hLBr1
%b2ZXR^H9Wh-@+*,>K#k)G]rLkl_3)K@gB+GTR,to6`[DPLsk><c=ag2@_'+q@N@YdpG_P+?ODn@DUrkX!*:lXA4kY."6;rdU?8IB
%6miYrbfJa/pa6s+TQ0B1^Q2^^Z%DQ2#qurmHBg%[#@.>+XTHr7%a[UW.Ms\"Vo\FbA">RfH[r^u[j!\,kg^kdU/*b*L_\lYR@p3+
%ZQ\_'5q9%H+m/,H[M/dlY@9,GgSV:Od:OFL>den]Z0b43]#B7YI!AUt<8'MtKJa^JiEZX2/EO+X7)7b?>fqP%0K&FeJI+?)n@1"Y
%e6Yt0JBSL$4\lG'^Z_R]VsQH1E'#MX=EZ<17##o!3WSik`eYh:1&?.'bPCs2m#Z;dUBX(J<aOP$ZcFPV*p&!Dl=mE7%ZDSeGIH*>
%kWS.QnS+%SV%M!NGC.:II'i9Z]g23BMUp7h.mKUR-C6T=mul+(-DHLI%Xg=(7%CVBr;.'!KM6@N.,6F@M-1Sr)uN7W!BCE<*1!2.
%G<2n4/i#'PEJZnIeg"+A8?,]IKC#qf=1k:b%6PXFi2dU]5,pIVbfK5PRlfdEi6jGrgTDJT+M=D]fY]>sEJ<MmA%nW8U#lO.*5%-*
%-TRb@6FjB-;VH>!^oSTPM@0'D0YE_E\$u!G&o#Kq]jpP7,[&,jb3(Tj:9m!7,)"#e+G6pLd/$-SI%Mt]0pA1>?g@AK9");&W/"*E
%?0g\&\4[@\)d7=jqr+]t[DuXQ1AoilGf)^!5.k+[.!W5W;2^L$rqBUtVARn)$?2'oH`snULu^aR_R-KpP-VZ*NL0,<$IXL/!+""n
%/kS1mjbBd!FCG&=NCAY4J2f0.'frM/TRr)c^<Zm49pBmXjKm1s%aAR@p*-hG%i(kT\kM,ClP1.fi+UdohRs_`:<`s)^hUmd:e;e&
%_pm(a0(_;I(F-ejGaiCkEhnlN7@Us3,r#m6W('[-ipq0$N)NaH'^!Wnoe6gpVX@X=E-kHt*MkE:@BI&pA,[Q]9+8c6o<.j,H;@;a
%cUsYMII,_[T;WudIr6KLrSgDa9q,,\$bGM_Z_F?-_'>,5Y6S4*gZ2?Ygso?5PJs=?Y5fs:b7Y?fQHVBkYFB5<T8$+koiZIrTZ<K(
%ENWF4)5C"c\&%ksB"3q=O0W1u0LYE3#u(od?6Aj#:PZ-4AKPcpCN?f?7sk:.ZM(>GoH)qj(um28QK<N[aD$r1b>?,p8pqoTIp_W`
%Q2rPTeY?^8e"L>^fqDtd9g[%AHLI01iGP&Yc_lP]m2fi.LsDbBRWe+%n,;nKQ+QCX9m06k(Aqk7hmu<$lQa#X>T3lL3O6h_`?E*8
%qc/2^Z:Li4*>WcO,Y3m'AF>B\X=\C@oStt,9X`U8*ai!]QUBt'*nd\$lm<L!%Vc0?M<lE$@1dP;gn8'i67Akp4)@oEQCKQ9'U"?d
%_r*t/'Kd%9A0&(!o5lS"L`JE:AtGGl=^4i$qAl)$"qn`7ZoPSA:Ql.Fd_prV>g2iKW9c(>=LIcbVSoknRkm5$f]8=]<W:fTq-UTE
%JLna<!T^X/=3;TH_/)DjbKAZ<D97liT%]GMAIKpSr--e7'&dW'Y76p<qdChBpaeF6eM2=#j,3@R]@PSokShZ9a,,:0D'Z_`fh4?9
%O.%VZNdB3%592t/(EFH*fAgPXO1,%if8dJ_UG]ILl#ummS8JP'Et]TY%jg7(k4K0]&m9$iR._)!11`OM,\Y<L/&jLWNR,/Xg4"XX
%!0t*?NFB@IiV$4$2V+Z,?>+jfTMf6:?EtQ@E0kN\B#;7Tj;ac^[V_HfQ346sC7CoMS3LPi>u:\7Y[35B'J$7Xg/9BR0^4b48>[VL
%cAC85>Memt!JTP$(>-.@D@Z/SBd&)A.^;E+ZUBZ/SqlD^Y9nXAF=Y@F2+KTg=.E<AamhN+<IB&;W_i2V<4`KG9#^)`.7L\I189f,
%OgA<dW)taVXu,BcW5FV[eb`5&n8S<:;"E!L],jJ[I5LM5^(>BB`fGhH'To,7/-HoHC8K)S?m(B0o*$*AR8A=[Q/I0EClYa%"Q[qP
%>):.1"d3ft$=9414)I%.,^4Y<0:U_?SsG_\&p"AhD+ZM\ek&ps(RVdM&PUsHc2clUo<3a?C\h.+"*H6mVK^h(`$b[=48=/:IVQrA
%-_h!796ofi_TVkO%&0&@h%8GO.Mm'sD&F0_CEb<\i`l\8[$>GX?sGO-A.dqDJ#>`qf,,M-)+MZU^\Tl]=i4%Y9*f'l]iPM'2)i(R
%C'ak5n8n*KONa\8')Zc0eb/d@6/a[YD]f<-1s!:tX!Kl2[drr@'uOMV];u45D*cNS=X^4$UWA'$JVEU`CsjdQ`Bps04pa>J$m8Ro
%<X`l?b\)utn7UeE>-V_`BFR_`.XO)@UDLX[.$NV/[P40IkT384n#1)=aA0.,G.'E<X)msoHpl5QA"<f]jdDas$a4/Fc_1>%iS+Y(
%B;bD?6>lNVbT,WoXW8J/8s;Dqe^f/Ag(@u:XOA44@F(OI@-&F=VDU=eX6\Hqcb=[J)?Q<ULjO4^:j:W?6OrD!Zq%;/BZ]ToQMqc3
%[.'&n5Ipr`GH%9NTa#$Fq<YB?ieoH+YgcHt4I`\^8$Ud,%of%rW0d2&itM@<j(kdLZXpKJ-YSc.S+bMEdQ\Q!8o]d*H\i9WTFC`8
%;9X<Th)KQR]'&KWT_7/KA0Ms[&`0M'KqO4*ZKngXZu+4mY3S\,>.6/PrJ>oGaL6LJP4W#^%;UfH?lP/Q>?<O,egl>X^C.fc&WG0P
%0=QLY%<1=;O8ne;f"K.Nc,J2jU[<,;?!Okm^2(\:BMCBepK")Y6f[@HZ>\RH-<8^-EXqg<[7!kFTP]0GdPV9O:M2q</)KaK\lTuP
%XCVZkn"JNjDs0_MYtql4d^]GP;9eQ(/2qB15hYHg_l"[#(=1utIeqfbpnE#*hm^[0^$lW1"[N]iO3q[Y#\a)h4[@H`e8]06"=,c.
%36T=o%3QR6o^[N99P170`Nf[MasJbt88T4/PJkht\;l*N(s8tEZT+tO+CYZ,j`.KE`LFMRpHYUpB06=TfYM&#]c(#$P2m>ae_OpF
%+^_B`\89pWL4Fo'liZ&eM"d-CWid#*]@^LJBTjMkA"'=;AdB-h>aO63nK[7lP/[eM9SKI^KeG7m(RE%:2`0UYb,"nAf<#'6pnZB[
%m'VD+`l/6#N!d'Xg!b]W!gLSX)DIp%ZYG)o'-7Tud4R?2:qI(^#hubH"rkNKg='G^!(kI(A%=k8S=O?B[I^=7F9ODOcEGmHL(Eue
%O1+R.S>]H^B\d;kBJ2ApQu(VALC)p6)6F?dotsll;;6c:h[X^?59!=lrN^*+m>B.Uou0*=g2,UWO(YlJc>p%<+/nnP=YoBQo.0al
%UE.#&fOS<B"16c':&`O'c[IsW2K,2)[.'qTbRe^d_iF7>3c(DWCs\[A@\Y6WWt8"1?/92&q):O0e`Jm8[?c35g?M2IXFnf:fT4&@
%ojWujnLC'-<VL1_O.NR.lB`F`&D(1<7G[\+(9IaF?S+G\FFGQTW\Ghq1dOg3SL)(J,_O7r-E,Wa,Re9<6#EKZkVDa1TNqf=^j1GX
%/q_Yp)adi-!,0\0G&.mLTS(^_64;aTU8*`sH1*$fkRuNZN5#g'N6\9hR`WOD)9hdd]Q`/ml3AOgf2aN.`YiEQBgVsXL9<BpcuutJ
%O`o(Re]p9Ln;]`i2K1h"%62oIkf(e-IKaU=bLFICH_`O]2]68o%!D[:&6fdGUeZiMmc`%c?Gb*ZrjJTb]k5;5nZR`Nb!5Y<H_7W2
%VTXJg]:\R;rT2r:fC+4`f73J\J,AqPpV6_(YPo^D_k2GUhnT-Cn,GFSs):2Ps%PXSq:f9UofrJ5InAOHs3H2kVr.OETDmUFr25&D
%n,N(\qU>KC5Q:33-2mP@^UrE-qT%LlVf"\u?W)_&roHp_=5h-_V1((hjfWNO"6\;7j_/?b`Y:)YFoPf?i?.go-ZOK]q`jLurBCo4
%!IOWLJ!VW#\Ol/kd`5<bZQeY*BGWtuf9Gr8T)O1&h8mkZ5Q*EZ=L;H*0N-Rr7;A=LrqPU(gAgdS,+8Dc2EAG4`t(-?6oe6g3T^t@
%C9%_#dc,<Z0Zs@K&,PmSjF2dN*BqT?X&I99iG&RGjB>NSPuq>d$i+j'D&K_l\1HE6<p#5'75;dc!Y^Fle%Er+ps8&*N\GO^!E0R:
%@#5t)0\of/m-Y_fp"P[K-%>CT[sGc:ceGA4[F,knq*i39p!HuN5.^]JZeK=Zs7(N!*6ZEGc^=$i0s<CgBB*nc&Tb]l-uB=[JVd4l
%ooVStP/)$OTKSl!Q-#F(q!4h"A_Y[S#NbFs^O/)f/Y:()7kBN'jZkK*Md[7WU@]=4eM+!b&8Tt[ic#_)KDrH_&f?GFX@:Hue<:^O
%/W#>F$a:"9h=C03U]>eW0Tgot("5O7Gu@<gZC-FR6q7'!k@-fGg:Y,//7#\hGo^G61'8l<Xu\ko7rOmO?3IeH@T-1pnUTE^j\>2W
%=O4j93`HlpI8?`QhMhj5'c8TQm,qFDU7q=s7^%^2H[Z;K)7cD4>P>\.4=qSlgi^OlgD.]/:'eeUX7'CW4E0s;Y=WMeN"UO@8'Nmu
%ej$f<B0[6%C<O:o=u3*2:&-eiY0@Y7C\FjI@m=-s1BH.N<-db/AE*i_F+=%_O*7e\Lf)]m=DDXhF9N?.!R!:fauB?G9p`;Y$5l5-
%UgI:N`u2-ZmP/H@QQ&k8=qk+.@&m-MDi"GOJ`Sc4rjfr6OqHGJ)$\a,)ApKhfZ`E"F'$*A5b<IF1$"ZCe5bO2.$X)-.^KI`JG[AU
%H[(EZ-XGF#)s6sd3X&P'\suUlbIWZS4^DX[bH'n>&SkO]ble4cZ`,F@YjkRq@V3O=HSO!iV*B`0Btqq!XH7bnF*l<8R1lR;"`E3l
%)O[^)pSOlXhRf#T7pR#@R7nud#*t$%qK3PQGn]^eoM6su=:>dg2qeAF2s\&)r:8c=H!e5\Xd3m4oD7EaD=lDBmk+Oi2kPNn7<cM-
%N40Dk3nW</jnnh$+6bFWibdh*1!*bbj4h6F\LAS#K9oTuMZr6[/UCX-^0'7K<l3/to8CT\I3&;lYJ4>r5Bh[fh;ZV;j_YNSgT,d8
%>DjHYb<Ga5Tt]p,D`dS-S,(gQs(NR&@7n1:*H0NNX!.(Ho=UM]?PlXYp=?-Ip4WhIDXG,?L%"`qS#,pqOe0SY&-$'mJ!(.t9=#30
%BPYnA./>c_poN["+\Zr\ljraefk7kh/.W5Nrpd%%K>fLQa7hVJC=Qrk,H=CPdg0tZ@raG^:C&HOT]Iu:Br9s2YAHkN.2_/K/cefQ
%[36Lah2q\0SN8dcP`.7\mhs5S:16NkU+R6*Yh+\Q)^A(?9E?D/PR,;_U!3>NlpOR?.Q4Ed+8d\Woqa=,qtPj=Dgc>_QY(S_hj9@J
%l)q@"IlR;T7b&Sfa2!2OJJio*8psUlAP0s^p^4tr_,0bTas<U?IQnnXq*9t_?T`XQJp"J.qIh(,*u4"'oBZ(s0YKr2TMhiu^89lP
%IltmB@"ich/]4CqOKfY!$&tX:G7a!s$5b<!#cXtUOI'4/U%Cn%KWHPO6jaZ*k+G.C>#o1!Aj7k7+"NWK'Sq,lp]/ZGSIe`j&?=CK
%or"#15,)/a!NgKYokMNhih#,DmBVuW($jq*YTqk+TYf]Ak9r1g!K]OJY$ceK\Bn&P2e%5#;D/-P.;NW+=Oc5#"<uQJnk,dZG7"lf
%Ujse+Q4X$^Yatc6\_b]H=;O01Q:)oa9/G0%K(eqPr`_n7)'q,=[g*d*`0M##1/r3k[FTf1Tt,@FD3BW'FLSQq6D2<j-Ed1;Vpt2`
%9$Jr:D:RedTFHRkg4\0;]oAEf8j]^)Yf-h6;h'.DK2eY2VHOUg0XflqVEg;iZDKO<.`0CTPQc5I9D[.3a[S_f%%tBM.ie%I<[`MA
%RLD^np]fDbjC'Du#VqJ@[a$4@TPLA!`+E`4V_!8`Wgl7D\9R8i?N&=*=GhPZ^[MK![?nk2_a`_J:>H!$U$)NUG$-lQmWmM^CU-M)
%R<6H80rfA,klNTT*]_*a-i2;Yk?^c-J*fo-5!S'*@m=/YV<u!1j-RLTkcslbI2rDC,NWK)]o9VUnbGA1?Ujt:]Qg&6T+gU'2SMuA
%cftD:#.uT)0<<7=g@LMd<*[[3f=]_CnRW1.>\N"2jHl//@srj_#@@._QX/]iqg$km??`aMD=;%cr7j\IpY(rsq.&T:hr8![JPUpW
%Zn$TMZTu6?Q`V.Q5CW.d@E_!%KFrIVRR,NG@2_FDR!h.jFBEL84o<:'T)B0[YsEN@T^Ps7nr_^p6FsBD^;IbT":'U%O_PRU(WCjo
%_8b-dT6g(unir^i1SH(adoB?W$AtAGcj+H3k9&(N^V+ROeSRgVHUm'[m$F#'$4#HAnC0"FKX@IA+\6lo[8r:fC$k>ekp59Ga(&(o
%hQ";<%]GY`#EXJBa0Ol@Qg87q>]mT6IF\&eh8a1CrI!/H+!f;<CMhDhA#77T_n4[srki;6de`!Z05\HWO,U*,l#'18TXPdKOK6EI
%?i:dX$Q^:'f&p+OT49RfZIIP_,@=PaUU>_S)Ua"L:ss:5VTnlgBYo'G'(G,a6[OQa*YtanUc8M..KHgaDu4S;C^/CdmSnbG&uB"g
%bk!X,PYE8MF@)-H%=.,oSD)%HOjJ1a,e'Pg5,Jfj)GK@BKig@uj$k8hdO7ZlQq&,(b#0i[IMZl0T[r6fqUQ2aQI9o'F`@g5-:j?b
%U9lPGooF*7*@67Bknp]i<#\8#^Q9>!P-m2e@DBoh6BHq]YL]pg,t^7A4Wq[Y"=GI#Z_Rl<2U$4&^u+'TMZa8I#$d5q>UWFef0ga1
%<MI]$mLZJ5G\2/A&UQITW@=K:2"`A+52p@+*cojmOJ?L*%mi'IBup't-4M==!b,R\kmM!(Pk*NE_0\`"9!Zns,('1Q69A3jg3m09
%72J=e!$"+d:pQR_.0#i67(VZaKmUF0]7,_-m2",*)$ThWa4Z_l'0&+rI#BQ?8el@O28FgU9K$`#UIP*]_K]YTGt0'qEk"2-*C2cq
%)"Z.]N$(8RPf:HN'hO"GDN_s:!p.kU?Tlc%RHne^SV,"ISChm.n:2Xg@Es&gA`]='Pm$`'RHS%_\2\PX@'VX_X*.1FOZL:(A+$OW
%Vqe"k7V>#Fac]9e/abTAc]#/'e6?p*,*!mR<#Jb`;IXRec"Z?ic2Up.]]U!aRCX)PkiNQ2=UA`SIUZ_]%WM3]B.1rJQ8os,G'MgV
%#[_PPJ2pNk8?3ucY3c$X_U0]jcLI-_UW$JDk:9!%4?X/N/QI2KfoB\=9RsA^N]$@ONbb8g&bD!QZ&4S/Ht?h/CMZ_RDqZ3R_"/8S
%m8@2:&*oqaY)ME431c9$65a.Rn]5%IDUue5DW&cDr-3OO@&15E[Sq<r]q`*f?GH5[7iOA>8boTl>s9BCXVYkDGk#1uNd82[b=V+i
%OV(qG#FXS&YRH3+(R!8Y4sM$>OBDF;kU;V<^.J`!5V,>MdU&*DC,g)j>_6Mf"@]><6JQJ]Wak>Wq#$)tg<H2.".9Rn3a,U%Pd/[^
%<1<)1mQ*<A]R`,&#DJ</L3OC:[E'&s\R&6^5_&u.^iplUrBNmY$.EF*>tPD(@[U6Df\dR/)2dU]+35/@or-Vri80*Ef&@.U'usLk
%\(`7kR^D1@M\g&>m`j'>\:/eu\OEI?"D^5F"#rR*<8(c1U=<K,S86h&P[bJ@3&W*W3D'q(FGetC8=,3&WD&le&ZRY0K''-GY1eDF
%>BNJuY0tn:HE'I`S0BfQ$#RZ(>&6UW[%_)"Q4ZdC!'mWF^n5K*<6BWkR1-:\\iom85=4a&Ba@FgN3Jp+8%bcJb8g513E.G2W\KDW
%V#XII,03\YY"smYI(,WPaGV;>+&@T02KV.Gri@n<B+iL#*MU'>o4dPBL069]D-\KmSDl;g@6B<.?h(D=n;^WGo&C"E-]V95IJ\bP
%qqBu-3Bloq9uRr4jQe<dYrV*qe!#eYFk*XuT,g@<e@fc:>Q`uQ);cJqL<GrCh[[4%dooc/qDr6B1ZgXDIrdc+cgQ!==7M_Q%`XUq
%R[sk<4%AE]8j;?Z(.>-r*c'7]d[t32_ms&&mmZ!O#bFP-qI_e37Ge.d=MlA3'po?9a.4JPk!qk[8Q;c:,RfMJEcB^qoX1Du:pGV`
%<ujlEmVV4HY-3#*;;jtZ1Qmc(dQ#YS'_Xgt867IPTWT4W^<?VrnkZl9,EK_1bu#FCPNX$.=,KLXa>V/bbL1=G5)@=;\s(8cD$hEG
%^sN$[)b_Y?Oh`BeG+d9S>u63ojJJX>/LQGSNi3meEUt!b.k!`plK?_Bkg&^gaPu/UFGJPDrlE_2_HnVrGeM\*r%8WnY]%DuR4Pu&
%Su/A<9snhoL'!DuOQuCeG$e9k^Ghr_PFYhh"?R.I2=9)*-q1(Fn''In.'N#L0/XKe#[S8*NHXrZ4\\BmLG%t[Q.=CrIESFd73In#
%g0N;G>>V.'Y-4RKDU*K^Q:8Q14[<'.]#n-;`3/sC;mo&e*Aidc,KYD*(Uoo&')pJLTA5qE<0@!!pVj`\Ed_I*^8=]+-lQMDe[nAu
%BZGXUI"a>@\gF)pI7$\PO4D:aoL=""gW]JZpQK3"G5/8<l-R>ARSR7&*Lt[VeuE%Xhr,0>R2iB9XQd'q_s9c9>flL=b`P5!>TLA(
%9#%PVI!t!f*FCriHHac[^03Aie'YHsFo8-5rN<^r't#OJYlh_VE%HoWIlp)0m$VMWI+.<3:h+5.#5QLugr?K-M(kV2[*M9<YY0]%
%cT@#:d9Wr9YFYdZ/d?*F',thRE'ScO+=*'*gqb<dW#m%7/j=n]ko9&X;)/Wi9ui8\QjtEf`:;)nS%=](.hYX4V:R@!lqkYmWK^[h
%:_AmHH%amc'5NTm$hp1oSV?1E([`bsEl^[V\CT-7:$p\H@gHeP6,q,f!Ds57MJLIFSk<tc`[I1Y9q-#SEp,SlGZ*hs;Z'@CYnqP;
%j39c!/T?&j(r,rk;kM2;=.dil]%eue?Eo6h@*Pb.>E-3;MLmPHPAH!Ias(PSE_f@;ZN4![W>e:RM'so[F>(RlcP?eT"4CI36=YTj
%/si*ZUO[=sUr7Y<TP+WYcJZDMZC81:l<U+V?fQgJkd+M-;;$TP/ggf"S>rtLVsjQ>]U+AL*E0[iT+RG2Jo8cc<.X%]T4>pKqpnVD
%<$JMY)#:9Q;l1$PU_:+'L,;VN'=>e3Z_nY`Oh6bM%jUOU6i/n4=.R/f;t/u8&B0aVVm3iNcBA!=CRDnGPntu_3R;`Dcc(Xp*MI^$
%4BBJ'(g^bGm=e*CUArRPT6KY!9!#o"23XfP*(B%+6q;A<"m]r5=(OINh7!A[;rJRXQ^5ZH;2ugk/Y9A/Nqr>6XCI>tZ[J27\%B9\
%++1!(OQB^*E`6X6iCP8#&+:SbAH;CuUoLb<q0m+)Q6Ga%U<%+I76pA67E]I+@9eh,i71tl>@`[F/giLIRSc?n$q_kp'WG%c,ogi;
%!4(/e^k+]a&>&Xt@G)n71WZ^)?GG\SJ:'WiE"p63`hMXU9_c8J73EHkSj;?^Q;`fc?DAJgT0trEkqMSAgsNDTW0J.[9*-6r3.J"N
%]8bNf2`f6+kJ?%DJmPfO+*)P929I*:9bkC2jgD%G')0XN2d[,DP*:$lE)3KhOJMa&>sVhm?o-@?Q8!kI4tPX-bL-LgOB&,X\ho=K
%ck##h`sngS*Q'm:UtdRXD+YTU4qe&s377mo?;fH`hcf!aS,g])!T5[p&B5FU8il;V#)rdXEi07PN1a#T'uA_IZ!W]R1EgnRp1m5H
%STd:-a&k1$P<]Vhaf9Y"%<-1:jm,#??7`tA`^6#g,lfV2ecsK<@4Yi-D8ZL5Z@5rj'/ed$eVl^\FLhG6R%VoYM!;ge;7?Nr%p?nH
%_:"@OLTG=BV'@p3>aL#CC![5DlV;S9KKka@eGTuFSI`q%L4K0s)\S%p!\YZ,,DLSPp;Ts)V`BDIUs6Vk+ulV/@*g!+Z:bJoKHtMk
%Km2E*@<]plPV\Oh#+r/F6^Ng<0-D\[6->53&#eV/"_7Wp+NoFC'G1n9oXLhH\!d2ZqhrdOftkFjUEtVfQ:k.LHFl;s>/eZo)h)b:
%`\Nll5aP7u4$Qm)'+@ZaN.cIcGaDD\cEF&#kQ[eF>TI<Sd6h-K3mCTO<]bb/LMfh%Q*IBrT;p_IJ(I:pA)\@Gf.L4toe^Z[+`sf^
%25m\6I2Zb=I"0&V?[Mn7/iZ%KFZcaHiqP4Yea_E<f5%\;e^FPGqIq#^5OOnSQ#ro_0,#.6CN"09'<@/lr?kh;Dgj>U\hFarHrt&u
%b`1S1Lc<PH<s9gt2LN7s7*5Q[#3%S[PNCXrnC)<#-2Z'p,(t$jY;^FbV^[Zt!%nEu-6aTh.Pa;)oO2-T!e=IML$jj"jYW3S&-<))
%G2=e2"P+tl2Nu,*1f/cE].=gO&tU6IiDV%kUP+CuV9;d`Er)$Y<.K?J:PjTA!6M`UT[_m/+HRlKjq[`^cm]]pm=:)Q9"^OHJF[rg
%BNTf'AO?"KW&U`A/P5N5!:5+a(e?baU.Z7"_S%I]b-M<;T\an-gp8hI=of`pX(Guj<?P^dFc!#-m"f:t=j7B\ML%$d"*5)hFf#i"
%IPphDDl*jMg,R9Ri^cd6W\6UL>8k'_TBhs-e4>Nt-d[U&p!T:Y#W"7C-n1$H-m0gX,s3ei3]1g'H\gD!mMNG#C.RYX6qE2;dIKP_
%(RQQejne!O./5/NF=,K<OL*_kagcpV(Ft<bfTdaOfu(sc,TK$X4%;9b'F&3t*7B_p];9JO&=FJcn]=c1,"f4d@;pKf\0FCu+Rq.P
%FnQKqI^YO?P5BmXES7V3R%gF1V3XbR6[EBf^9NLG[5Rs@ZAmrubCM:@51nOBr!Td6dUOTI'gsRU&!;#=hpW*:LUaA(C*]R]*7\XY
%TVj+)b4JCBo2Y%($=l$#e_[Hl\$j*+$cf>Nlf2+ra,E/TS[F2JU\X&?f?]6J4lcWJT-!I`QW[*1h7.<IZhOsnY#U;C[/<+eMf>H,
%"E(J[Q$18TKVB;SXqXaR1h_GFVtKq^ogI<hph"<3rPQnXfrZR$)+RT1k-4@o?Z0YH>UgqG=%!sTUb;H=JE?%&B&D?>$Umum25Vc(
%<q_ZgA@B@G1LRbj@1k+F-aD$AAug3=Dl.jCeV^nJJNM`c&Bdmi`7cVsnL^qP0q@&]PLts2=gGJIXh]<8Pb_s0qg]?Dm\mHD"2-V[
%UMVOe9l_$En=A4!B0N\eZd,P8W<r$\79h1XY[=95JdNd3^4"+sG77e!jYQ?D1PnO9LJRd4ZSeS,Y&U@<gNi&a1O>1NNYAVODa9Ra
%K&-)b>7$b)9a\LaI6sF`5&S<eVDEL).^]Sa#m6Zo59M<!oskVcPRFpV:@Z(V79!mN?Y@4XAq:mqTo$-gqo<21i-qKt@hO^Pq\jh5
%]S0qH+W/D\m-[T[6]5UEhMX&r?C,6J9/g=9K!fVGcPn?Z*IDuVOsDW8I;%j=*F!t]3P(h:;cr93KuQ*^3\ZkL"P,H"JYq>*;..D5
%E&q9,"-jY]?8WJS.Fg>"Dl/C7bSP`6P$K6nZk-:$l2t853?=#9g7b4gd%#kh#*N)(!_G8g%IMGleNtnuEL(T0.;M,\b"S?'krd5o
%Sb`'F;R=NU<0-0PMC:(O9#nT^OX63Pm.@?Pjdi5D=*KJ,+Gu+H5tU]aDUR**'tC-L1\[ju6pf/FT%M?%pU[?qaVV_[%Fe/:`S>ks
%H/s?=H+QVm>/"0^LH@%#^#1i91Hbqk_<[[p37@Cbc9.6]7/&(*r)<rnip]s,Vi3a7og6E=WmIci(Y[Ei_cC'XeEk`lGfJa>?*P`t
%YuEqrdS@tuc/T1)l5O$T35;]XT#p_3"4rJ#*"Lj\EIA\Mh=9<q(ESh(Cg!\&L&^;IHCde)_L(np:!XopH`eIJB6V^+fB:'aBkF'X
%QOho6`^eUQoqVFHgG[ID61RU^^MMXL4o'S-e&EZ:he6^/Hf)o<E)qoKEROXMKp0?IiCO;@k2l`@3ad@kQ8&]Js.9J;;7I5%g9aU@
%92CBRq668`S\*H)m8fIW:f7'5[]8O2GRX_1U"k;<70TV7mcoJX[qTjF9>dXW1\eL<"@=:TKVI8Z!UX?30H+UQ5\+jP1G8N#\Lc*B
%E+VCB]X+2ta<]u04$l1p;^+U]7S#"q1htRPqlUE'coPfM_oCcQJ=$uE$K8+N>a!o?5)Qt$%]QsY^AT\@:s&[bFb#0A$*U\NTj3Ve
%l)H42;Jj#'-"Hak-!l_0l;oH&r:A<Y08JEM>Sg*oq7=(f-spd;31Ha1RmOi\;d$-dUj/0!lo</;d:F;RO[GO#%hM[N"2_m:bWa(B
%.u?g(,EE]G"6Il8c/g,\MCC'0;_2MS%FjF#WRiBYKT`2u)`"LW:bV4HZ<:Z!aT<'B$OP@_9JIq\=fPU:C-Bh:/"bdYi6EuW"A9``
%X_UGb>!';rPniM0!`L@na9)OiMQ,/-;2a^E-,:'?:NK&Sjb`)I+b#F#'`SE,.\q^:2'i:6.'2KrZ?Be'D*S^m$IuX#F?bunZSV`C
%6;RB.XLeQTg5A5&MTJi]@)\OP%2o/D5E`<=]d2.bZ.=:n!0.S$1qcLU6a>olaKn[ElR:;40FROeJ?!D9;"lh=c#0M)5RJX2JP[!l
%Rtm9,E(A=E;dRrb.TuYGWX'SXV0e4m=52#Lbl:[UGg7T4fflCpOR<jCS]*9Uk-(o1"GTp(SoU7FEi@=+%a-qciCT+UC7[E];X9.J
%eH*CeYWBa#4MHPrW\R*'^!_k"$?[&bX,n@@D:H19#@)miXbpV9XGq60R;_U8e+g;B^7BBUZF/E#Fa)U@a'&2G=)i4E*%/`"AfS;#
%EK3.7b&OmqVp+nl*&l2'K>,t$\sJEjl?TFj>O+>b^6e2rduMn*GL![5Teade&6B`d]]AmCe3;TS:H:Z74Z6FVKh[X\@"Jd;V@qXH
%$^dd%h`F)&'PIKa;N$_(o0l<b%U?U>B=*'cqL-hG_W#fNE?3hkl,Q$WfRV'H;!QKRCJB6`8H/\n-4E.s;Wi^UbE35M?lfSe>6qQ(
%"-H70Ke1t[M6nZH(T#BE-NP=t#6@D5aS0tu!2S\P`IJAF]#pK*#W<p[UGQHjCa,fF$=kaM+L9'jG":<2I`hUX40\V?h)Y>-YiPA2
%C.W>EkI-%^c;K.i8?@]=[>]Z*[^T'NMH00p#m9Qc:PMrPmf8t3het*EKN,['WF]^k<m/pQMg9'%jQDGecPh]VO(iPqFH$+_%7G=!
%>#-=j<J#U7aKGi!krjRdh=-3lRrN]W*Vj\O34RsF:E4s?3Yi!Z4EW!Bdsb.-Ca6OtZMX_P/4#65,bl%tOu@]Z0@MGX;'X-u\bMJk
%a_&aJgmQ+lA`T!@RUIVgb9A<u!1A3D@%O'sRDc9[K[5^00Z(0BZ,ArF4tFqP",T&S'/+K7RFrNV!"8$N=pIqBlb(gY*V"F]OjLSV
%1bBHL++4'd4#V!aG+&mu/C?Ss](EJTA=(_Kn0_FBep5)?L(>;*]lE\Z_/TCiWZP/0Ad#n>e7XhZ)^k_#ndJ-@_3eNNc]3\<B9HZU
%D$fMWfr';!V>^)!on7IQJ>E,ig@c`PkOBj9bh`M6C#kBhas&Ku^6$Lu;%&65aT-&ALPTK_R09U$is.8J-pRu8M5DP`a>jSS9EJ,"
%T@RBP<q.RJ#Qo^9J4"i$-FcalptE!ii<@<SJO$eg@p2\+H\p#O@5k!#dVihUm)=R**>)(4lJ,mt!'#LEs4)8]0Qee)KG"rgEad!@
%3V>rn9r9>q;NY*<!s0#@&XO'N-%N4[0p&7M*!(5I&cc#H>mlpA+>C);+RK#:2lmPBHQ^Dp"Jk]6,Nq^]Sb>[):I4,i!$^Z#'=RS-
%$A/46&B=-Pa3'&AECts6,365Sk:'QrS<.A,_KEr[+:TRD(W\+0+K2(=+JW?9gm&4tm'dh-4:4=Uj>-i[P5Ql1Jd'S!64kEH>`#mN
%/l!$>=lP_"9O\)I3B0JOgFu(I7Lj<'&H&pRGIm\d@_p.BHk_Jn6qNS7\R<oOL5Pn7Pb*P5/=9;/)ci'u<9C]tEnVP%+HEhFb8;@Y
%0m@V09HOl%oT7;ndK-"O%-)*dpLC)9,$W,&R?hJ)=P-O2dEsj.T5oG/%a5F>SYILMP?]_?4lY3"En8Vj\&T+6k?%q8182ml%S'a#
%G@e[LO;0QQ)Qh@i_=m!JWX5^u?7VP(<\fQUeSeIt>#jg#<3(7,jm;8OX6Q>>^pP*3ZrlAKg*gaZXLYZ,d@*hV]R!'"RVHW`moKJ+
%o+,r4?Q&FJ_9WoL^W5c$>>Q`(0tL?>Th?'n^(Sa3_q`Pb]qp$`\^-nunc4Ttme_CZo"!qX?GtOL(ek^^f*@[iC:YTkmEt].O,K=>
%V@2>:]=kZ6PG.Y?a8lPci>B.L'^[o"#CWUpL5c1D\k"Sb`FI6q2%YFf;:>jPPGE,\2iE&)bQn4%0CWmD9n`"hTgU$/AW/(GYK\O4
%NC_^]MBEmf\th]Q":!Uj<64&be]H>]:h`KY-00Vu8c@/'\C^eK;([Y48A<B=LWR]hOGhM0Q8DusW!]UReM[+HJ<F]\!F3@pNEDI1
%@[HOs:8uF?<@QG.Q"2-Nc.Ug;bFjc(L;1qAP+<(oXs>EY7fPe%(:\*\C)3cQV9>N"0Chs5Z7sGAQh=9FQX*YfBZ2NtMVt?s\4).D
%21A2CC'[p\UHuW3K`QshLTaZm38XqWK>6dUi80*^M-]foW94BUEG%jg5`djbrTJi2PGbJblQf<4U`3*pXnWpNb)f%d]nnt>:gF_?
%$Z-Ja\i?q6Co<IqK$)tIBfhE82q"%Q?!bD7Nq3.R2#WZ!3KP0kSN)N'92jP$OAS***!O8%SWo85T6cY*i\?/A:g[[9%q]?X+OB2L
%[/&^++:!e89*keCl>L#1Ei"&I([s\1MT"N\J;=U78PEk\Ob;8iUV/QqD*0#MMjOWPl2fiFD!pFaM5fqd-j3pm,!hck`:[;$a)e-F
%iY7g=:mp7T"_WcVbX@i;B2"VYem9S`[5DiW#UOB2ocaD`P9GXhlfYZ2+7am+%dH&jGA`-:Q:MK;/]k\;EE:C<ZGQo"[lg)$1>WE<
%ZtsP<h3A3q2HI24$+,;!L"V`:WuA)9E4*nW'j5,0l85R<N-9;ckYp#8FmLVqX4eZLhmF&f.C&$TYtESlGm;R%K@X9k%B=2dX`:fC
%qk]FiH32)hn6CjKgL2*9f71&CcI3MK4XSL[ZHefsUDZkQnb##"nEDi7fCFV#C)p=?bdp!AnVjUACrGeSScU^GCIBAs3f[-H!HE"<
%\!=Q)W(CmROn3B1)\CI4Ri7%Hs&;A_lh2#pP-nSNG=VNEk9+pSFq'VU<"</D\3W#Jaq57mbbV\IG=n"PG\!%pEp?l@";O=0!lSS=
%c$[Bjaa)q2CiE-(.IXPP__FgGqNQTWIAl]cJYD#3;A$%dIaG;64E\o8,M]":/e";EUnNOG`eJ#dob9@790CHS'.79-_UQ;YPEGVZ
%e:XJraIulT9A);#RI<f4ZrPWOW:SL;(sQT].DI!b6UFFYDa!HuH#)a;JAWq(UO:@.=Oc<i4269CfS\cOA.?@a+keh#=`6J:@nZc*
%Xb;SO<N=WU5-7lUI+>f$$Di5plR5?#^Y/HDlt6f;VR?upo&H5W?96j2,=Gr%bAVbXgr?MQ/8qV?C%4'[5!/t;@@hV!2<j?$WIU@h
%?-sK\'(N%a-S:aV,hk23`+4m+,'b6c1K.IL.HN06CJ7o*3DUFD_n5EHX%AYb;aiIh5rso`2eb<c3bggadN2_nLSK28R^a&-g#EMg
%f(RH._a-iBDG*.X4`dL<g9Y=8&*+"ZU,OWASJ:*goj%j8+2+"/BX-qZQsPu%M#'tN4)=SQF`mJhHM=!WSY`p0[%o4\.sfN'L?&p/
%aA5cI/*XRN^pjNi&o/HH_<q'Q)d^1YULXSV?,XD@aIBCpbFQ,;4-NTV@J%,YY,0R7+G*."$IpiMKkTGD`u_X"ks9egi_b=R,s)IH
%f;!NsjfATg"Bti+'rhN4RBk[LKoXIXAsUDfB*nDX/P?D^(3\WY,HJh_nU_d_.[.P&%3""lXJk>2#N0oR(RK]7Q!Hn,mId@!kYY&<
%YeEl(P&Xf!&X$$So<<<deSr;WaoIP)`/57\?PoPBF<,Bc\sKqY@RTTX;kQcfoZ)#i>)YZ;EW3K"eG8*^htDfh:$9L>T/?+0q3'se
%lI\OQZ/.Z[GV%o1S&^gYqtc9>M1d6;^5uK+oL/D,FF/n\<>[B2Ml2:LD=pW2G#NpOU@_HcVgLWRrBd-'Wo$p7(Uh8i3hC>3m?hPW
%I+.l-ML#KYZ-+dO\7b/f;t.YRGi<C^0$2"XH$ef?=Kfg@9k.fckJB]jhLK]'#AXkt7\(ZS8XVo'2s=h6H1#72EqU^HUgbg0_48(F
%8QF-%h7=6.VPALa;869=.:&fg;Ll#qW*hD3EHbMD@>Z4:AHuW6U!_@u-UoSHCT0:d.Z[;=O9iiR^;,'O^Kj9t2d+F9k[\V'k9636
%OB,&oWIkQVPX'G%H.90E;9lt[]]d:4DVDJZTsS&kXk<3829.]m.&FW2,Tt[C$i;CUaHH.#s+*a[9t'e,TbG0:l1f3m`dLA&U#*oq
%QI1R"U@0.G4]:(fa=$?mIisV3C^uY!pp=;".SY4&'sj-QSgWF>\<T4DX2;j[m9F[LK#J_=J]/iKG-4C+\9h/U"D_:c\3+cAA,G5I
%_U9J$RMk(8"n_uIaAiF*.lR!]rBEhD#t6@"2$,ds:Q;<WB3/DK]f+9jH.HKb4MN7K`tj]*JdOD[os,4DC%o>_23;bI<WRT,_rY`P
%Do3(\J#J7\gM:Q<pu8d]@=$CJ0lo]-O-m-8m];M^OK[6j@1S-Q?>uEC:<UMXH/0,A:OIOUZQeXjY*&:QWjiB8$OpS;c(RECeRUMh
%$XMqr78J?Gd'TBBG'*Hd/aq<of513d`\U&Daa.CO4@A<MbSR_<1W,fpp'eRr!r/pMX"$jK;>AW76,$8KcV_2\H0GSObI</=ZOGNK
%?&Lug/`1Iu$_mO4d;imq4i#A[/\Q8DZYB^5gZUQj/u8i>oZRICaiSQ.TkOs\C$C-=q<O*KJ4uK(f:P..8A8E(.;q[?0,SHFiU%-V
%<+_OL5<#t%5nfnMc!HF+h[CGkh#>+<"QT`ALHcC>hia9[^uf+s9n;A=8)!KiX!KkK5a<E6X8iBVH(gYA*6C-rb][M@O3#!t=[$f/
%RJ[0eNHFnLlb><$3O7HgmD*P*89U'Ja$aspo_M,P_d@/Ir#3]F&ZNeoiW>Seh4\4':T8u4//U`8VDEogF3BXHbKrffq:q3,GtKi<
%k,'CYF#oN@2q!B4oln^X<chK]\0*>(,P>=pTIfZ)0,tCmbB:nK?bk*X?[H.o@W9[_9FY=&YfGOUc\mO=@[a8g5NXaFH#P:Tgu+9A
%P-C2re[bn3ngR.dOrGB$5(PE6&p&[]MAB3JoJJ.?K/WsHdb5jh`(Zg[)nK(i5*-9e-6<j4PZ6hMlqKslqN*tP4m!9p]_a;:.%b.G
%+%\+=j.qe?cqu*?'+Etn?I.8%1'OhLWBu=LPYmQ2GU3_9pN^jc5*57?)<N93Oq%@5],qR:h2UcFgn1pJZ6OQ@p`P3cPYY(JFh9ES
%!h*]o35K/Cb?%KrF'7#QABXA39N]DVV!B@\D_Ip:PA2?AT3(NZ-&a0j'opg;<d/g-m\pGnY'cp@Xl_L`fkBlULA1>TD^MPCYnkA;
%9MbOsD4GMNXhD(god[Rlei\Gc\#_AXIbu!:eoee*cO60f2=]iCAXE[q_S^;JgenuB@V(h1aO7]k_Jl2Bik/)5SQO-%DJkIW:H6/n
%`:,cR2+c@fTTTQi.!&\s@d$"L^:[`<XC=M0,^j`jYdD\Ba$?ocW]MVgd#<3qLp4M<2\[NNV_V^7.*>GrJ=%9]TINL46[ta>@0rT8
%m&nQl:_CL/U/%'JA-)A>XTar>^*`s(SDQXL*2*It7!+"FWAHr<#kbRgM"](k@2Q$GVBck.65=E0mnd3f"+InWap<6L3h`.T6[41A
%h/Oj[*`nTp8dGSA1.9B?!_?5?E&,KXp`Y'b1h>/p8Dbh>'&WtM1a%XA+;*^Hk;$7t9\PD&n8]3R7PhNC=O9P:aRYp66#-R&p%dl@
%m@,S5K_bc`AbQOFie?W--0#BMSk8L($]6><5_[<d#k8YsJs&kE8+O@\^<E#n_aDReLr\_!1E25G!:!/=d*aILN0m:BGQn]L!>VTp
%$-D1W@BlSN%A=bIF/g^V]l>X,!_r(L8H-Y.nrJONkPX5Fj)ZR+:=]uq+l+Xe4,`&KRBs71$[@'Yo97(:L-8g#G1k[`$=A*!1%U(g
%0"#UN-/@)V<c`XPd8S"d7HA588$t>ad+=LOV)jM.Q%l`9gemg[?$I8!a3;3'7ulPKbaWMUNPRG@op+oeN3m6?mum]oQ[E@tq_?!R
%ItfqM?gg+NW,bMt4HS9q/1jZO(=[XH]/\nU0_-W=DR)c<T:nl09:PRO)8$)#f;,PD5]EoMje6E/P'<QSm[P)8&Z;1@$IhIgQVXJ=
%I*!0jPZ7sl$;36:5E<gbTWB?*H3'iMQ['&-kPX4[#3\auT<CU!6U%-fmXdFAp/p32QP[B">FV#b"WLZVb\EDg%5Ms?+;/pUJ.r$5
%^O]ZK"n+*K5/2@JZWp"M^1d=i"F0a%.4*G&`$(DA$0"r=OID8,@j)LT#fu"p[F6$[\DT_816iZk(]laA3?\WZJod>O6)<7a=9+<K
%DZR/b&!0\O+(QOB_$VGt@gut8\H\F1Q&ZLq8Upq[_YW1[Gl^HSh'7IjRZ=_r?2E"4Em[/s<`-%#q.^j>T.%C^DfUB8ecfK"U(?LE
%#:[T!ciJ)-hKM3i&;I;"5sVsRU[\K.lRlFMnK1;lYp<=I":??\D?-t)3l/e+CfZ\I>EJLs5Y>ee7'n1gpsr-!&qHXV;4^;daMl;b
%>*0i3]^7#47V/o\CGS^&7M6!'R=n2/m#EVU89uIZ(eF!^ac==+5aW>t#Rg<RCrY";/5Ac)#b%PMpB?DdT@s0$<j5Ld7:78Fok3=j
%WurSZ[RV6I<J.q3OKk]/r!0ur;oD<D+KWPb*VicWF&s![GRsTj7Lis@(^uP:3u0Q*'GN53(ThR#ah"o]iW3^Oe&[!Yq)LMdDrg<h
%/KHCE*0OLJ];tOL%Bh;\i!,N^4PmCAkH_)KB$9_)?s*6pABYcW/$W-T*T=c4#=j.99#g-?UTRjuAp*!05<dVrlINSaI2>?N:s5Hm
%FqqZt"4gLt(?JtJXCZ]d^oX)Rg;9c0r4(J.T`sOA4lcC0DD2Gr8d;(5$!C"sQ^'5J[Y[M!)[+ScSJ;Dt%tKUi!cK5TOg,F=*0U4&
%?jl9:J1s>;&8(20;NcKdN3"%8`P\sBAbQ8%<P2m1/f/>^JTSOF)3P:Mm>`27b5dY.(4a&9itG1JF@[04+Pa0hIN3d$P'I1lTGRre
%nMgU:I"nH<R(FHh$P'm5>LLQc,9b'7Y)ObaA=aJt0U_),V.qmEU0trj"Fd:@()Bd^[Hd71-+>G]nFF"\\)f$90=!K\=:#-+BXi^-
%O3KT"Nd+l_7su>(^O\\"ia%"bcYf?t9-kZ&8!eu(>q7?;aGNgmmWk*N*?"7dou<:>8<$V?]guIc0SA^uOFjsX6#54ph--)('8Q0E
%R,i7(Tb0>b^PL=qG^C@'<')8?Ub)VT&+9JcWr325G$F)3HX7mE,n'q>5l<XTU'/9d!?EQJ:]WIR"=-W6e>l!c:oH6H0^6&L3`8'1
%Z/jp60S=aZl90kQn"W0Y(0:N'ID&d6"e^KO!3Xt5m4OuS.FsNfRJiBAMfrLRf\IEK6<I\W1c:MA(WTh!k<_C8_;uMpYq5LW4DJ$P
%ZF_=r<d6_-]?B0R98Re&ql'bU[j$;O$`d+*g+g1\;dZ,ZZ`;BP938/tj_OLpX2V3H2tk%p)V2E#"6A/bCX/LucaA_'!OYDJOlBlU
%(&ZS#^9tUli;#.<FLYuD_I>4d4iuR>jL^,meKi&l[MDDm.N_)8/JY/H71ok5"GVh.]DD>SEj,Q/g)o+(X[`s3J4q6r,fcmYN%d(2
%WMre2PJ5k8<O/PPOGb#J'\5k"iH5/tLK>J.)q^;(lgc?4O3@@qK1-sn[%iXS4m^AE&WFI]gLZ98#CZ&]d\4f^RL?*p,j2m<F9toG
%'7CK7.2djkKeCX`:;d`NekhJ>=]ieQEG`^Nm?^U[ag6?o`?MK./d!W@5F92&8U,6E@?K_3(HUK!\DLu-o/k_uM@sea>q(iPlP-P'
%F$\)?4M\Y[a-R9R3.CA>1rm*9hE&Z*nD>t</"7T534Sc,f"ph\9s8SWOT#f`@sJOrHV39&`V&+7o\Uteh^.ppB*nNd+&NG"!r8kT
%BkOQ5NKm!VHY6*<,k4o=Z6!FGEJNM!m52Z.cYo/gs*<;e0u.F$0+QEF42:AeU8pcI([t?hPV@k#K?XGu]RpBnS4=IgjO"`THN`Xd
%Eht0,5K:dFKMs\(I@V!KQ#M*'RD2:nh'3nT0G_,ggpG"/EEl',;PiFMLEKm/;_f>nPLa\9--U*].KnnP&Q$u`bg(5?CJ45qiLM3a
%jSRI%l!+NdRe)p-PRC$NR"",$g)s9ke1kKZO92X%D&/VJC;!37Ti>`=cCK&F)CD95!6C-<ObPS8lNUZ/$A)AH-M0<N@JOpI@.$C2
%OC@mSl+aG(=/<5Dc]/>bXWk$09FCl3[]H).TehKXC4Sh\VOU(BM2QbR.5D_c-o$TNaqHKN:c/>hMTh_+&m-I6[P`nnk'83s4F'nb
%GX1rD)%,)<=4r\=#OGe'#Yh)VC>[*fL8X%\pstE$Ub--dejK'7Int"(a]rOpZo2Dr(]U2mW!lokZD=5d_gSKW_o3^sJ-rr"po1B+
%#!d3kW(:Nuhi`RJ:0`WRUff+)]#5g1L8S@>U3/M(1c(bEJ'ebMN8:%u-%qtW6W$3pDeY^VZjZ9jK$,m'Y:T!"*,6AE@s1p#*7;%N
%oh?mJ#cePN=732:YU[T?1e&QiQ/u[;WrO.\GuLMW)P;?)\GB=gWL/\5I\G`&+gAu'[40]!4Ns")`EZncmGZ<)^3TGF4%1jAV(@^N
%n]OUp1E>l!9BoDn@j\:Jp`$[+qlOR-OFV8WbaL?TB=1.$2#M_n&f0gl]gb'tHko9mp\/5Go*<:K-Tir]qP+qX8,3#lop\-/H3ZBS
%5$p/Ff.C_7_e"F0(#[/PaLj?.O^)[GPR07D?83P>As?1t>HYtlCjZDR&Qg6R`*2%a7S)KkP)b'=@0"u4+u3jh*h"Bl`EPe)*C!*G
%L>4':%7ogoIa#lW\Z"?VE*<g$6-sjAc"E][8Qtr0PJF++gX8<>QARbsY'p+X@&&NZ"2p.j!_npL6U=46c@Om'#Kf;9P.V0^=ptZI
%XGP;W!LbGdksFiB,;/K4Q!fIYFnZ`^[n2?276jhu6K5Q!B*P>2:6`epK]]OI,N"WR@m,,N/4%-,h_Bs3`pa_#:X5K&BU8]]6B`RP
%\MH;P&;Cf/.8al?U,$63*0_4afT=X`8Jk^A!a4Y2.m]Xa)F/T;/&XrWd8m'O!0K=`(s=Zg@iQWR^gYiP=OiD*W$%bU16@$,7>3l=
%H&o4:+SJ6hpo8+t)uF)/cfd?9/p8Ei3%6)//afdDl)uiZ[-`0q1'^p,5V1\5]TTY[+cl>PY'E:K1dIM$#+U5O!e;-;+Il<kd?dF6
%6qX?_ks^ge(X0tuLQVDgd!j7><G-Pg')l]QZ<5iV1q%1.(<g,gQN\?unMn["4c_gU5.:CW#_aop<m!O%]Z]Z^9DNa2JPd=]nC0$j
%!Vr2,;/$QSkNbWFO]lVfCLp"a)^XrW"4q?K`l0f%Nj3n61uIl7-IOWEY/,5hZY."e-1dT45+e9oD4UR$/$C*AB6<Y`::*Q,nk\BE
%/ok+%(,83(1TNmoZG-s[:`4\RMsN?%<)ZHd793W,X<Th5+Wd[U?O^OPcuR;>1%.h7^1C8VX_]ueIZtE8HW+]6a"8FFAu]-=-CZCo
%*iX)s1Eg;INM/Tl.jW:fX_gaG/.G0.WO`3c'@TNSM/^abeuJSR2J2-nLkcV=c(ITUEf<VnM8F4f]1:stguT>Aq#^sL_Vfm"aKCBO
%=?!g,]9-#lmN)-],Z#YB9?*#4UdU2c?#idGAQ^16`s`3+Wjo_%(FE3sHWBVRi,"4F*64*_OU'u,$tZ0\pMB"'a7/l*QHGj+91C1s
%&895X*g08541%Xl\i%hOGP0HO,:hGmi_3o@L-eTZh*fTVL'-u,J;Ou-M=I1ac:iCOEFO7ARRmi'o2kb5-K@[Yd[4Ud_e)(XifH/W
%AMY)W`FO89/<!ir6/sTNA9+!o1m0J(D)hA+ZKII]ZtO=sTJ:&D"-tCq6:tDu8/d@gOTT4;(J+A=1itqUl?Ad"3n&'1lO_&`T1`e.
%)Ks)KC1RnkE#?RW.#7Je%-ho>cgk*hI/.abc%r,J\#t6CC;AF;<j+L*a&,`p136HeY8aSRFVO41,JT(qIq\:Hodd/5GDq)c2&u5I
%)Bn!A3G-MjI\)gHbc,B"+4g84[H*tRJ]K9+36]1kfA540]JYoVn$_J/kElf,'UeX3D>N)Zi]!t"fW!hs)]Y'STmYN!W$LMg6M@P`
%a,VXKmUT*b/errG&<7H9KC+tW\T9H9Kgn5RZ;&FZ!L2,8,Qe]$%5t;4;.OZ@-^#c%(/cn^\Q8u=VYG:4?3(%@,OF2[Pd$)sgmpkb
%+L<BkK"m<k:H3Y*UtN,BpF-b)P&CsXa^OV?ouIZ_:dREQhL8mJ!=YL!e:*[!;ahaa[G9iI=NE7`VuhifkI%?18<\-<RSYLS>o1$B
%k95AH:s049o(NVOXbCa`EG.R]*7lsKL&&7K"WD=p?S0EU(5,lK$/9E)%OgM2\<"$Q5,>BZ,f?GJ'EHKh"bg%^##HgBl_Jk:B]@nC
%P'#@#*5ouT@hrE#1b-GCR3'E*r+:qhOJHd(&cfiY*!.]1'B3ohK\/5#X[a(K4sPq@mi6=DVgup-1r`k!,e$E%5$X!GipKY\"p#Tl
%GbLjWa)n'X74\aW_)!KP#q4*1F$Lp^#9_UbcpW0TkaTcF7"+A[d[,_W,>jjRqB&3!O,!@LrpMlM1t1sWlOq2\T1`d/3R"5nX6['B
%_^lj13UGoaWQ30lb<(=799:B5Sj;-YpZ&ZGq\m:a%tgHg`[W3?CK^%:<1pEF?)?hb?=-3,?#C@jD])dniYWTk,!@NEA):PF6-!A:
%X6Nnra%SS7r7dsLI.6r2#]+iP)n@Y&TgpAWd`EmVI2?m5%+R[Ak[(99?;[SU0^,pHs'7Dbc_3GtjoJ2AAY_iRXJMiOh6rC%=[J7^
%P/qG9h0cfVjI)1Z'!Y,5;@6^V.*oXlT.%jYf#gbh#XV*,OtHn+,ElB6!0',jR\@:n,rrd%,L&\gfb!AqITFl!.[sU(%R[f7En43C
%9)rXE>RP7E.ehJNHjeF?5SN#8=!ks;$K8r)TTYAMfQClbQJ+geo)mE.Cd<5)!bggtrIpeJ[FQTnP_(*'.j.R$_UidU&h6TgR0G)R
%VL=rpo@5*$5^I5Rn[&mi<!+>$C[J_a6P*f\YU]c#qf"/h+*RjM-u[O20kC>1%k164.:/`Gp04/51^K'HA][$GL5=9*J7aa$52K[s
%8DcG%Os)#UA*s73#F3O;r3o_1!V)>cFof`2/$^/9!XD7*AY5.S"ct&pmRYA@Q-=cYg#u@fYnfH,fY<kP&fo>^XEoHMGKB<fTK'^f
%`(d6s*SD?E(S\>f^$9,U+'Hb]3YFS@OnZG4"]&>'Z%AQ@G=W`oTM9H\%%d#H2XGICO2m^q%gKss,U'dc@\D@Gl4n7Bq#;MZEIMmQ
%rkh;)DJ)2rs/Ik;B+k2[*O8f$Gr0[[_d,$ID%..<XR_7H*9M<EeE>pTa#cWX8pVI3o7ZWd[;R]Egf4PSXmu5&%c-+m+CA&-.a@6A
%?U$T/e>QSY0=qSH;=hLbE"%LV0<Q15c':"t^?)[:dP7N2]m\OECV-^e^YL2B3T-#dW!k\+?=Rgbme9`.am+$SMD%EgLDRn"<b7<]
%VQH6JEU1&,O(b50:/MBDM-@^NFr"ag-4?%ajWk.1K+<WSf17cuJ_'@+5fg&K=0Idc?FuLQlD*@e>TJpJCc]7%J_3&k,;$*4O^0'&
%`_?]uop:X/G:*oU&Zm.ln[ge/7="+@+X^u[6[pAkij*/^H8t9sDgI8gmA#t!)_0f#+P[q]b>!eJ8klVElrcq"EQr+BL(X)mYD]HC
%lGX`3O^/l[P\sjo'!1s)fqfI"*4PH\\NRIJi`(ifl/K99N@S/)#+NhG'+[ptNU`:Ve;P*"@l[;<G:_GO\ub</'fH%k7bc-bV=2X&
%42=jZ?@u`_jl!iur_+kQo-dpWO9C`.W?]Vci^A<_SlB*:g^g3[DJQo>&:;?ZG">GrKGQIMOtR0:etX(lT&Q'VE*lfad;:OXe=XP<
%'('EI!GYN/QM+GOUB*EdZ/n@6HVbU)a%m6JDqCTL?(h7Fl.;Q#m`bPU&4Am^)mb!qQS%bfKILV6@#>lS'PnnULf@RKZ_pf$)i+71
%;l@V<-%Hi26YP/XW%N;@2<=__p90aU<R+i_")Cqn;8H<>#m>%tI8:P7^PTmgUcR%TB'%[<AM-!/.f=tUJ!\C_XV[Zh8('sC'jLT1
%]9XGE?"n%Qf@II2N5F>Dq<W0<Md4Hn)l2s*j;V[UBiO2u!)TN2#Mlj7VfLKoe'RpGX5A%(kY/mbY!Wt[GV5,L`GelERk&ho!JaO"
%NcJ7J@8N#K*L:mQ_il35e6IR3K'N]PY6J6S@FU1b4g/slUWf;Jce",I#.7Xcf>`j)2Tjjb!j9*'N64)]cdb]lA*-uY@icX8qT@MQ
%B%\oqSs?eAJEnuc^4gPn**;6e:ZFE!:D_,qV0nWQEQie@c>iM>L[^e)j42,UNi;EO>0lp,rjm!QmnPr>\*ok,2r8QJ4i.(L3RUbr
%RTWi>C1:o8?*-h:?,iQkEk&C!at7E;k'R+gD22pW?ajT(CK>f^H#<$1rDu3mq#e?UW!HGD$S`-SKp+bc6tA!#ks4.pk[J/+AG)ti
%Ot#6Q]_[5@%Ol)jNOEH3s+WHtImEQFK1&IM`,jhXLE(?b9F/`GRnW&7^5L2T6u5G:b^It[]oO)Nh,1KOrH6k)d9h:;8$c_OqF4[F
%hX=I,iA/,"\X`)P6["5ukCRfl17.IBhKd0eJbuB)H65#]]90)PrH6k)]jH0'8#P.uIA<n^n+U2X!ddb8ndVcWR^nY4(%o;qH6;hd
%nhT8D>HLS^'eee,cEUHLK)Sa(,-K,T[WW):CCSTe,HMu\[9mk4_[Z"eOZl6?[&hLKbI7,VG80LS6C.0]DVOWCo<Mo;\<r)ULs,*Q
%g78ls'"n&9!#lF4JM7lm&/;MS^g6ik,VFRGo;@j)Df[7`\<k?ME-))!K)m+QM92!Nc-d'cB_cXmYA9J.=AiB(^5)edHW+Ir)$7U]
%(I0"W+<LcM:gSYXg&kKBl&#TaB9[`oJg_7/UsaQ'"OGqU'HA7b(TX?P"dlQ+j%*$D!(]LX,nuS6*A7D$D)GjU72*,'\98fHI&:NY
%0AqS8PY)nrC2M.\@nK8#MEJ\M3n!0l?u[_K$mMZg807?giWAC;,:Qr5Z9`p?Na;,;L(2XW,(_1%(gNG!K=?pg)c=TsjG3qH_2a2T
%"BBt+8qb,JO\[)N$;Lq/9ocQqR%dJ#<A[@JE]GkN>505gRj':QBGnTSTLP#7FUF#%-Xd"s5ZI5JIe4:^5J2lWMP1V?"Z6Z!O9fhL
%7D?qnBC1r;U)V,eU^^8dP!opB&+6%1c:`?-MWXt:3/]W//-2t]4:h]i!TE\c='nU]:^YAcZMLM@H'c^sQ$J8Ua&@AHB'*%[0A:uF
%YrabKKQ(Vdd*iX+^+A^+GtVt`^u^h/93J]M_4?mK/YfrK@)^+tXfDH9]p)JtVOu<:q#F2:n^JeTZEYnDTs\.]k%I#\,[F\j<UNd;
%]@u"<o%"A^p;0psVr@0iP@MM3R<,L(Z'j1EhSo6V-GI(>pNp%`2m0),-Q.Zkn\s<Q6(ZDa]2ADC#iApL]3,4Ko8[%F(3at%lbh5!
%b0&O3OG(`;]5`l@KL`&3]5\\uO@>m>^88jiYP\lY&@N]f5XogNTR\+#dNPgl`QfC:A^.9:h2rj+'7-?Nd$nS7R8aM^L<APg8Pd"E
%_nP%@1;ICuJQuEZPTMRV%oc4RI(>ELc=dfT2$$GZH3Li]H^IgT!Ut[1JZ*<n-FZXS+u,bg_598]a1qA2Ai]kO'SgF2VQ^4M=pa_V
%TS?IM]Aq:Tl#lC7E>:M(-efh+#KVor+`ksVoNIuk+u#]A8sRg1'U'SLUl>7Q@2aBLbMdYfg=fN%Td1n[0ZfZKbZ4Q%187ZQKU9Z?
%#S[b*8t#,M;0B]Vn[E,<D1i5`TQsAGS3L-=fH']'@,%Wun2?lUN0ML.ad+p$\^_?k+tFNZRT,`Nb4";(JcOZrOER=W_e7.[WJh'j
%7"PEHKmEig'mY!JL1oLEU_-pV9nof?5oLf`9esgQ7YuI6?o^(6/4UlnnEMYt5Ltacf[!Ln,-mKl5_'R5KU5Nb(IdsU9+=^ooQF&p
%3<oj7pE5]DDAR.XV%'"\OR7'QRQ4_qJ'X)=3H01k*Z6N.4G$bBgQd&pI+L56CuB>li@2rn%X2)'[VYBSJe].R<fZfT+a)ku'6^Dh
%XP.X#McE*8U2oppd<^g^r20HUe>uZhNlJMbh(!p+7Q?^P)B6^D=juK#2qJC?@qcCPCNln+G"hZi/H+*B0M[8d>?D][\gad@o5o;[
%A+]Dcp.c8"2o$_N8M#:T<\3^Zh+6fIA?Y"!Q2Qg?]ph6qrUn<reDebjb#P"f]@68XJ]H#OO\6:iiHI;3924[ubZa(r&]\f;L_'h5
%3S^jhH[Gi,.EFA=4qf'up*9L/a:!BGbejOE-&7$?[1<hZAPV0f,&KZrpsOhR:M`T6,;F/2S.NL:HW4,VTe?OG!);0$ZBH<@lsKiH
%FX#)Kq6..QKa8K`81o13m'S@"3YOd0N^^\.qis$D3Defj<dB2tOQhN\e:_VjUpU8TnGPG13k=5^O.#;$fTG&&T\Q\'A>")Yai1m]
%1o.2`WB-2ceFu`arkOLJ&EF/W!o\FR%9ZmlWAJjO]&5Oa9bK_XA*\2A:*!+]9(`So4j'Rf8t`%4Bj<XsWV'p@a:up)nU^2bKs6jU
%W<#p*K^m*Y@?mB6^h(?Hrck%;Uu?UrA=-&TNe?4!BIho#lQOAr0JtYJ`)M(K&245tZ04:^mFW#.5d5"DV.K>k!<l(/MHD/Bkh:+D
%$nIqIks-,M]TA#-O\lZJ!2LcqKffsT!c=s#`.3Mk:]_LW*-hUJ6OT8%2<PiW<"J5$pc'.A_+?Ql/TlLsEr>Hlj.k/b9C<<O_m1M2
%-YVaPC#tH+;VkUuG7j4G5P`-()NV3UpUNt4H.hc#,8O=+49<&diS,ksFiF3V!'VL_W@&au`)SghB!U.6<H;+V>(,Y6<NCO2%IGWc
%X7*/bE(l%p0V0#"NKpncf'^*2d99C_BlA%iG*?EAnAj".7(4htlX3<=Y::CqdQ0Wc7Zi2@/F%T'2@6pCoa)0TUP0s79I7kmaZ[6=
%</ZT#1)`nc)3qWV0h\fNJ1W,\+N=`i.0Y9rPRREJ?(P^NOo_,,O?$jt3LIN;/]<#;C5>A5Ki1h-C$JGhKQQ4_&q*%t"/LPX6ag&o
%4WItu\rXs+o>p!ED@C"srNK!fI<lnY,%/7<f^?s380?V+@uhMumPm_!B'`P`-#(:9%R;L=]+7:E.F1mFc)O_PkLW..5UZ=%(asD<
%c_=X',`F-(EKfb82h[I.[GM#EnNHt6[)]HL'SM1[\^Sr=rKN#/AEWPkM@=B,\Uh[OK49O!EVDFLQnKVbi_VE!N\_*sE!9Cn/g7a[
%rp4+XODY1;$fS(@\eOZY_A^dXoqbDKqb`8Y>/<^1@$!Mp).Wr=,;"#P^l4nJK7YMOE!_9COE(Z'/Q0_"j67t46V,eNlJ1ctok^XS
%Vfq*#`qK,1:*fENP<(eBFE/i"cKYb$SE'$]J3@o:VjuKDR6?Hq4$0:903_FP>sF(b?_15i9@rnrM+ER]-7IX/IQU&sY+O-W0IRa5
%b#Jug4JSpSQbZ/B4[W`lNsa/U/'.,:To#`5>C*4pYLW5;mLOX(1.-75B^&o=jcItihHQOh0B-='-TAP/j04hX5*n\i-X1J4L#O7:
%<k<Yr[$#1#fb&P2)a+)XWYqjsXN#8qS(3!h7=J0t*r>T(P$Q&ol1_(bE(u%o-r6?(_D#-iASmrQ$E_9(7b'6,`]uU$r3_YO*J'!L
%i49Vok@)%;f86cHNqJ/I\*<-]H/@0/8c*`lESJUQ))+sSh+hU%[g=_^o)XU&`JkSP1(VK%GP[pL?@"gu??&n`^Y+CHYdgupmgJC_
%MoU_qXfWY]+HCI0o#Bm8Srm_GLN`3mOmf^FIF`S\!TFR(l)l7<E:<&NeH6]bkU=_@5br]g2[K1XcL\?&@(+s;BI;DM!:3!N]51%m
%GfJY`3u;E/6#+-gnI.rc<V+<Z-kE9mEpf33AXm8E+4#K4H#0>5japc^b82E_M$lA\^#IY=(_:,(J7O$f0j#^hZh=T%_G%DISRf*l
%K%of(VO<3U?tE!S"P^=kG.sX.gq%iNO?ro@H:Bg?9`9@pBd4.-R\s\85E<+uGi=)=fo\RFMQk1I?@gkq$o)TFB*=WJ'ZDGcUP-hr
%1\lJ\K2M/Q`c3KE9Z0ZN+QW"n/5^&nT?_s;6q-HP&1/A,Eh";N,nR+Sc=7V2WaIF,LgTQ_3_TK^"o71-a@ESWVqbYO#%e,/cI%fl
%P09Q!-,-iRhD1P-I^4UH1`gF8p2ddo1:(P:7kUn<GS507_m`_,lH8cu"+3;J;c,ZAM5t\[eR[3sX6$E<ZjP:0X&f1F.b`G6<oI8X
%i7JNT@QZI-=t=C<XPn6fUG\gteD:B)G!NB8r&]U7(XtDabO&D9"hD"YmF;Cg$<"c_q0[^PGBuMnOh$"!4R2taLHb6p/5OFrre`3q
%J7)"M")m<%e@b]`+?^HR_XoA4Y7Bp8K'"B\;A+A''G83M0+`G!7%0pg"N][$'=Ih$e@C5T`L_o/RgkHS(R0a4+U6375nKloJ1t'^
%%.]ZS`st>"-0fC41&.V77Yt7KiPT(H*P#'u["6I4VRO!']-Eq;"6<`:OJTdX:j?1RKF.6AcQFU;!)k1LU<JK#'$JD>KQ9S-/cMUf
%!?Omnqo8]/I$)h\q*A9+IQkPu`0!HLN<I./R5H*\ap03VHX_Lb#j"HeQ%#D5aVsFQ'U69tJT;B#MlWVu't"IKNC5:N7BWl.$*'YL
%'VlNLP(ILg!:n:#+L92kiGo"AaMLkPdL(++%YPk/`!6X*YX&2Cr*[Be0*(Q#LG4n:&",)g'XiQp!U7\#ag&_h()E&D1?[N%LacDS
%#dnp-!@/nT3*?6"UksaU9ZP:kg6%Hk.!aI6hM$%<a1k^orclTTDIu,prh:F#*P=I(98Y+->cKil\'*g5U0VSr+^Dadlt'>H190;F
%LYlC:YeoE+fM)k5?:_.JgK"]05/:*"(kpu7*NPd5$?J(q<JYjql0;<EIB@O5Fnenc>BB;NC09M*%?PA'X>tW04P)2Hf$c@X2]7(V
%aRHIapUd!>!\^1Ae"C'P->C$I<JuZ<_!s)NYjs40"0a#p\I:Y6(qn,Z#62e$UJ1e%'Y$"lBK$R#YTXsU=T.+B*l<lJ,L87KnnC7K
%L@j^q.ahl?6*X*+4\N@kJg`elE9q"1%8@Oe6nXN>P5;$8"q(f(;\ek%?*]T3<:J./]J@KJUn-c\q(/h_1&0kP;OE9Z"/QjCK6!Ai
%k#:ANF+hE!LmP"lAb8/%-mV[,EjWgfSK[B\b^q`Ua`Bl84$GhTJidWqa[Vi"Lh]\a:j?h(0j6gR3JhLl8:X/p,OZDF@QK"#;.V1X
%^ep(7$5(T5"j(g,p9k^(+>`La]cq_Y&TA\NMCg:"NKu`BZGh%/3t`[2,b]3HoE"V:6UO/eQk%B_jO4*sH%d/\kR_4ilA2+u-.ai1
%FK!tG$dDcU!f\tm-2GRj8PL9XS7%Q@?6Y4WJp=opq'9^h`SRF35KGULPI8i.1^d`jpgc*SbYV"'MAfY(ddVo*Ou[2m[0?\o\iZ46
%I2S-0NfM?D"-BdbZ=F4cA^to+-*k=!PY[Q3e_4WlVqbXd"1*W(k%H1%&^.#M-,$WIhcRk`@R'\)jVl<I:Bkq:e73.7nt'5knZa;#
%8>6i$8#AGc2ql(t&6I1?eWEj70/T.uJ6#6&]%!`b:G$q9gT#M=%"-N-S4:I9*nNRn1M0@PCD!]-[)UWui2;_2bkU#J^V0+EN!&U`
%?@U9J7oj+6M;6/M`X0N"PXD]+7bp=?3DDo/4:DLDZ8(9Bl]p&fig0[^GXi!lGrpQkgg(!'W4P#7pL`/#$XV<`N%"H1KK2SS0YAD3
%CHrJgRbqcKBQ[aA.O^EXkE(p.6kW6n(Qsm^8<B\n*V*$h?s[XMUs6kq7$q%kb&[%HMXX'*;sp;<:i'kr=#\;fGteYlj+*FOXEl$!
%D]`#3KRfBqUkPP]C)hgP:F/_^3BFGg"%ePhffD!AXt1*XX0+u\XmJ(3W1Yb%%RDHt`238:`3(pho][*d*<Cb>=r?)TKd$M[L2dDr
%C(LC++XSRo>eWHM!ng-g]G%BQ85qXL=S.u$ih1V]!^MG>aZ*<*_CYeMMIPX3HIk7N"nJ?5^]pnGAE"5n#S^:0aAEcMM6Q$G`1n"I
%$ThCgG"@9@Lf4i\q2;TC*1OTJjhPj3%"q'.a=K;<#Js\_c8oXmin<D(T<,l-^=d%8!ea_1VA>1;'7b#/hnU"i9[FBgGE^Fuj`sDf
%a&A.^<p!'C&"6q[Oh2:6FEl6V-)jC[]/n4]g9pYL_.=S/?'YR57^`0\n[p@j7Y%S!h*pl$V9lg5rDWol&+Ip^<i<I-a(d$'`EZte
%FlH><HJ6ou_,a@DlMRXSNF@'?5-1$SQH1pceuh/QT5,W69BoX6X!GI9,[$K2&V58t80;l.oMo!U"GdUSSFM][gEJ0[VW.bV:c*u!
%4E^2R>5;@ILeX:.7F230WJEAd4#rBVbFqg:fjhEq^,%C@-8l$]^kbF0K#F?JG'.)@'sEu)Q4YU9;/h'TGp;ncFuqs`L.OaX;:^)Z
%$G>h"Wt>NrHS-oSNXgUS&\Tdt.R8%&/%,VY!cDL?dj48[XolI6$\/TP+]:-VC.b9:Yo&3N>F,jToSEF$c(Q7kF)C,8qFMIPM<L58
%&HpR8h%:oR+PV5L,jM3DrHo(u7.jkA(Mk8kRZh3:2gh,<4@UG*.78rN+UFE>BXP87Pac6I'G'E+*+DggO!`#CUS]7I](-qIq61`g
%Y_I6>,\`J6j=A$4L:`pa/9lChZ/4SuR6QH9!*LY7UL03rAMJ"$=\*c;KW!Rp+A*W87s.m*3Zt+A\[b.+1p\J?T#gfmKeQ]%1(Z>4
%%r5%J?jKcnMIcf(h_oIG0pDdfDPi]pNr*V<6.ph(R%G[W-'_,#96e',hcR[8PmntJr*n@%ZC]75QB@f`m`L213``mu.C?tg'PL;/
%4lp)DLT>!F0!acbd:u_XGma,F7o_"q'^iS@<\7P+m:plU#HXnD/;c;ISoJdfQo0"^F83,2+#d,U^s%8b%IJo=&+dEXF-#m<qmNt'
%IJVUEI<1B'a@I"m\cetN>LZ4\cN0m+dl^kFEA/<SUuok_H6FT$Gk"e&`g#7:f;M'oFB:)4%r1O@HuY/HKQ-E">q"iZ*1*cb!#4BR
%I5)ja4+H!r".7fPCor8qG&dNNF1E7l/1r-$M+b/'NPoY!DS(._W$n`cnP?%sA/KSu[alR$<KC5Z>>V\@o[i%+ZNtU(8d`_$MkdlG
%5jHk9;5[1=e\:FF>nA)o@GI9-`Ncsbd@C;-`trg;rh4&Uphaf+M'>pagkpVKU@e/>V.ge#D/5+7kcJ.!eu5HNo4<j0&-.q)fb:K<
%!m@/3R_@GWP$5P8au4:p=Tclmh085SJ;eO)"u\6oZ!ipR,/uLg\Ep<5.renhSXABk8pkPQ_&1Oqk7/7RWDR-qgus@4YoOir57ATH
%TmjN[B^5,GQ/dq'*$<GLVqbXd"1*W(k@c:6,aM)%O7[U@S5lqSm4j:;2hnpq"$1gEg"Bk\=#,a4=:r/<inI+oFf"u7#<j6fTe<E=
%EA`eW:f`F`]$@=oVqUd-X/CQORWc+7;s?Nk_@,+,/;uGQY-"uVm:l9!lf]3`a3`](ppRHaX8T^U#KP29*7ek_I"$#8RtOgi5/;oA
%WC5Yu!Fai6+ECo=S!4lfOH,n+?:^jKetrJh5cH^c<#B2^CTc*_WTsjeY!;,(7VTlm"!X]Va-<&8+@gt35lEWp&^r9!dS,hX!NETq
%RmE7l!C6c+FIYY76Wku@=&Uo2pWDqlfRVH`jPr=t)k];d_S@9Y5\B@<<0gutJqdBn,]fKE7qR>E7fa+4fE/nl+4-*\D2CrLX,.g2
%7r$Mp1*sF`>t@Cp$l>kmH:N3$od1[oe.kIfaf%EX>hd5d<)`V*@tc?YLL*2dCq0?F,#>C'$OFp4!VR^YB13CTNTkIK%6VH/6;'cd
%%a>,6G2aA,/T@mROBb6T*WQ:5aFQ@^OjRshd538BeKBrjE?RIfl>&E4%'9cOQYcuENa8E&!$]&^8-qZ':=TQE1&D]7&K>KP8/&gj
%iC+@jQ3ZC$R?VAM>>?&9/Xj(^B]M(J!O)NRjJI!_*/R51T2i$t48RL+@#60-<CAp8k:+Lp:J!a=R88)mBSU/Sm`a#j_BY@>;bQuM
%o!kaa/[f3rQZ!r#AJst@T3?EH/FQ2c'd+`22aMh<+gA+[)]eGD!"W(<eVU>LXE(TRbgCK4*I93aeZ;dP>:"-/\Q/I.=`CKu2)<_o
%3VLUa2:(p*(=F+!a4T5oq<]NN]&JbrV8kVMhdas]`O^9(,[4$IP^n1sK$1iqi<`gpRVuML`Pt)K1qX=d(jrCTSGVGp1_`r.jmIFO
%]M(a6ks;S/3)[\n*/&0EXDs94ld9m#o<Cami<u)q.4%c=]Xo3o+W)Y8>`XUiPajAMe"StL^:>9bE=@0a@>j\_l"&DCdFpP2"(:I3
%cN=1(m[Wj!+X@NA5/[`b6pg!&e1gTq1+EpiN[-oggk$*N`/EXV@[2Di!$H!(\/c]>M\dJ1m=^L$UuJ3?k&p%0^2]-fAJ@"[2m6_"
%W;(K)3\[j*\_=V0KC<7*]ai8k`H(K0=NCW]<JNI;[?:`B*D.E\(EKT#!K2cDmF-Bg.#I&'?:WJOb,6Ba_K`T.?>\ccFYpeP4&$e.
%k1i'M,_!"6ddP)8@UP"B3c$DCJa'NPPM@"I(%4mfe*,r3\1aL!Xj>r-JB%H0rH&aB7Vgmm1\UCYMX\YbKTBa-;r/&=@@<6>o<VtH
%.-8n+P5VpJmL"7JD4/6%R0RA-k'Oq>QBa&6]2E'ka2lk,#iAqoX"2^ir]_L_TdG^Fn^NQG8QK\2j^qMcV^>\dC6bsLb>rso-1;`R
%f3VRc@SMnnTr]F/N1F_tXm'rOlV3%NcGj2WT7:JCLH2GlCLqtYaKcC&$6CB^FnlGI3.[T`#8Vg`a&;Q''ZjA+B.LUHML[+&La47o
%\?uf@JJ*CT=43JarJDAdJ)0""))%Xb;&+3lRRB&?d3_.&d_'e:F('LincN4[XN$g/;Z4P0kq@MYkJ-rNn,N6V5(<N-^\uE\J+kU'
%rW:`Er)prggGOmRrUT-$p\WkHdr56EbFe^_?iBQUj*uLUYJ:&7YL3,@^\e<nrCd&1cijZIP&,D7QFsDF'P\ql4i3$AA2oQ;og^9'
%rH\RXe-F@?bXPgE1#fCOhS:I<-Db^9$H;OGR%dr,9f9;X_uWK8VBl;,alh57j'`O[%I]8qo$JYjhtkbF0CIZ##,Pun`rhUh*=m*k
%3:k^k2qNJHk%hs-&p\05$#Lg2C2qt<6l_B!dG5d'%[ddpbpQi%,7aV-]_ADab^smeSRFVd<SjB,N_/fahASmHP!^^_HfHCTRUgUk
%Q6JW_?QX6NCt?$^9(J)Cd37N"F4bSArM.l6SN$^inil;q/k-+eGC+*H6S1e?q\uUdn_+#Y2o^q,emIko[WG#jYKJ$WU--UJjqXHX
%FQ$=M(mp'#Sp:0f$59^C@94)uY]Q72ZW#`7:Uhp;'l39_8*k7CIVV+k)*XJN=Bd5BHYJJID.OL;)HEoDJ*&Vt2EikX*H/Eqb;>4r
%O<2$+N</Sr7*Z$;Yk(6Wg[U'&2fsPe1d;4c"`GVgCfTOR,\3!>$-6LG'*]H?_2r6qNn;_8S)[Hhac[^i1L*$&J0/b;C_GiU!@&Xe
%e7[g%<7JFRq0E.$fZq0p<Si\oR3#it^WQCJ\/kmRC][qF4l.*0G66(+*fZk9pr_S_^'f+ZhMGUjnH9s")"C]N;-@5VnO+JbGlH[-
%NYh1K&h+n$A`>;"ehK:l-Kcr6F>1HY.b(VP+pZ3@)i-Se]dCqi't$55W.n!MA0`Ni]Z:<-6DPk3Gh9sZ0+r4iFDosmdNVn!_c9MT
%<GZuHNPY^r]V%eV%K`hn4&kEaTUq-YNcHJP$q-Fs"WYRI]?h5A.3_!&6^dX`o<PFPRHB<D_&m:.Q!9>*E<k-J"QMT_YBB.DC\7:[
%1(*;KRA-B?<.k:oJ%si;'`NqZo;qVYB5DT-qXk%:ZUep<<KMe?M<cq&O3*7-"ftc-Hf3)<MfS+Xoo>cjFP3[ti>iU>,*1j2o()88
%%4ktF*fXf)LP<<i6,&up7/@WDfbq;dX%L,?*)]%M1M[d3H4_+![lAh<1shZ>E?Oi[MSEMb]qm'$lCZ8Vf0=NjH#(,.drK-%D2o\i
%f]Vma'@YA'8/*?FZ>$tac!!N`0-Ku?jnLU2K.j_(`4t.orPGo2FVlKN)oekrf5.bROT'Q+q'URB%^cq1%bmeH%Z<oF:V*'NS+S2.
%.?4XK:LfS#n/SW]pe$dkd`j\*Rt+cW:L[6Rg0Chk&+g^_PcKpNo@!;sj.lEa0'En(YapM[K;YIfL5:(HgWpFp[6\Y7EUsVU'%qr#
%iW+u(PbN($W5Cl@53BsNgIdX@C>8/"a2k<H;Jou.dDqnuc&Y^dS!.+rph73;+B9G;0<jCa>85fmHr*6:?/an@0EcKAL`5U$S_T1`
%?/OS#bhUTfR$/<mO7nd2\*;7[MsqI*=7Ej(U/kA)(,bDI4$aT-``"DlE,AjG7\M/T2#dARHc85Ln,MYNn,N*b^\l';5PajD+92,:
%po?XXns<__jHk?8_lm,4or%[^EUJ8Oqd1r5Q[`4hof'Y]+7HuDQQL_OB7I@??i66ts20otm<?>EVp?H7pW%dU&-)Rns8CuE?iT7I
%fQ@,f5M)OAr57uPr9)u;p3/`Mq<*8*mJd3=:.L(Hr8MYoo7-\u5Pi.4&6XJ~>
%AI9_PrivateDataEnd
